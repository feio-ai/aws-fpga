#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 5 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 34 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 35 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(524);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[5346].first = 1;
        (*_glb_hdl_sc_channel_map)[5346].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[5329].first = 1;
        (*_glb_hdl_sc_channel_map)[5329].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[5359].first = 1;
        (*_glb_hdl_sc_channel_map)[5359].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[5358].first = 1;
        (*_glb_hdl_sc_channel_map)[5358].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[5292].first = 1;
        (*_glb_hdl_sc_channel_map)[5292].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[5291].first = 1;
        (*_glb_hdl_sc_channel_map)[5291].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(6427592);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[5360].first = 3;
        (*_glb_hdl_sc_channel_map)[5360].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[5378].first = 1;
        (*_glb_hdl_sc_channel_map)[5378].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[5372].first = 3;
        (*_glb_hdl_sc_channel_map)[5372].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[5366].first = 3;
        (*_glb_hdl_sc_channel_map)[5366].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[5390].first = 1;
        (*_glb_hdl_sc_channel_map)[5390].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(6427928);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(6427984);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[5379].first = 1;
        (*_glb_hdl_sc_channel_map)[5379].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[5373].first = 3;
        (*_glb_hdl_sc_channel_map)[5373].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[5367].first = 3;
        (*_glb_hdl_sc_channel_map)[5367].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[5391].first = 1;
        (*_glb_hdl_sc_channel_map)[5391].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[5362].first = 3;
        (*_glb_hdl_sc_channel_map)[5362].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(6428320);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[5380].first = 1;
        (*_glb_hdl_sc_channel_map)[5380].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[5374].first = 3;
        (*_glb_hdl_sc_channel_map)[5374].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[5368].first = 3;
        (*_glb_hdl_sc_channel_map)[5368].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[5392].first = 1;
        (*_glb_hdl_sc_channel_map)[5392].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map)[5363].first = 3;
        (*_glb_hdl_sc_channel_map)[5363].second.push_front(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(6428656);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map)[5381].first = 1;
        (*_glb_hdl_sc_channel_map)[5381].second.push_front(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map)[5375].first = 3;
        (*_glb_hdl_sc_channel_map)[5375].second.push_front(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map)[5369].first = 3;
        (*_glb_hdl_sc_channel_map)[5369].second.push_front(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map)[5393].first = 1;
        (*_glb_hdl_sc_channel_map)[5393].second.push_front(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map)[5364].first = 3;
        (*_glb_hdl_sc_channel_map)[5364].second.push_front(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(6428992);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map)[5382].first = 1;
        (*_glb_hdl_sc_channel_map)[5382].second.push_front(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map)[5376].first = 3;
        (*_glb_hdl_sc_channel_map)[5376].second.push_front(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map)[5370].first = 3;
        (*_glb_hdl_sc_channel_map)[5370].second.push_front(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map)[5394].first = 1;
        (*_glb_hdl_sc_channel_map)[5394].second.push_front(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map)[5365].first = 3;
        (*_glb_hdl_sc_channel_map)[5365].second.push_front(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(6429328);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map)[5383].first = 1;
        (*_glb_hdl_sc_channel_map)[5383].second.push_front(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map)[5377].first = 3;
        (*_glb_hdl_sc_channel_map)[5377].second.push_front(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map)[5371].first = 3;
        (*_glb_hdl_sc_channel_map)[5371].second.push_front(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map)[5395].first = 1;
        (*_glb_hdl_sc_channel_map)[5395].second.push_front(p_1_trace_tvalid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5296].first = 3;
        (*_glb_hdl_sc_channel_map)[5296].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5298].first = 1;
        (*_glb_hdl_sc_channel_map)[5298].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6429720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5306].first = 3;
        (*_glb_hdl_sc_channel_map)[5306].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5308].first = 3;
        (*_glb_hdl_sc_channel_map)[5308].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5309].first = 1;
        (*_glb_hdl_sc_channel_map)[5309].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6429944);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6430000);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5299].first = 1;
        (*_glb_hdl_sc_channel_map)[5299].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6430112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5293].first = 3;
        (*_glb_hdl_sc_channel_map)[5293].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5295].first = 1;
        (*_glb_hdl_sc_channel_map)[5295].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6430280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6430336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6430392);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6430448);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5303].first = 1;
        (*_glb_hdl_sc_channel_map)[5303].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[5313].first = 3;
        (*_glb_hdl_sc_channel_map)[5313].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[5315].first = 1;
        (*_glb_hdl_sc_channel_map)[5315].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(6430672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[5323].first = 3;
        (*_glb_hdl_sc_channel_map)[5323].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[5325].first = 3;
        (*_glb_hdl_sc_channel_map)[5325].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[5326].first = 1;
        (*_glb_hdl_sc_channel_map)[5326].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(6430896);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(6430952);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[5316].first = 1;
        (*_glb_hdl_sc_channel_map)[5316].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(6431064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[5310].first = 3;
        (*_glb_hdl_sc_channel_map)[5310].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[5312].first = 1;
        (*_glb_hdl_sc_channel_map)[5312].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(6431232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(6431288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(6431344);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(6431400);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[5320].first = 1;
        (*_glb_hdl_sc_channel_map)[5320].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[5335].first = 3;
        (*_glb_hdl_sc_channel_map)[5335].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[5341].first = 1;
        (*_glb_hdl_sc_channel_map)[5341].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(6431624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[5338].first = 3;
        (*_glb_hdl_sc_channel_map)[5338].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[5340].first = 3;
        (*_glb_hdl_sc_channel_map)[5340].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[5336].first = 3;
        (*_glb_hdl_sc_channel_map)[5336].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[5337].first = 3;
        (*_glb_hdl_sc_channel_map)[5337].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[5353].first = 3;
        (*_glb_hdl_sc_channel_map)[5353].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[5356].first = 3;
        (*_glb_hdl_sc_channel_map)[5356].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[5357].first = 1;
        (*_glb_hdl_sc_channel_map)[5357].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(6432072);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(6432128);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[5343].first = 1;
        (*_glb_hdl_sc_channel_map)[5343].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[5354].first = 1;
        (*_glb_hdl_sc_channel_map)[5354].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(6432296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(6432352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(6432408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[5327].first = 3;
        (*_glb_hdl_sc_channel_map)[5327].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[5334].first = 1;
        (*_glb_hdl_sc_channel_map)[5334].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(6432576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[5331].first = 3;
        (*_glb_hdl_sc_channel_map)[5331].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[5333].first = 3;
        (*_glb_hdl_sc_channel_map)[5333].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[5328].first = 3;
        (*_glb_hdl_sc_channel_map)[5328].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[5330].first = 3;
        (*_glb_hdl_sc_channel_map)[5330].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(6432856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(6432912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(6432968);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(6433024);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[5350].first = 1;
        (*_glb_hdl_sc_channel_map)[5350].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(525);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[5417].first = 1;
        (*_glb_hdl_sc_channel_map)[5417].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5418].first = 1;
        (*_glb_hdl_sc_channel_map)[5418].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[5438].first = 1;
        (*_glb_hdl_sc_channel_map)[5438].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[5439].first = 1;
        (*_glb_hdl_sc_channel_map)[5439].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5423].first = 3;
        (*_glb_hdl_sc_channel_map)[5423].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5424].first = 3;
        (*_glb_hdl_sc_channel_map)[5424].second.push_front(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5426].first = 1;
        (*_glb_hdl_sc_channel_map)[5426].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6433576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5434].first = 3;
        (*_glb_hdl_sc_channel_map)[5434].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5436].first = 3;
        (*_glb_hdl_sc_channel_map)[5436].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5437].first = 1;
        (*_glb_hdl_sc_channel_map)[5437].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6433800);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6433856);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5427].first = 1;
        (*_glb_hdl_sc_channel_map)[5427].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6433968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5419].first = 3;
        (*_glb_hdl_sc_channel_map)[5419].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5420].first = 3;
        (*_glb_hdl_sc_channel_map)[5420].second.push_front(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5422].first = 1;
        (*_glb_hdl_sc_channel_map)[5422].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6434192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6434248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6434304);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6434360);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5431].first = 1;
        (*_glb_hdl_sc_channel_map)[5431].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5405].first = 1;
        (*_glb_hdl_sc_channel_map)[5405].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5404].first = 1;
        (*_glb_hdl_sc_channel_map)[5404].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1575].first = 3;
        (*_glb_hdl_sc_channel_map)[1575].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5416].first = 1;
        (*_glb_hdl_sc_channel_map)[5416].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5414].first = 1;
        (*_glb_hdl_sc_channel_map)[5414].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5413].first = 3;
        (*_glb_hdl_sc_channel_map)[5413].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5415].first = 3;
        (*_glb_hdl_sc_channel_map)[5415].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5403].first = 1;
        (*_glb_hdl_sc_channel_map)[5403].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5402].first = 1;
        (*_glb_hdl_sc_channel_map)[5402].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1576].first = 3;
        (*_glb_hdl_sc_channel_map)[1576].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5412].first = 1;
        (*_glb_hdl_sc_channel_map)[5412].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5410].first = 1;
        (*_glb_hdl_sc_channel_map)[5410].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5409].first = 3;
        (*_glb_hdl_sc_channel_map)[5409].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5411].first = 3;
        (*_glb_hdl_sc_channel_map)[5411].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5408].first = 1;
        (*_glb_hdl_sc_channel_map)[5408].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5406].first = 1;
        (*_glb_hdl_sc_channel_map)[5406].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5407].first = 3;
        (*_glb_hdl_sc_channel_map)[5407].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[5400].first = 3;
        (*_glb_hdl_sc_channel_map)[5400].second.push_front(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(6435480);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(6435536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(6435592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(6435648);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(6435704);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(526);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[5477].first = 1;
        (*_glb_hdl_sc_channel_map)[5477].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5478].first = 1;
        (*_glb_hdl_sc_channel_map)[5478].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[5513].first = 1;
        (*_glb_hdl_sc_channel_map)[5513].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[5514].first = 1;
        (*_glb_hdl_sc_channel_map)[5514].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5485].first = 3;
        (*_glb_hdl_sc_channel_map)[5485].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5489].first = 1;
        (*_glb_hdl_sc_channel_map)[5489].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6436144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5505].first = 3;
        (*_glb_hdl_sc_channel_map)[5505].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5509].first = 3;
        (*_glb_hdl_sc_channel_map)[5509].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5511].first = 1;
        (*_glb_hdl_sc_channel_map)[5511].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6436368);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6436424);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5491].first = 1;
        (*_glb_hdl_sc_channel_map)[5491].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6436536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5479].first = 3;
        (*_glb_hdl_sc_channel_map)[5479].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5483].first = 1;
        (*_glb_hdl_sc_channel_map)[5483].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6436704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6436760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6436816);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6436872);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5499].first = 1;
        (*_glb_hdl_sc_channel_map)[5499].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5461].first = 1;
        (*_glb_hdl_sc_channel_map)[5461].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5459].first = 1;
        (*_glb_hdl_sc_channel_map)[5459].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5457].first = 3;
        (*_glb_hdl_sc_channel_map)[5457].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1571].first = 3;
        (*_glb_hdl_sc_channel_map)[1571].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5458].first = 3;
        (*_glb_hdl_sc_channel_map)[5458].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5460].first = 3;
        (*_glb_hdl_sc_channel_map)[5460].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1572].first = 3;
        (*_glb_hdl_sc_channel_map)[1572].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5476].first = 1;
        (*_glb_hdl_sc_channel_map)[5476].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5474].first = 1;
        (*_glb_hdl_sc_channel_map)[5474].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5472].first = 3;
        (*_glb_hdl_sc_channel_map)[5472].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5475].first = 3;
        (*_glb_hdl_sc_channel_map)[5475].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5473].first = 1;
        (*_glb_hdl_sc_channel_map)[5473].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5456].first = 1;
        (*_glb_hdl_sc_channel_map)[5456].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5454].first = 1;
        (*_glb_hdl_sc_channel_map)[5454].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5452].first = 3;
        (*_glb_hdl_sc_channel_map)[5452].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1573].first = 3;
        (*_glb_hdl_sc_channel_map)[1573].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5453].first = 3;
        (*_glb_hdl_sc_channel_map)[5453].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5455].first = 3;
        (*_glb_hdl_sc_channel_map)[5455].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1574].first = 3;
        (*_glb_hdl_sc_channel_map)[1574].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5471].first = 1;
        (*_glb_hdl_sc_channel_map)[5471].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5469].first = 1;
        (*_glb_hdl_sc_channel_map)[5469].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5466].first = 3;
        (*_glb_hdl_sc_channel_map)[5466].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5468].first = 1;
        (*_glb_hdl_sc_channel_map)[5468].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[5467].first = 3;
        (*_glb_hdl_sc_channel_map)[5467].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5470].first = 3;
        (*_glb_hdl_sc_channel_map)[5470].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5465].first = 1;
        (*_glb_hdl_sc_channel_map)[5465].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5463].first = 1;
        (*_glb_hdl_sc_channel_map)[5463].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5464].first = 3;
        (*_glb_hdl_sc_channel_map)[5464].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[5462].first = 3;
        (*_glb_hdl_sc_channel_map)[5462].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5444].first = 1;
        (*_glb_hdl_sc_channel_map)[5444].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6438664);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6438720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(6438776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6438832);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5450].first = 1;
        (*_glb_hdl_sc_channel_map)[5450].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6438944);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6439000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(6439056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6439112);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6439168);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6439224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1569].first = 3;
        (*_glb_hdl_sc_channel_map)[1569].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5486].first = 3;
        (*_glb_hdl_sc_channel_map)[5486].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5490].first = 1;
        (*_glb_hdl_sc_channel_map)[5490].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5488].first = 1;
        (*_glb_hdl_sc_channel_map)[5488].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5506].first = 3;
        (*_glb_hdl_sc_channel_map)[5506].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5510].first = 3;
        (*_glb_hdl_sc_channel_map)[5510].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5512].first = 1;
        (*_glb_hdl_sc_channel_map)[5512].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5508].first = 1;
        (*_glb_hdl_sc_channel_map)[5508].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5494].first = 3;
        (*_glb_hdl_sc_channel_map)[5494].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5496].first = 1;
        (*_glb_hdl_sc_channel_map)[5496].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5492].first = 1;
        (*_glb_hdl_sc_channel_map)[5492].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1570].first = 3;
        (*_glb_hdl_sc_channel_map)[1570].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5480].first = 3;
        (*_glb_hdl_sc_channel_map)[5480].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5484].first = 1;
        (*_glb_hdl_sc_channel_map)[5484].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5482].first = 1;
        (*_glb_hdl_sc_channel_map)[5482].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5498].first = 3;
        (*_glb_hdl_sc_channel_map)[5498].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5502].first = 3;
        (*_glb_hdl_sc_channel_map)[5502].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5504].first = 1;
        (*_glb_hdl_sc_channel_map)[5504].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5500].first = 1;
        (*_glb_hdl_sc_channel_map)[5500].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(527);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map)[5536].first = 1;
        (*_glb_hdl_sc_channel_map)[5536].second.push_front(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5537].first = 1;
        (*_glb_hdl_sc_channel_map)[5537].second.push_front(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map)[5557].first = 1;
        (*_glb_hdl_sc_channel_map)[5557].second.push_front(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map)[5558].first = 1;
        (*_glb_hdl_sc_channel_map)[5558].second.push_front(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5542].first = 3;
        (*_glb_hdl_sc_channel_map)[5542].second.push_front(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5543].first = 3;
        (*_glb_hdl_sc_channel_map)[5543].second.push_front(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5545].first = 1;
        (*_glb_hdl_sc_channel_map)[5545].second.push_front(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6440784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5553].first = 3;
        (*_glb_hdl_sc_channel_map)[5553].second.push_front(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5555].first = 3;
        (*_glb_hdl_sc_channel_map)[5555].second.push_front(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5556].first = 1;
        (*_glb_hdl_sc_channel_map)[5556].second.push_front(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6441008);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6441064);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5546].first = 1;
        (*_glb_hdl_sc_channel_map)[5546].second.push_front(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6441176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5538].first = 3;
        (*_glb_hdl_sc_channel_map)[5538].second.push_front(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5539].first = 3;
        (*_glb_hdl_sc_channel_map)[5539].second.push_front(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5541].first = 1;
        (*_glb_hdl_sc_channel_map)[5541].second.push_front(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6441400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6441456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6441512);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6441568);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5550].first = 1;
        (*_glb_hdl_sc_channel_map)[5550].second.push_front(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5524].first = 1;
        (*_glb_hdl_sc_channel_map)[5524].second.push_front(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5523].first = 1;
        (*_glb_hdl_sc_channel_map)[5523].second.push_front(p_4_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1567].first = 3;
        (*_glb_hdl_sc_channel_map)[1567].second.push_front(p_4_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5535].first = 1;
        (*_glb_hdl_sc_channel_map)[5535].second.push_front(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5533].first = 1;
        (*_glb_hdl_sc_channel_map)[5533].second.push_front(p_4_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5532].first = 3;
        (*_glb_hdl_sc_channel_map)[5532].second.push_front(p_4_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5534].first = 3;
        (*_glb_hdl_sc_channel_map)[5534].second.push_front(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5522].first = 1;
        (*_glb_hdl_sc_channel_map)[5522].second.push_front(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5521].first = 1;
        (*_glb_hdl_sc_channel_map)[5521].second.push_front(p_4_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1568].first = 3;
        (*_glb_hdl_sc_channel_map)[1568].second.push_front(p_4_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5531].first = 1;
        (*_glb_hdl_sc_channel_map)[5531].second.push_front(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5529].first = 1;
        (*_glb_hdl_sc_channel_map)[5529].second.push_front(p_4_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5528].first = 3;
        (*_glb_hdl_sc_channel_map)[5528].second.push_front(p_4_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5530].first = 3;
        (*_glb_hdl_sc_channel_map)[5530].second.push_front(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5527].first = 1;
        (*_glb_hdl_sc_channel_map)[5527].second.push_front(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5525].first = 1;
        (*_glb_hdl_sc_channel_map)[5525].second.push_front(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5526].first = 3;
        (*_glb_hdl_sc_channel_map)[5526].second.push_front(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->m_axis_tready.bind(*p_4_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[5519].first = 3;
        (*_glb_hdl_sc_channel_map)[5519].second.push_front(p_4_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_tdata.bind(*p_4_m_axis_tdata);
        p_4_m_axis_tdata->set_sv_netview_offsetfromdp(6442688);
        xsim_sc_channel<0, bool > *p_4_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_tlast.bind(*p_4_m_axis_tlast);
        p_4_m_axis_tlast->set_sv_netview_offsetfromdp(6442744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_tid.bind(*p_4_m_axis_tid);
        p_4_m_axis_tid->set_sv_netview_offsetfromdp(6442800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_tdest.bind(*p_4_m_axis_tdest);
        p_4_m_axis_tdest->set_sv_netview_offsetfromdp(6442856);
        xsim_sc_channel<0, bool > *p_4_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_tvalid.bind(*p_4_m_axis_tvalid);
        p_4_m_axis_tvalid->set_sv_netview_offsetfromdp(6442912);
        sc_inst_5 = new pfm_dynamic_dpa_mon3_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon3");
        sc_inst_5->xsim_set_dbg_index(528);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map)[5596].first = 1;
        (*_glb_hdl_sc_channel_map)[5596].second.push_front(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5597].first = 1;
        (*_glb_hdl_sc_channel_map)[5597].second.push_front(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map)[5632].first = 1;
        (*_glb_hdl_sc_channel_map)[5632].second.push_front(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map)[5633].first = 1;
        (*_glb_hdl_sc_channel_map)[5633].second.push_front(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5604].first = 3;
        (*_glb_hdl_sc_channel_map)[5604].second.push_front(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5608].first = 1;
        (*_glb_hdl_sc_channel_map)[5608].second.push_front(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(6443352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5624].first = 3;
        (*_glb_hdl_sc_channel_map)[5624].second.push_front(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5628].first = 3;
        (*_glb_hdl_sc_channel_map)[5628].second.push_front(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5630].first = 1;
        (*_glb_hdl_sc_channel_map)[5630].second.push_front(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(6443576);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(6443632);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5610].first = 1;
        (*_glb_hdl_sc_channel_map)[5610].second.push_front(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(6443744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5598].first = 3;
        (*_glb_hdl_sc_channel_map)[5598].second.push_front(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5602].first = 1;
        (*_glb_hdl_sc_channel_map)[5602].second.push_front(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(6443912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(6443968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(6444024);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(6444080);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5618].first = 1;
        (*_glb_hdl_sc_channel_map)[5618].second.push_front(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5580].first = 1;
        (*_glb_hdl_sc_channel_map)[5580].second.push_front(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5578].first = 1;
        (*_glb_hdl_sc_channel_map)[5578].second.push_front(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5576].first = 3;
        (*_glb_hdl_sc_channel_map)[5576].second.push_front(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1563].first = 3;
        (*_glb_hdl_sc_channel_map)[1563].second.push_front(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5577].first = 3;
        (*_glb_hdl_sc_channel_map)[5577].second.push_front(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5579].first = 3;
        (*_glb_hdl_sc_channel_map)[5579].second.push_front(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1564].first = 3;
        (*_glb_hdl_sc_channel_map)[1564].second.push_front(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5595].first = 1;
        (*_glb_hdl_sc_channel_map)[5595].second.push_front(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5593].first = 1;
        (*_glb_hdl_sc_channel_map)[5593].second.push_front(p_5_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5591].first = 3;
        (*_glb_hdl_sc_channel_map)[5591].second.push_front(p_5_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5594].first = 3;
        (*_glb_hdl_sc_channel_map)[5594].second.push_front(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5592].first = 1;
        (*_glb_hdl_sc_channel_map)[5592].second.push_front(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5575].first = 1;
        (*_glb_hdl_sc_channel_map)[5575].second.push_front(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5573].first = 1;
        (*_glb_hdl_sc_channel_map)[5573].second.push_front(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5571].first = 3;
        (*_glb_hdl_sc_channel_map)[5571].second.push_front(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1565].first = 3;
        (*_glb_hdl_sc_channel_map)[1565].second.push_front(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5572].first = 3;
        (*_glb_hdl_sc_channel_map)[5572].second.push_front(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5574].first = 3;
        (*_glb_hdl_sc_channel_map)[5574].second.push_front(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1566].first = 3;
        (*_glb_hdl_sc_channel_map)[1566].second.push_front(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5590].first = 1;
        (*_glb_hdl_sc_channel_map)[5590].second.push_front(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5588].first = 1;
        (*_glb_hdl_sc_channel_map)[5588].second.push_front(p_5_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5585].first = 3;
        (*_glb_hdl_sc_channel_map)[5585].second.push_front(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5587].first = 1;
        (*_glb_hdl_sc_channel_map)[5587].second.push_front(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map)[5586].first = 3;
        (*_glb_hdl_sc_channel_map)[5586].second.push_front(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5589].first = 3;
        (*_glb_hdl_sc_channel_map)[5589].second.push_front(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5584].first = 1;
        (*_glb_hdl_sc_channel_map)[5584].second.push_front(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5582].first = 1;
        (*_glb_hdl_sc_channel_map)[5582].second.push_front(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5583].first = 3;
        (*_glb_hdl_sc_channel_map)[5583].second.push_front(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map)[5581].first = 3;
        (*_glb_hdl_sc_channel_map)[5581].second.push_front(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5563].first = 1;
        (*_glb_hdl_sc_channel_map)[5563].second.push_front(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6445872);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6445928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(6445984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6446040);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5569].first = 1;
        (*_glb_hdl_sc_channel_map)[5569].second.push_front(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6446152);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6446208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(6446264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6446320);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6446376);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6446432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1561].first = 3;
        (*_glb_hdl_sc_channel_map)[1561].second.push_front(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5605].first = 3;
        (*_glb_hdl_sc_channel_map)[5605].second.push_front(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5609].first = 1;
        (*_glb_hdl_sc_channel_map)[5609].second.push_front(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5607].first = 1;
        (*_glb_hdl_sc_channel_map)[5607].second.push_front(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5625].first = 3;
        (*_glb_hdl_sc_channel_map)[5625].second.push_front(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5629].first = 3;
        (*_glb_hdl_sc_channel_map)[5629].second.push_front(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5631].first = 1;
        (*_glb_hdl_sc_channel_map)[5631].second.push_front(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5627].first = 1;
        (*_glb_hdl_sc_channel_map)[5627].second.push_front(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5613].first = 3;
        (*_glb_hdl_sc_channel_map)[5613].second.push_front(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5615].first = 1;
        (*_glb_hdl_sc_channel_map)[5615].second.push_front(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5611].first = 1;
        (*_glb_hdl_sc_channel_map)[5611].second.push_front(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1562].first = 3;
        (*_glb_hdl_sc_channel_map)[1562].second.push_front(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5599].first = 3;
        (*_glb_hdl_sc_channel_map)[5599].second.push_front(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5603].first = 1;
        (*_glb_hdl_sc_channel_map)[5603].second.push_front(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5601].first = 1;
        (*_glb_hdl_sc_channel_map)[5601].second.push_front(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5617].first = 3;
        (*_glb_hdl_sc_channel_map)[5617].second.push_front(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5621].first = 3;
        (*_glb_hdl_sc_channel_map)[5621].second.push_front(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5623].first = 1;
        (*_glb_hdl_sc_channel_map)[5623].second.push_front(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5619].first = 1;
        (*_glb_hdl_sc_channel_map)[5619].second.push_front(p_5_s_axi_rready_mon);
        sc_inst_6 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_6->xsim_set_dbg_index(22);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map)[8196].first = 1;
        (*_glb_hdl_sc_channel_map)[8196].second.push_front(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk1.bind(*p_6_aclk1);
        (*_glb_hdl_sc_channel_map)[8197].first = 1;
        (*_glb_hdl_sc_channel_map)[8197].second.push_front(p_6_aclk1);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map)[8198].first = 1;
        (*_glb_hdl_sc_channel_map)[8198].second.push_front(p_6_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awid.bind(*p_6_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[7981].first = 3;
        (*_glb_hdl_sc_channel_map)[7981].second.push_front(p_6_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_awaddr.bind(*p_6_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[7978].first = 3;
        (*_glb_hdl_sc_channel_map)[7978].second.push_front(p_6_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_awlen.bind(*p_6_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[7982].first = 3;
        (*_glb_hdl_sc_channel_map)[7982].second.push_front(p_6_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awsize.bind(*p_6_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[7987].first = 3;
        (*_glb_hdl_sc_channel_map)[7987].second.push_front(p_6_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_awburst.bind(*p_6_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[7979].first = 3;
        (*_glb_hdl_sc_channel_map)[7979].second.push_front(p_6_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_awlock.bind(*p_6_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[7983].first = 1;
        (*_glb_hdl_sc_channel_map)[7983].second.push_front(p_6_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awcache.bind(*p_6_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[7980].first = 3;
        (*_glb_hdl_sc_channel_map)[7980].second.push_front(p_6_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awprot.bind(*p_6_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[7984].first = 3;
        (*_glb_hdl_sc_channel_map)[7984].second.push_front(p_6_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awqos.bind(*p_6_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[7985].first = 3;
        (*_glb_hdl_sc_channel_map)[7985].second.push_front(p_6_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awuser.bind(*p_6_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[7988].first = 3;
        (*_glb_hdl_sc_channel_map)[7988].second.push_front(p_6_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awvalid.bind(*p_6_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[7989].first = 3;
        (*_glb_hdl_sc_channel_map)[7989].second.push_front(p_6_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awready.bind(*p_6_S00_AXI_awready);
        p_6_S00_AXI_awready->set_sv_netview_offsetfromdp(7122704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_wdata.bind(*p_6_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8002].first = 3;
        (*_glb_hdl_sc_channel_map)[8002].second.push_front(p_6_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_wstrb.bind(*p_6_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8005].first = 3;
        (*_glb_hdl_sc_channel_map)[8005].second.push_front(p_6_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wlast.bind(*p_6_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8003].first = 3;
        (*_glb_hdl_sc_channel_map)[8003].second.push_front(p_6_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wuser.bind(*p_6_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[8006].first = 3;
        (*_glb_hdl_sc_channel_map)[8006].second.push_front(p_6_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wvalid.bind(*p_6_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8007].first = 3;
        (*_glb_hdl_sc_channel_map)[8007].second.push_front(p_6_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wready.bind(*p_6_S00_AXI_wready);
        p_6_S00_AXI_wready->set_sv_netview_offsetfromdp(7123040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bid.bind(*p_6_S00_AXI_bid);
        p_6_S00_AXI_bid->set_sv_netview_offsetfromdp(7123096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_bresp.bind(*p_6_S00_AXI_bresp);
        p_6_S00_AXI_bresp->set_sv_netview_offsetfromdp(7123152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_buser.bind(*p_6_S00_AXI_buser);
        p_6_S00_AXI_buser->set_sv_netview_offsetfromdp(7123208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bvalid.bind(*p_6_S00_AXI_bvalid);
        p_6_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7123264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bready.bind(*p_6_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[7991].first = 3;
        (*_glb_hdl_sc_channel_map)[7991].second.push_front(p_6_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arid.bind(*p_6_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[7969].first = 3;
        (*_glb_hdl_sc_channel_map)[7969].second.push_front(p_6_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_araddr.bind(*p_6_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[7966].first = 3;
        (*_glb_hdl_sc_channel_map)[7966].second.push_front(p_6_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_arlen.bind(*p_6_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[7970].first = 3;
        (*_glb_hdl_sc_channel_map)[7970].second.push_front(p_6_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arsize.bind(*p_6_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[7975].first = 3;
        (*_glb_hdl_sc_channel_map)[7975].second.push_front(p_6_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_arburst.bind(*p_6_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[7967].first = 3;
        (*_glb_hdl_sc_channel_map)[7967].second.push_front(p_6_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_arlock.bind(*p_6_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[7971].first = 1;
        (*_glb_hdl_sc_channel_map)[7971].second.push_front(p_6_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arcache.bind(*p_6_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[7968].first = 3;
        (*_glb_hdl_sc_channel_map)[7968].second.push_front(p_6_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arprot.bind(*p_6_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[7972].first = 3;
        (*_glb_hdl_sc_channel_map)[7972].second.push_front(p_6_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arqos.bind(*p_6_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[7973].first = 3;
        (*_glb_hdl_sc_channel_map)[7973].second.push_front(p_6_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_aruser.bind(*p_6_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[7976].first = 3;
        (*_glb_hdl_sc_channel_map)[7976].second.push_front(p_6_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arvalid.bind(*p_6_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[7977].first = 3;
        (*_glb_hdl_sc_channel_map)[7977].second.push_front(p_6_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arready.bind(*p_6_S00_AXI_arready);
        p_6_S00_AXI_arready->set_sv_netview_offsetfromdp(7123992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rid.bind(*p_6_S00_AXI_rid);
        p_6_S00_AXI_rid->set_sv_netview_offsetfromdp(7124048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_rdata.bind(*p_6_S00_AXI_rdata);
        p_6_S00_AXI_rdata->set_sv_netview_offsetfromdp(7124104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_rresp.bind(*p_6_S00_AXI_rresp);
        p_6_S00_AXI_rresp->set_sv_netview_offsetfromdp(7124160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rlast.bind(*p_6_S00_AXI_rlast);
        p_6_S00_AXI_rlast->set_sv_netview_offsetfromdp(7124216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_ruser.bind(*p_6_S00_AXI_ruser);
        p_6_S00_AXI_ruser->set_sv_netview_offsetfromdp(7124272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rvalid.bind(*p_6_S00_AXI_rvalid);
        p_6_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7124328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rready.bind(*p_6_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[7998].first = 3;
        (*_glb_hdl_sc_channel_map)[7998].second.push_front(p_6_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awid.bind(*p_6_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map)[8023].first = 3;
        (*_glb_hdl_sc_channel_map)[8023].second.push_front(p_6_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_awaddr.bind(*p_6_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8020].first = 3;
        (*_glb_hdl_sc_channel_map)[8020].second.push_front(p_6_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_awlen.bind(*p_6_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8024].first = 3;
        (*_glb_hdl_sc_channel_map)[8024].second.push_front(p_6_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awsize.bind(*p_6_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8029].first = 3;
        (*_glb_hdl_sc_channel_map)[8029].second.push_front(p_6_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_awburst.bind(*p_6_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[8021].first = 3;
        (*_glb_hdl_sc_channel_map)[8021].second.push_front(p_6_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_awlock.bind(*p_6_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[8025].first = 1;
        (*_glb_hdl_sc_channel_map)[8025].second.push_front(p_6_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awcache.bind(*p_6_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8022].first = 3;
        (*_glb_hdl_sc_channel_map)[8022].second.push_front(p_6_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awprot.bind(*p_6_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8026].first = 3;
        (*_glb_hdl_sc_channel_map)[8026].second.push_front(p_6_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awqos.bind(*p_6_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8027].first = 3;
        (*_glb_hdl_sc_channel_map)[8027].second.push_front(p_6_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awuser.bind(*p_6_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[8030].first = 3;
        (*_glb_hdl_sc_channel_map)[8030].second.push_front(p_6_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awvalid.bind(*p_6_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8031].first = 3;
        (*_glb_hdl_sc_channel_map)[8031].second.push_front(p_6_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awready.bind(*p_6_S01_AXI_awready);
        p_6_S01_AXI_awready->set_sv_netview_offsetfromdp(7125056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_wdata.bind(*p_6_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8044].first = 3;
        (*_glb_hdl_sc_channel_map)[8044].second.push_front(p_6_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_wstrb.bind(*p_6_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8047].first = 3;
        (*_glb_hdl_sc_channel_map)[8047].second.push_front(p_6_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wlast.bind(*p_6_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8045].first = 3;
        (*_glb_hdl_sc_channel_map)[8045].second.push_front(p_6_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wuser.bind(*p_6_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[8048].first = 3;
        (*_glb_hdl_sc_channel_map)[8048].second.push_front(p_6_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wvalid.bind(*p_6_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8049].first = 3;
        (*_glb_hdl_sc_channel_map)[8049].second.push_front(p_6_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wready.bind(*p_6_S01_AXI_wready);
        p_6_S01_AXI_wready->set_sv_netview_offsetfromdp(7125392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bid.bind(*p_6_S01_AXI_bid);
        p_6_S01_AXI_bid->set_sv_netview_offsetfromdp(7125448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_bresp.bind(*p_6_S01_AXI_bresp);
        p_6_S01_AXI_bresp->set_sv_netview_offsetfromdp(7125504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_buser.bind(*p_6_S01_AXI_buser);
        p_6_S01_AXI_buser->set_sv_netview_offsetfromdp(7125560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bvalid.bind(*p_6_S01_AXI_bvalid);
        p_6_S01_AXI_bvalid->set_sv_netview_offsetfromdp(7125616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bready.bind(*p_6_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8033].first = 3;
        (*_glb_hdl_sc_channel_map)[8033].second.push_front(p_6_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arid.bind(*p_6_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map)[8011].first = 3;
        (*_glb_hdl_sc_channel_map)[8011].second.push_front(p_6_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_araddr.bind(*p_6_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8008].first = 3;
        (*_glb_hdl_sc_channel_map)[8008].second.push_front(p_6_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_arlen.bind(*p_6_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8012].first = 3;
        (*_glb_hdl_sc_channel_map)[8012].second.push_front(p_6_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arsize.bind(*p_6_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8017].first = 3;
        (*_glb_hdl_sc_channel_map)[8017].second.push_front(p_6_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_arburst.bind(*p_6_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[8009].first = 3;
        (*_glb_hdl_sc_channel_map)[8009].second.push_front(p_6_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_arlock.bind(*p_6_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[8013].first = 1;
        (*_glb_hdl_sc_channel_map)[8013].second.push_front(p_6_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arcache.bind(*p_6_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8010].first = 3;
        (*_glb_hdl_sc_channel_map)[8010].second.push_front(p_6_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arprot.bind(*p_6_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8014].first = 3;
        (*_glb_hdl_sc_channel_map)[8014].second.push_front(p_6_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arqos.bind(*p_6_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8015].first = 3;
        (*_glb_hdl_sc_channel_map)[8015].second.push_front(p_6_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_aruser.bind(*p_6_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[8018].first = 3;
        (*_glb_hdl_sc_channel_map)[8018].second.push_front(p_6_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arvalid.bind(*p_6_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8019].first = 3;
        (*_glb_hdl_sc_channel_map)[8019].second.push_front(p_6_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arready.bind(*p_6_S01_AXI_arready);
        p_6_S01_AXI_arready->set_sv_netview_offsetfromdp(7126344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rid.bind(*p_6_S01_AXI_rid);
        p_6_S01_AXI_rid->set_sv_netview_offsetfromdp(7126400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_rdata.bind(*p_6_S01_AXI_rdata);
        p_6_S01_AXI_rdata->set_sv_netview_offsetfromdp(7126456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_rresp.bind(*p_6_S01_AXI_rresp);
        p_6_S01_AXI_rresp->set_sv_netview_offsetfromdp(7126512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rlast.bind(*p_6_S01_AXI_rlast);
        p_6_S01_AXI_rlast->set_sv_netview_offsetfromdp(7126568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_ruser.bind(*p_6_S01_AXI_ruser);
        p_6_S01_AXI_ruser->set_sv_netview_offsetfromdp(7126624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rvalid.bind(*p_6_S01_AXI_rvalid);
        p_6_S01_AXI_rvalid->set_sv_netview_offsetfromdp(7126680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rready.bind(*p_6_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8040].first = 3;
        (*_glb_hdl_sc_channel_map)[8040].second.push_front(p_6_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awid.bind(*p_6_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map)[8065].first = 3;
        (*_glb_hdl_sc_channel_map)[8065].second.push_front(p_6_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_awaddr.bind(*p_6_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8062].first = 3;
        (*_glb_hdl_sc_channel_map)[8062].second.push_front(p_6_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_awlen.bind(*p_6_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8066].first = 3;
        (*_glb_hdl_sc_channel_map)[8066].second.push_front(p_6_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awsize.bind(*p_6_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8071].first = 3;
        (*_glb_hdl_sc_channel_map)[8071].second.push_front(p_6_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_awburst.bind(*p_6_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[8063].first = 3;
        (*_glb_hdl_sc_channel_map)[8063].second.push_front(p_6_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_awlock.bind(*p_6_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[8067].first = 1;
        (*_glb_hdl_sc_channel_map)[8067].second.push_front(p_6_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awcache.bind(*p_6_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8064].first = 3;
        (*_glb_hdl_sc_channel_map)[8064].second.push_front(p_6_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awprot.bind(*p_6_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8068].first = 3;
        (*_glb_hdl_sc_channel_map)[8068].second.push_front(p_6_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awqos.bind(*p_6_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8069].first = 3;
        (*_glb_hdl_sc_channel_map)[8069].second.push_front(p_6_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awuser.bind(*p_6_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[8072].first = 3;
        (*_glb_hdl_sc_channel_map)[8072].second.push_front(p_6_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awvalid.bind(*p_6_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8073].first = 3;
        (*_glb_hdl_sc_channel_map)[8073].second.push_front(p_6_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awready.bind(*p_6_S02_AXI_awready);
        p_6_S02_AXI_awready->set_sv_netview_offsetfromdp(7127408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_wdata.bind(*p_6_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8086].first = 3;
        (*_glb_hdl_sc_channel_map)[8086].second.push_front(p_6_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_wstrb.bind(*p_6_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8089].first = 3;
        (*_glb_hdl_sc_channel_map)[8089].second.push_front(p_6_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wlast.bind(*p_6_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8087].first = 3;
        (*_glb_hdl_sc_channel_map)[8087].second.push_front(p_6_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wuser.bind(*p_6_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[8090].first = 3;
        (*_glb_hdl_sc_channel_map)[8090].second.push_front(p_6_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wvalid.bind(*p_6_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8091].first = 3;
        (*_glb_hdl_sc_channel_map)[8091].second.push_front(p_6_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wready.bind(*p_6_S02_AXI_wready);
        p_6_S02_AXI_wready->set_sv_netview_offsetfromdp(7127744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bid.bind(*p_6_S02_AXI_bid);
        p_6_S02_AXI_bid->set_sv_netview_offsetfromdp(7127800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_bresp.bind(*p_6_S02_AXI_bresp);
        p_6_S02_AXI_bresp->set_sv_netview_offsetfromdp(7127856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_buser.bind(*p_6_S02_AXI_buser);
        p_6_S02_AXI_buser->set_sv_netview_offsetfromdp(7127912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bvalid.bind(*p_6_S02_AXI_bvalid);
        p_6_S02_AXI_bvalid->set_sv_netview_offsetfromdp(7127968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bready.bind(*p_6_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8075].first = 3;
        (*_glb_hdl_sc_channel_map)[8075].second.push_front(p_6_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arid.bind(*p_6_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map)[8053].first = 3;
        (*_glb_hdl_sc_channel_map)[8053].second.push_front(p_6_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_araddr.bind(*p_6_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8050].first = 3;
        (*_glb_hdl_sc_channel_map)[8050].second.push_front(p_6_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_arlen.bind(*p_6_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8054].first = 3;
        (*_glb_hdl_sc_channel_map)[8054].second.push_front(p_6_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arsize.bind(*p_6_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8059].first = 3;
        (*_glb_hdl_sc_channel_map)[8059].second.push_front(p_6_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_arburst.bind(*p_6_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[8051].first = 3;
        (*_glb_hdl_sc_channel_map)[8051].second.push_front(p_6_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_arlock.bind(*p_6_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[8055].first = 1;
        (*_glb_hdl_sc_channel_map)[8055].second.push_front(p_6_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arcache.bind(*p_6_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8052].first = 3;
        (*_glb_hdl_sc_channel_map)[8052].second.push_front(p_6_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arprot.bind(*p_6_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8056].first = 3;
        (*_glb_hdl_sc_channel_map)[8056].second.push_front(p_6_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arqos.bind(*p_6_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8057].first = 3;
        (*_glb_hdl_sc_channel_map)[8057].second.push_front(p_6_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_aruser.bind(*p_6_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[8060].first = 3;
        (*_glb_hdl_sc_channel_map)[8060].second.push_front(p_6_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arvalid.bind(*p_6_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8061].first = 3;
        (*_glb_hdl_sc_channel_map)[8061].second.push_front(p_6_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arready.bind(*p_6_S02_AXI_arready);
        p_6_S02_AXI_arready->set_sv_netview_offsetfromdp(7128696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rid.bind(*p_6_S02_AXI_rid);
        p_6_S02_AXI_rid->set_sv_netview_offsetfromdp(7128752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_rdata.bind(*p_6_S02_AXI_rdata);
        p_6_S02_AXI_rdata->set_sv_netview_offsetfromdp(7128808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_rresp.bind(*p_6_S02_AXI_rresp);
        p_6_S02_AXI_rresp->set_sv_netview_offsetfromdp(7128864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rlast.bind(*p_6_S02_AXI_rlast);
        p_6_S02_AXI_rlast->set_sv_netview_offsetfromdp(7128920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_ruser.bind(*p_6_S02_AXI_ruser);
        p_6_S02_AXI_ruser->set_sv_netview_offsetfromdp(7128976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rvalid.bind(*p_6_S02_AXI_rvalid);
        p_6_S02_AXI_rvalid->set_sv_netview_offsetfromdp(7129032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rready.bind(*p_6_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8082].first = 3;
        (*_glb_hdl_sc_channel_map)[8082].second.push_front(p_6_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awid.bind(*p_6_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map)[8107].first = 3;
        (*_glb_hdl_sc_channel_map)[8107].second.push_front(p_6_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_awaddr.bind(*p_6_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8104].first = 3;
        (*_glb_hdl_sc_channel_map)[8104].second.push_front(p_6_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_awlen.bind(*p_6_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8108].first = 3;
        (*_glb_hdl_sc_channel_map)[8108].second.push_front(p_6_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awsize.bind(*p_6_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8113].first = 3;
        (*_glb_hdl_sc_channel_map)[8113].second.push_front(p_6_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_awburst.bind(*p_6_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[8105].first = 3;
        (*_glb_hdl_sc_channel_map)[8105].second.push_front(p_6_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_awlock.bind(*p_6_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[8109].first = 1;
        (*_glb_hdl_sc_channel_map)[8109].second.push_front(p_6_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awcache.bind(*p_6_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8106].first = 3;
        (*_glb_hdl_sc_channel_map)[8106].second.push_front(p_6_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awprot.bind(*p_6_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8110].first = 3;
        (*_glb_hdl_sc_channel_map)[8110].second.push_front(p_6_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awqos.bind(*p_6_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8111].first = 3;
        (*_glb_hdl_sc_channel_map)[8111].second.push_front(p_6_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awuser.bind(*p_6_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[8114].first = 3;
        (*_glb_hdl_sc_channel_map)[8114].second.push_front(p_6_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awvalid.bind(*p_6_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8115].first = 3;
        (*_glb_hdl_sc_channel_map)[8115].second.push_front(p_6_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awready.bind(*p_6_S03_AXI_awready);
        p_6_S03_AXI_awready->set_sv_netview_offsetfromdp(7129760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_wdata.bind(*p_6_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8128].first = 3;
        (*_glb_hdl_sc_channel_map)[8128].second.push_front(p_6_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_wstrb.bind(*p_6_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8131].first = 3;
        (*_glb_hdl_sc_channel_map)[8131].second.push_front(p_6_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wlast.bind(*p_6_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8129].first = 3;
        (*_glb_hdl_sc_channel_map)[8129].second.push_front(p_6_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wuser.bind(*p_6_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[8132].first = 3;
        (*_glb_hdl_sc_channel_map)[8132].second.push_front(p_6_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wvalid.bind(*p_6_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8133].first = 3;
        (*_glb_hdl_sc_channel_map)[8133].second.push_front(p_6_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wready.bind(*p_6_S03_AXI_wready);
        p_6_S03_AXI_wready->set_sv_netview_offsetfromdp(7130096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bid.bind(*p_6_S03_AXI_bid);
        p_6_S03_AXI_bid->set_sv_netview_offsetfromdp(7130152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_bresp.bind(*p_6_S03_AXI_bresp);
        p_6_S03_AXI_bresp->set_sv_netview_offsetfromdp(7130208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_buser.bind(*p_6_S03_AXI_buser);
        p_6_S03_AXI_buser->set_sv_netview_offsetfromdp(7130264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bvalid.bind(*p_6_S03_AXI_bvalid);
        p_6_S03_AXI_bvalid->set_sv_netview_offsetfromdp(7130320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bready.bind(*p_6_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8117].first = 3;
        (*_glb_hdl_sc_channel_map)[8117].second.push_front(p_6_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arid.bind(*p_6_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map)[8095].first = 3;
        (*_glb_hdl_sc_channel_map)[8095].second.push_front(p_6_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_araddr.bind(*p_6_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8092].first = 3;
        (*_glb_hdl_sc_channel_map)[8092].second.push_front(p_6_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_arlen.bind(*p_6_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8096].first = 3;
        (*_glb_hdl_sc_channel_map)[8096].second.push_front(p_6_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arsize.bind(*p_6_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8101].first = 3;
        (*_glb_hdl_sc_channel_map)[8101].second.push_front(p_6_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_arburst.bind(*p_6_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[8093].first = 3;
        (*_glb_hdl_sc_channel_map)[8093].second.push_front(p_6_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_arlock.bind(*p_6_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[8097].first = 1;
        (*_glb_hdl_sc_channel_map)[8097].second.push_front(p_6_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arcache.bind(*p_6_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8094].first = 3;
        (*_glb_hdl_sc_channel_map)[8094].second.push_front(p_6_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arprot.bind(*p_6_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8098].first = 3;
        (*_glb_hdl_sc_channel_map)[8098].second.push_front(p_6_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arqos.bind(*p_6_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8099].first = 3;
        (*_glb_hdl_sc_channel_map)[8099].second.push_front(p_6_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_aruser.bind(*p_6_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[8102].first = 3;
        (*_glb_hdl_sc_channel_map)[8102].second.push_front(p_6_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arvalid.bind(*p_6_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8103].first = 3;
        (*_glb_hdl_sc_channel_map)[8103].second.push_front(p_6_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arready.bind(*p_6_S03_AXI_arready);
        p_6_S03_AXI_arready->set_sv_netview_offsetfromdp(7131048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rid.bind(*p_6_S03_AXI_rid);
        p_6_S03_AXI_rid->set_sv_netview_offsetfromdp(7131104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_rdata.bind(*p_6_S03_AXI_rdata);
        p_6_S03_AXI_rdata->set_sv_netview_offsetfromdp(7131160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_rresp.bind(*p_6_S03_AXI_rresp);
        p_6_S03_AXI_rresp->set_sv_netview_offsetfromdp(7131216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rlast.bind(*p_6_S03_AXI_rlast);
        p_6_S03_AXI_rlast->set_sv_netview_offsetfromdp(7131272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_ruser.bind(*p_6_S03_AXI_ruser);
        p_6_S03_AXI_ruser->set_sv_netview_offsetfromdp(7131328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rvalid.bind(*p_6_S03_AXI_rvalid);
        p_6_S03_AXI_rvalid->set_sv_netview_offsetfromdp(7131384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rready.bind(*p_6_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8124].first = 3;
        (*_glb_hdl_sc_channel_map)[8124].second.push_front(p_6_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_awaddr.bind(*p_6_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8143].first = 3;
        (*_glb_hdl_sc_channel_map)[8143].second.push_front(p_6_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_awlen.bind(*p_6_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8145].first = 3;
        (*_glb_hdl_sc_channel_map)[8145].second.push_front(p_6_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awsize.bind(*p_6_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8150].first = 3;
        (*_glb_hdl_sc_channel_map)[8150].second.push_front(p_6_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_awlock.bind(*p_6_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1273].first = 1;
        (*_glb_hdl_sc_channel_map)[1273].second.push_front(p_6_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awcache.bind(*p_6_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8144].first = 3;
        (*_glb_hdl_sc_channel_map)[8144].second.push_front(p_6_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awprot.bind(*p_6_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8146].first = 3;
        (*_glb_hdl_sc_channel_map)[8146].second.push_front(p_6_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awregion.bind(*p_6_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[8149].first = 3;
        (*_glb_hdl_sc_channel_map)[8149].second.push_front(p_6_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awqos.bind(*p_6_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8147].first = 3;
        (*_glb_hdl_sc_channel_map)[8147].second.push_front(p_6_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awvalid.bind(*p_6_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8151].first = 3;
        (*_glb_hdl_sc_channel_map)[8151].second.push_front(p_6_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awready.bind(*p_6_S04_AXI_awready);
        p_6_S04_AXI_awready->set_sv_netview_offsetfromdp(7132000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S04_AXI_wdata.bind(*p_6_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8160].first = 3;
        (*_glb_hdl_sc_channel_map)[8160].second.push_front(p_6_S04_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_wstrb.bind(*p_6_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8163].first = 3;
        (*_glb_hdl_sc_channel_map)[8163].second.push_front(p_6_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wlast.bind(*p_6_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8161].first = 3;
        (*_glb_hdl_sc_channel_map)[8161].second.push_front(p_6_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wvalid.bind(*p_6_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8164].first = 3;
        (*_glb_hdl_sc_channel_map)[8164].second.push_front(p_6_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wready.bind(*p_6_S04_AXI_wready);
        p_6_S04_AXI_wready->set_sv_netview_offsetfromdp(7132280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_bresp.bind(*p_6_S04_AXI_bresp);
        p_6_S04_AXI_bresp->set_sv_netview_offsetfromdp(7132336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bvalid.bind(*p_6_S04_AXI_bvalid);
        p_6_S04_AXI_bvalid->set_sv_netview_offsetfromdp(7132392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bready.bind(*p_6_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8152].first = 3;
        (*_glb_hdl_sc_channel_map)[8152].second.push_front(p_6_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_araddr.bind(*p_6_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8134].first = 3;
        (*_glb_hdl_sc_channel_map)[8134].second.push_front(p_6_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_arlen.bind(*p_6_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8136].first = 3;
        (*_glb_hdl_sc_channel_map)[8136].second.push_front(p_6_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arsize.bind(*p_6_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8141].first = 3;
        (*_glb_hdl_sc_channel_map)[8141].second.push_front(p_6_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_arlock.bind(*p_6_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1274].first = 1;
        (*_glb_hdl_sc_channel_map)[1274].second.push_front(p_6_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arcache.bind(*p_6_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8135].first = 3;
        (*_glb_hdl_sc_channel_map)[8135].second.push_front(p_6_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arprot.bind(*p_6_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8137].first = 3;
        (*_glb_hdl_sc_channel_map)[8137].second.push_front(p_6_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arregion.bind(*p_6_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[8140].first = 3;
        (*_glb_hdl_sc_channel_map)[8140].second.push_front(p_6_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arqos.bind(*p_6_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8138].first = 3;
        (*_glb_hdl_sc_channel_map)[8138].second.push_front(p_6_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arvalid.bind(*p_6_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8142].first = 3;
        (*_glb_hdl_sc_channel_map)[8142].second.push_front(p_6_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arready.bind(*p_6_S04_AXI_arready);
        p_6_S04_AXI_arready->set_sv_netview_offsetfromdp(7133008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S04_AXI_rdata.bind(*p_6_S04_AXI_rdata);
        p_6_S04_AXI_rdata->set_sv_netview_offsetfromdp(7133064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_rresp.bind(*p_6_S04_AXI_rresp);
        p_6_S04_AXI_rresp->set_sv_netview_offsetfromdp(7133120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rlast.bind(*p_6_S04_AXI_rlast);
        p_6_S04_AXI_rlast->set_sv_netview_offsetfromdp(7133176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rvalid.bind(*p_6_S04_AXI_rvalid);
        p_6_S04_AXI_rvalid->set_sv_netview_offsetfromdp(7133232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rready.bind(*p_6_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8157].first = 3;
        (*_glb_hdl_sc_channel_map)[8157].second.push_front(p_6_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_awaddr.bind(*p_6_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8174].first = 3;
        (*_glb_hdl_sc_channel_map)[8174].second.push_front(p_6_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_awlen.bind(*p_6_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8176].first = 3;
        (*_glb_hdl_sc_channel_map)[8176].second.push_front(p_6_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awsize.bind(*p_6_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8181].first = 3;
        (*_glb_hdl_sc_channel_map)[8181].second.push_front(p_6_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_awlock.bind(*p_6_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1271].first = 1;
        (*_glb_hdl_sc_channel_map)[1271].second.push_front(p_6_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awcache.bind(*p_6_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8175].first = 3;
        (*_glb_hdl_sc_channel_map)[8175].second.push_front(p_6_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awprot.bind(*p_6_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8177].first = 3;
        (*_glb_hdl_sc_channel_map)[8177].second.push_front(p_6_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awregion.bind(*p_6_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[8180].first = 3;
        (*_glb_hdl_sc_channel_map)[8180].second.push_front(p_6_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awqos.bind(*p_6_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8178].first = 3;
        (*_glb_hdl_sc_channel_map)[8178].second.push_front(p_6_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awvalid.bind(*p_6_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8182].first = 3;
        (*_glb_hdl_sc_channel_map)[8182].second.push_front(p_6_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awready.bind(*p_6_S05_AXI_awready);
        p_6_S05_AXI_awready->set_sv_netview_offsetfromdp(7133848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S05_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S05_AXI_wdata.bind(*p_6_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8191].first = 3;
        (*_glb_hdl_sc_channel_map)[8191].second.push_front(p_6_S05_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_wstrb.bind(*p_6_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8194].first = 3;
        (*_glb_hdl_sc_channel_map)[8194].second.push_front(p_6_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wlast.bind(*p_6_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8192].first = 3;
        (*_glb_hdl_sc_channel_map)[8192].second.push_front(p_6_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wvalid.bind(*p_6_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8195].first = 3;
        (*_glb_hdl_sc_channel_map)[8195].second.push_front(p_6_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wready.bind(*p_6_S05_AXI_wready);
        p_6_S05_AXI_wready->set_sv_netview_offsetfromdp(7134128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_bresp.bind(*p_6_S05_AXI_bresp);
        p_6_S05_AXI_bresp->set_sv_netview_offsetfromdp(7134184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bvalid.bind(*p_6_S05_AXI_bvalid);
        p_6_S05_AXI_bvalid->set_sv_netview_offsetfromdp(7134240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bready.bind(*p_6_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8183].first = 3;
        (*_glb_hdl_sc_channel_map)[8183].second.push_front(p_6_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_araddr.bind(*p_6_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8165].first = 3;
        (*_glb_hdl_sc_channel_map)[8165].second.push_front(p_6_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_arlen.bind(*p_6_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8167].first = 3;
        (*_glb_hdl_sc_channel_map)[8167].second.push_front(p_6_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arsize.bind(*p_6_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8172].first = 3;
        (*_glb_hdl_sc_channel_map)[8172].second.push_front(p_6_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_arlock.bind(*p_6_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1272].first = 1;
        (*_glb_hdl_sc_channel_map)[1272].second.push_front(p_6_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arcache.bind(*p_6_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8166].first = 3;
        (*_glb_hdl_sc_channel_map)[8166].second.push_front(p_6_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arprot.bind(*p_6_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8168].first = 3;
        (*_glb_hdl_sc_channel_map)[8168].second.push_front(p_6_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arregion.bind(*p_6_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[8171].first = 3;
        (*_glb_hdl_sc_channel_map)[8171].second.push_front(p_6_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arqos.bind(*p_6_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8169].first = 3;
        (*_glb_hdl_sc_channel_map)[8169].second.push_front(p_6_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arvalid.bind(*p_6_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8173].first = 3;
        (*_glb_hdl_sc_channel_map)[8173].second.push_front(p_6_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arready.bind(*p_6_S05_AXI_arready);
        p_6_S05_AXI_arready->set_sv_netview_offsetfromdp(7134856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S05_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S05_AXI_rdata.bind(*p_6_S05_AXI_rdata);
        p_6_S05_AXI_rdata->set_sv_netview_offsetfromdp(7134912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_rresp.bind(*p_6_S05_AXI_rresp);
        p_6_S05_AXI_rresp->set_sv_netview_offsetfromdp(7134968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rlast.bind(*p_6_S05_AXI_rlast);
        p_6_S05_AXI_rlast->set_sv_netview_offsetfromdp(7135024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rvalid.bind(*p_6_S05_AXI_rvalid);
        p_6_S05_AXI_rvalid->set_sv_netview_offsetfromdp(7135080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rready.bind(*p_6_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8188].first = 3;
        (*_glb_hdl_sc_channel_map)[8188].second.push_front(p_6_S05_AXI_rready);
        xsim_sc_channel<0, bool > *p_6_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_6->ddr4_mem_calib_complete.bind(*p_6_ddr4_mem_calib_complete);
        p_6_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(7135192);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_awid.bind(*p_6_M00_AXI_awid);
        p_6_M00_AXI_awid->set_sv_netview_offsetfromdp(7135248);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_awaddr.bind(*p_6_M00_AXI_awaddr);
        p_6_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7135304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_awlen.bind(*p_6_M00_AXI_awlen);
        p_6_M00_AXI_awlen->set_sv_netview_offsetfromdp(7135360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awsize.bind(*p_6_M00_AXI_awsize);
        p_6_M00_AXI_awsize->set_sv_netview_offsetfromdp(7135416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_awburst.bind(*p_6_M00_AXI_awburst);
        p_6_M00_AXI_awburst->set_sv_netview_offsetfromdp(7135472);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_awlock.bind(*p_6_M00_AXI_awlock);
        p_6_M00_AXI_awlock->set_sv_netview_offsetfromdp(7135528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awcache.bind(*p_6_M00_AXI_awcache);
        p_6_M00_AXI_awcache->set_sv_netview_offsetfromdp(7135584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awprot.bind(*p_6_M00_AXI_awprot);
        p_6_M00_AXI_awprot->set_sv_netview_offsetfromdp(7135640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awqos.bind(*p_6_M00_AXI_awqos);
        p_6_M00_AXI_awqos->set_sv_netview_offsetfromdp(7135696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_awuser.bind(*p_6_M00_AXI_awuser);
        p_6_M00_AXI_awuser->set_sv_netview_offsetfromdp(7135752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awvalid.bind(*p_6_M00_AXI_awvalid);
        p_6_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7135808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awready.bind(*p_6_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map)[7833].first = 3;
        (*_glb_hdl_sc_channel_map)[7833].second.push_front(p_6_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_wdata.bind(*p_6_M00_AXI_wdata);
        p_6_M00_AXI_wdata->set_sv_netview_offsetfromdp(7135920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M00_AXI_wstrb.bind(*p_6_M00_AXI_wstrb);
        p_6_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7135976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wlast.bind(*p_6_M00_AXI_wlast);
        p_6_M00_AXI_wlast->set_sv_netview_offsetfromdp(7136032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wuser.bind(*p_6_M00_AXI_wuser);
        p_6_M00_AXI_wuser->set_sv_netview_offsetfromdp(7136088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wvalid.bind(*p_6_M00_AXI_wvalid);
        p_6_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7136144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wready.bind(*p_6_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map)[7851].first = 3;
        (*_glb_hdl_sc_channel_map)[7851].second.push_front(p_6_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_bid.bind(*p_6_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map)[7837].first = 3;
        (*_glb_hdl_sc_channel_map)[7837].second.push_front(p_6_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_bresp.bind(*p_6_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[7839].first = 3;
        (*_glb_hdl_sc_channel_map)[7839].second.push_front(p_6_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_buser.bind(*p_6_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map)[7840].first = 3;
        (*_glb_hdl_sc_channel_map)[7840].second.push_front(p_6_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bvalid.bind(*p_6_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[7841].first = 3;
        (*_glb_hdl_sc_channel_map)[7841].second.push_front(p_6_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bready.bind(*p_6_M00_AXI_bready);
        p_6_M00_AXI_bready->set_sv_netview_offsetfromdp(7136480);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_arid.bind(*p_6_M00_AXI_arid);
        p_6_M00_AXI_arid->set_sv_netview_offsetfromdp(7136536);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_araddr.bind(*p_6_M00_AXI_araddr);
        p_6_M00_AXI_araddr->set_sv_netview_offsetfromdp(7136592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_arlen.bind(*p_6_M00_AXI_arlen);
        p_6_M00_AXI_arlen->set_sv_netview_offsetfromdp(7136648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arsize.bind(*p_6_M00_AXI_arsize);
        p_6_M00_AXI_arsize->set_sv_netview_offsetfromdp(7136704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_arburst.bind(*p_6_M00_AXI_arburst);
        p_6_M00_AXI_arburst->set_sv_netview_offsetfromdp(7136760);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_arlock.bind(*p_6_M00_AXI_arlock);
        p_6_M00_AXI_arlock->set_sv_netview_offsetfromdp(7136816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arcache.bind(*p_6_M00_AXI_arcache);
        p_6_M00_AXI_arcache->set_sv_netview_offsetfromdp(7136872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arprot.bind(*p_6_M00_AXI_arprot);
        p_6_M00_AXI_arprot->set_sv_netview_offsetfromdp(7136928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arqos.bind(*p_6_M00_AXI_arqos);
        p_6_M00_AXI_arqos->set_sv_netview_offsetfromdp(7136984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_aruser.bind(*p_6_M00_AXI_aruser);
        p_6_M00_AXI_aruser->set_sv_netview_offsetfromdp(7137040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arvalid.bind(*p_6_M00_AXI_arvalid);
        p_6_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7137096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arready.bind(*p_6_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map)[7821].first = 3;
        (*_glb_hdl_sc_channel_map)[7821].second.push_front(p_6_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_rid.bind(*p_6_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map)[7843].first = 3;
        (*_glb_hdl_sc_channel_map)[7843].second.push_front(p_6_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_rdata.bind(*p_6_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[7842].first = 3;
        (*_glb_hdl_sc_channel_map)[7842].second.push_front(p_6_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_rresp.bind(*p_6_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[7846].first = 3;
        (*_glb_hdl_sc_channel_map)[7846].second.push_front(p_6_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rlast.bind(*p_6_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[7844].first = 3;
        (*_glb_hdl_sc_channel_map)[7844].second.push_front(p_6_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_ruser.bind(*p_6_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[7847].first = 3;
        (*_glb_hdl_sc_channel_map)[7847].second.push_front(p_6_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rvalid.bind(*p_6_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[7848].first = 3;
        (*_glb_hdl_sc_channel_map)[7848].second.push_front(p_6_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rready.bind(*p_6_M00_AXI_rready);
        p_6_M00_AXI_rready->set_sv_netview_offsetfromdp(7137544);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_awaddr.bind(*p_6_M01_AXI_awaddr);
        p_6_M01_AXI_awaddr->set_sv_netview_offsetfromdp(7137600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_awlen.bind(*p_6_M01_AXI_awlen);
        p_6_M01_AXI_awlen->set_sv_netview_offsetfromdp(7137656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awsize.bind(*p_6_M01_AXI_awsize);
        p_6_M01_AXI_awsize->set_sv_netview_offsetfromdp(7137712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_awburst.bind(*p_6_M01_AXI_awburst);
        p_6_M01_AXI_awburst->set_sv_netview_offsetfromdp(7137768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awprot.bind(*p_6_M01_AXI_awprot);
        p_6_M01_AXI_awprot->set_sv_netview_offsetfromdp(7137824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awvalid.bind(*p_6_M01_AXI_awvalid);
        p_6_M01_AXI_awvalid->set_sv_netview_offsetfromdp(7137880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awready.bind(*p_6_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map)[7866].first = 3;
        (*_glb_hdl_sc_channel_map)[7866].second.push_front(p_6_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_wdata.bind(*p_6_M01_AXI_wdata);
        p_6_M01_AXI_wdata->set_sv_netview_offsetfromdp(7137992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M01_AXI_wstrb.bind(*p_6_M01_AXI_wstrb);
        p_6_M01_AXI_wstrb->set_sv_netview_offsetfromdp(7138048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wlast.bind(*p_6_M01_AXI_wlast);
        p_6_M01_AXI_wlast->set_sv_netview_offsetfromdp(7138104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wvalid.bind(*p_6_M01_AXI_wvalid);
        p_6_M01_AXI_wvalid->set_sv_netview_offsetfromdp(7138160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wready.bind(*p_6_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map)[7879].first = 3;
        (*_glb_hdl_sc_channel_map)[7879].second.push_front(p_6_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_bresp.bind(*p_6_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[7870].first = 3;
        (*_glb_hdl_sc_channel_map)[7870].second.push_front(p_6_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bvalid.bind(*p_6_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[7871].first = 3;
        (*_glb_hdl_sc_channel_map)[7871].second.push_front(p_6_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bready.bind(*p_6_M01_AXI_bready);
        p_6_M01_AXI_bready->set_sv_netview_offsetfromdp(7138384);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_araddr.bind(*p_6_M01_AXI_araddr);
        p_6_M01_AXI_araddr->set_sv_netview_offsetfromdp(7138440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_arlen.bind(*p_6_M01_AXI_arlen);
        p_6_M01_AXI_arlen->set_sv_netview_offsetfromdp(7138496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arsize.bind(*p_6_M01_AXI_arsize);
        p_6_M01_AXI_arsize->set_sv_netview_offsetfromdp(7138552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_arburst.bind(*p_6_M01_AXI_arburst);
        p_6_M01_AXI_arburst->set_sv_netview_offsetfromdp(7138608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arprot.bind(*p_6_M01_AXI_arprot);
        p_6_M01_AXI_arprot->set_sv_netview_offsetfromdp(7138664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arvalid.bind(*p_6_M01_AXI_arvalid);
        p_6_M01_AXI_arvalid->set_sv_netview_offsetfromdp(7138720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arready.bind(*p_6_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map)[7859].first = 3;
        (*_glb_hdl_sc_channel_map)[7859].second.push_front(p_6_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_rdata.bind(*p_6_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[7872].first = 3;
        (*_glb_hdl_sc_channel_map)[7872].second.push_front(p_6_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_rresp.bind(*p_6_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[7875].first = 3;
        (*_glb_hdl_sc_channel_map)[7875].second.push_front(p_6_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rlast.bind(*p_6_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[7873].first = 3;
        (*_glb_hdl_sc_channel_map)[7873].second.push_front(p_6_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rvalid.bind(*p_6_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[7876].first = 3;
        (*_glb_hdl_sc_channel_map)[7876].second.push_front(p_6_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rready.bind(*p_6_M01_AXI_rready);
        p_6_M01_AXI_rready->set_sv_netview_offsetfromdp(7139056);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_awid.bind(*p_6_M02_AXI_awid);
        p_6_M02_AXI_awid->set_sv_netview_offsetfromdp(7139112);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_awaddr.bind(*p_6_M02_AXI_awaddr);
        p_6_M02_AXI_awaddr->set_sv_netview_offsetfromdp(7139168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_awlen.bind(*p_6_M02_AXI_awlen);
        p_6_M02_AXI_awlen->set_sv_netview_offsetfromdp(7139224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awsize.bind(*p_6_M02_AXI_awsize);
        p_6_M02_AXI_awsize->set_sv_netview_offsetfromdp(7139280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_awburst.bind(*p_6_M02_AXI_awburst);
        p_6_M02_AXI_awburst->set_sv_netview_offsetfromdp(7139336);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_awlock.bind(*p_6_M02_AXI_awlock);
        p_6_M02_AXI_awlock->set_sv_netview_offsetfromdp(7139392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awcache.bind(*p_6_M02_AXI_awcache);
        p_6_M02_AXI_awcache->set_sv_netview_offsetfromdp(7139448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awprot.bind(*p_6_M02_AXI_awprot);
        p_6_M02_AXI_awprot->set_sv_netview_offsetfromdp(7139504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awqos.bind(*p_6_M02_AXI_awqos);
        p_6_M02_AXI_awqos->set_sv_netview_offsetfromdp(7139560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_awuser.bind(*p_6_M02_AXI_awuser);
        p_6_M02_AXI_awuser->set_sv_netview_offsetfromdp(7139616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awvalid.bind(*p_6_M02_AXI_awvalid);
        p_6_M02_AXI_awvalid->set_sv_netview_offsetfromdp(7139672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awready.bind(*p_6_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map)[7902].first = 3;
        (*_glb_hdl_sc_channel_map)[7902].second.push_front(p_6_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_wdata.bind(*p_6_M02_AXI_wdata);
        p_6_M02_AXI_wdata->set_sv_netview_offsetfromdp(7139784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M02_AXI_wstrb.bind(*p_6_M02_AXI_wstrb);
        p_6_M02_AXI_wstrb->set_sv_netview_offsetfromdp(7139840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wlast.bind(*p_6_M02_AXI_wlast);
        p_6_M02_AXI_wlast->set_sv_netview_offsetfromdp(7139896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wuser.bind(*p_6_M02_AXI_wuser);
        p_6_M02_AXI_wuser->set_sv_netview_offsetfromdp(7139952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wvalid.bind(*p_6_M02_AXI_wvalid);
        p_6_M02_AXI_wvalid->set_sv_netview_offsetfromdp(7140008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wready.bind(*p_6_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map)[7920].first = 3;
        (*_glb_hdl_sc_channel_map)[7920].second.push_front(p_6_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_bid.bind(*p_6_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map)[7906].first = 3;
        (*_glb_hdl_sc_channel_map)[7906].second.push_front(p_6_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_bresp.bind(*p_6_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[7908].first = 3;
        (*_glb_hdl_sc_channel_map)[7908].second.push_front(p_6_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_buser.bind(*p_6_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map)[7909].first = 3;
        (*_glb_hdl_sc_channel_map)[7909].second.push_front(p_6_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bvalid.bind(*p_6_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[7910].first = 3;
        (*_glb_hdl_sc_channel_map)[7910].second.push_front(p_6_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bready.bind(*p_6_M02_AXI_bready);
        p_6_M02_AXI_bready->set_sv_netview_offsetfromdp(7140344);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_arid.bind(*p_6_M02_AXI_arid);
        p_6_M02_AXI_arid->set_sv_netview_offsetfromdp(7140400);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_araddr.bind(*p_6_M02_AXI_araddr);
        p_6_M02_AXI_araddr->set_sv_netview_offsetfromdp(7140456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_arlen.bind(*p_6_M02_AXI_arlen);
        p_6_M02_AXI_arlen->set_sv_netview_offsetfromdp(7140512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arsize.bind(*p_6_M02_AXI_arsize);
        p_6_M02_AXI_arsize->set_sv_netview_offsetfromdp(7140568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_arburst.bind(*p_6_M02_AXI_arburst);
        p_6_M02_AXI_arburst->set_sv_netview_offsetfromdp(7140624);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_arlock.bind(*p_6_M02_AXI_arlock);
        p_6_M02_AXI_arlock->set_sv_netview_offsetfromdp(7140680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arcache.bind(*p_6_M02_AXI_arcache);
        p_6_M02_AXI_arcache->set_sv_netview_offsetfromdp(7140736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arprot.bind(*p_6_M02_AXI_arprot);
        p_6_M02_AXI_arprot->set_sv_netview_offsetfromdp(7140792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arqos.bind(*p_6_M02_AXI_arqos);
        p_6_M02_AXI_arqos->set_sv_netview_offsetfromdp(7140848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_aruser.bind(*p_6_M02_AXI_aruser);
        p_6_M02_AXI_aruser->set_sv_netview_offsetfromdp(7140904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arvalid.bind(*p_6_M02_AXI_arvalid);
        p_6_M02_AXI_arvalid->set_sv_netview_offsetfromdp(7140960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arready.bind(*p_6_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map)[7890].first = 3;
        (*_glb_hdl_sc_channel_map)[7890].second.push_front(p_6_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_rid.bind(*p_6_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map)[7912].first = 3;
        (*_glb_hdl_sc_channel_map)[7912].second.push_front(p_6_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_rdata.bind(*p_6_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[7911].first = 3;
        (*_glb_hdl_sc_channel_map)[7911].second.push_front(p_6_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_rresp.bind(*p_6_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[7915].first = 3;
        (*_glb_hdl_sc_channel_map)[7915].second.push_front(p_6_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rlast.bind(*p_6_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[7913].first = 3;
        (*_glb_hdl_sc_channel_map)[7913].second.push_front(p_6_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_ruser.bind(*p_6_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[7916].first = 3;
        (*_glb_hdl_sc_channel_map)[7916].second.push_front(p_6_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rvalid.bind(*p_6_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[7917].first = 3;
        (*_glb_hdl_sc_channel_map)[7917].second.push_front(p_6_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rready.bind(*p_6_M02_AXI_rready);
        p_6_M02_AXI_rready->set_sv_netview_offsetfromdp(7141408);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_awid.bind(*p_6_M03_AXI_awid);
        p_6_M03_AXI_awid->set_sv_netview_offsetfromdp(7141464);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_awaddr.bind(*p_6_M03_AXI_awaddr);
        p_6_M03_AXI_awaddr->set_sv_netview_offsetfromdp(7141520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_awlen.bind(*p_6_M03_AXI_awlen);
        p_6_M03_AXI_awlen->set_sv_netview_offsetfromdp(7141576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awsize.bind(*p_6_M03_AXI_awsize);
        p_6_M03_AXI_awsize->set_sv_netview_offsetfromdp(7141632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_awburst.bind(*p_6_M03_AXI_awburst);
        p_6_M03_AXI_awburst->set_sv_netview_offsetfromdp(7141688);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_awlock.bind(*p_6_M03_AXI_awlock);
        p_6_M03_AXI_awlock->set_sv_netview_offsetfromdp(7141744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awcache.bind(*p_6_M03_AXI_awcache);
        p_6_M03_AXI_awcache->set_sv_netview_offsetfromdp(7141800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awprot.bind(*p_6_M03_AXI_awprot);
        p_6_M03_AXI_awprot->set_sv_netview_offsetfromdp(7141856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awqos.bind(*p_6_M03_AXI_awqos);
        p_6_M03_AXI_awqos->set_sv_netview_offsetfromdp(7141912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_awuser.bind(*p_6_M03_AXI_awuser);
        p_6_M03_AXI_awuser->set_sv_netview_offsetfromdp(7141968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awvalid.bind(*p_6_M03_AXI_awvalid);
        p_6_M03_AXI_awvalid->set_sv_netview_offsetfromdp(7142024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awready.bind(*p_6_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map)[7944].first = 3;
        (*_glb_hdl_sc_channel_map)[7944].second.push_front(p_6_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_wdata.bind(*p_6_M03_AXI_wdata);
        p_6_M03_AXI_wdata->set_sv_netview_offsetfromdp(7142136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M03_AXI_wstrb.bind(*p_6_M03_AXI_wstrb);
        p_6_M03_AXI_wstrb->set_sv_netview_offsetfromdp(7142192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wlast.bind(*p_6_M03_AXI_wlast);
        p_6_M03_AXI_wlast->set_sv_netview_offsetfromdp(7142248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wuser.bind(*p_6_M03_AXI_wuser);
        p_6_M03_AXI_wuser->set_sv_netview_offsetfromdp(7142304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wvalid.bind(*p_6_M03_AXI_wvalid);
        p_6_M03_AXI_wvalid->set_sv_netview_offsetfromdp(7142360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wready.bind(*p_6_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map)[7962].first = 3;
        (*_glb_hdl_sc_channel_map)[7962].second.push_front(p_6_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_bid.bind(*p_6_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map)[7948].first = 3;
        (*_glb_hdl_sc_channel_map)[7948].second.push_front(p_6_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_bresp.bind(*p_6_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[7950].first = 3;
        (*_glb_hdl_sc_channel_map)[7950].second.push_front(p_6_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_buser.bind(*p_6_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map)[7951].first = 3;
        (*_glb_hdl_sc_channel_map)[7951].second.push_front(p_6_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bvalid.bind(*p_6_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[7952].first = 3;
        (*_glb_hdl_sc_channel_map)[7952].second.push_front(p_6_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bready.bind(*p_6_M03_AXI_bready);
        p_6_M03_AXI_bready->set_sv_netview_offsetfromdp(7142696);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_arid.bind(*p_6_M03_AXI_arid);
        p_6_M03_AXI_arid->set_sv_netview_offsetfromdp(7142752);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_araddr.bind(*p_6_M03_AXI_araddr);
        p_6_M03_AXI_araddr->set_sv_netview_offsetfromdp(7142808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_arlen.bind(*p_6_M03_AXI_arlen);
        p_6_M03_AXI_arlen->set_sv_netview_offsetfromdp(7142864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arsize.bind(*p_6_M03_AXI_arsize);
        p_6_M03_AXI_arsize->set_sv_netview_offsetfromdp(7142920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_arburst.bind(*p_6_M03_AXI_arburst);
        p_6_M03_AXI_arburst->set_sv_netview_offsetfromdp(7142976);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_arlock.bind(*p_6_M03_AXI_arlock);
        p_6_M03_AXI_arlock->set_sv_netview_offsetfromdp(7143032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arcache.bind(*p_6_M03_AXI_arcache);
        p_6_M03_AXI_arcache->set_sv_netview_offsetfromdp(7143088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arprot.bind(*p_6_M03_AXI_arprot);
        p_6_M03_AXI_arprot->set_sv_netview_offsetfromdp(7143144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arqos.bind(*p_6_M03_AXI_arqos);
        p_6_M03_AXI_arqos->set_sv_netview_offsetfromdp(7143200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_aruser.bind(*p_6_M03_AXI_aruser);
        p_6_M03_AXI_aruser->set_sv_netview_offsetfromdp(7143256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arvalid.bind(*p_6_M03_AXI_arvalid);
        p_6_M03_AXI_arvalid->set_sv_netview_offsetfromdp(7143312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arready.bind(*p_6_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map)[7932].first = 3;
        (*_glb_hdl_sc_channel_map)[7932].second.push_front(p_6_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_rid.bind(*p_6_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map)[7954].first = 3;
        (*_glb_hdl_sc_channel_map)[7954].second.push_front(p_6_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_rdata.bind(*p_6_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[7953].first = 3;
        (*_glb_hdl_sc_channel_map)[7953].second.push_front(p_6_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_rresp.bind(*p_6_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[7957].first = 3;
        (*_glb_hdl_sc_channel_map)[7957].second.push_front(p_6_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rlast.bind(*p_6_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[7955].first = 3;
        (*_glb_hdl_sc_channel_map)[7955].second.push_front(p_6_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_ruser.bind(*p_6_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[7958].first = 3;
        (*_glb_hdl_sc_channel_map)[7958].second.push_front(p_6_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rvalid.bind(*p_6_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[7959].first = 3;
        (*_glb_hdl_sc_channel_map)[7959].second.push_front(p_6_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rready.bind(*p_6_M03_AXI_rready);
        p_6_M03_AXI_rready->set_sv_netview_offsetfromdp(7143760);
        sc_inst_7 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_7->xsim_set_dbg_index(23);
        sc_inst_8 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_8->xsim_set_dbg_index(24);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[8244].first = 1;
        (*_glb_hdl_sc_channel_map)[8244].second.push_front(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[8217].first = 3;
        (*_glb_hdl_sc_channel_map)[8217].second.push_front(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[8214].first = 3;
        (*_glb_hdl_sc_channel_map)[8214].second.push_front(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[8218].first = 3;
        (*_glb_hdl_sc_channel_map)[8218].second.push_front(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[8223].first = 3;
        (*_glb_hdl_sc_channel_map)[8223].second.push_front(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[8215].first = 3;
        (*_glb_hdl_sc_channel_map)[8215].second.push_front(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[8219].first = 1;
        (*_glb_hdl_sc_channel_map)[8219].second.push_front(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[8216].first = 3;
        (*_glb_hdl_sc_channel_map)[8216].second.push_front(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[8220].first = 3;
        (*_glb_hdl_sc_channel_map)[8220].second.push_front(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1269].first = 3;
        (*_glb_hdl_sc_channel_map)[1269].second.push_front(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[8221].first = 3;
        (*_glb_hdl_sc_channel_map)[8221].second.push_front(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[8224].first = 3;
        (*_glb_hdl_sc_channel_map)[8224].second.push_front(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[8225].first = 1;
        (*_glb_hdl_sc_channel_map)[8225].second.push_front(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7144640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[8238].first = 3;
        (*_glb_hdl_sc_channel_map)[8238].second.push_front(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[8241].first = 3;
        (*_glb_hdl_sc_channel_map)[8241].second.push_front(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[8239].first = 1;
        (*_glb_hdl_sc_channel_map)[8239].second.push_front(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[8242].first = 3;
        (*_glb_hdl_sc_channel_map)[8242].second.push_front(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[8243].first = 1;
        (*_glb_hdl_sc_channel_map)[8243].second.push_front(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7144976);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7145032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7145088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7145144);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7145200);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[8227].first = 1;
        (*_glb_hdl_sc_channel_map)[8227].second.push_front(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[8205].first = 3;
        (*_glb_hdl_sc_channel_map)[8205].second.push_front(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[8201].first = 3;
        (*_glb_hdl_sc_channel_map)[8201].second.push_front(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[8206].first = 3;
        (*_glb_hdl_sc_channel_map)[8206].second.push_front(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[8211].first = 3;
        (*_glb_hdl_sc_channel_map)[8211].second.push_front(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[8202].first = 3;
        (*_glb_hdl_sc_channel_map)[8202].second.push_front(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[8207].first = 1;
        (*_glb_hdl_sc_channel_map)[8207].second.push_front(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[8203].first = 3;
        (*_glb_hdl_sc_channel_map)[8203].second.push_front(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[8208].first = 3;
        (*_glb_hdl_sc_channel_map)[8208].second.push_front(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1270].first = 3;
        (*_glb_hdl_sc_channel_map)[1270].second.push_front(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[8209].first = 3;
        (*_glb_hdl_sc_channel_map)[8209].second.push_front(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[8212].first = 3;
        (*_glb_hdl_sc_channel_map)[8212].second.push_front(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[8213].first = 1;
        (*_glb_hdl_sc_channel_map)[8213].second.push_front(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7145984);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7146040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7146096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7146152);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7146208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7146264);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7146320);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[8234].first = 1;
        (*_glb_hdl_sc_channel_map)[8234].second.push_front(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[8200].first = 1;
        (*_glb_hdl_sc_channel_map)[8200].second.push_front(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[8204].first = 1;
        (*_glb_hdl_sc_channel_map)[8204].second.push_front(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1253].first = 3;
        (*_glb_hdl_sc_channel_map)[1253].second.push_front(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1256].first = 3;
        (*_glb_hdl_sc_channel_map)[1256].second.push_front(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1252].first = 3;
        (*_glb_hdl_sc_channel_map)[1252].second.push_front(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1247].first = 3;
        (*_glb_hdl_sc_channel_map)[1247].second.push_front(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1255].first = 3;
        (*_glb_hdl_sc_channel_map)[1255].second.push_front(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1251].first = 1;
        (*_glb_hdl_sc_channel_map)[1251].second.push_front(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1254].first = 3;
        (*_glb_hdl_sc_channel_map)[1254].second.push_front(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1250].first = 3;
        (*_glb_hdl_sc_channel_map)[1250].second.push_front(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1248].first = 3;
        (*_glb_hdl_sc_channel_map)[1248].second.push_front(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1249].first = 3;
        (*_glb_hdl_sc_channel_map)[1249].second.push_front(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1246].first = 3;
        (*_glb_hdl_sc_channel_map)[1246].second.push_front(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1245].first = 1;
        (*_glb_hdl_sc_channel_map)[1245].second.push_front(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7147216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1242].first = 3;
        (*_glb_hdl_sc_channel_map)[1242].second.push_front(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1240].first = 3;
        (*_glb_hdl_sc_channel_map)[1240].second.push_front(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1241].first = 1;
        (*_glb_hdl_sc_channel_map)[1241].second.push_front(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1239].first = 3;
        (*_glb_hdl_sc_channel_map)[1239].second.push_front(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1238].first = 1;
        (*_glb_hdl_sc_channel_map)[1238].second.push_front(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7147552);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7147608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7147664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7147720);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7147776);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1244].first = 1;
        (*_glb_hdl_sc_channel_map)[1244].second.push_front(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1265].first = 3;
        (*_glb_hdl_sc_channel_map)[1265].second.push_front(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1268].first = 3;
        (*_glb_hdl_sc_channel_map)[1268].second.push_front(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1264].first = 3;
        (*_glb_hdl_sc_channel_map)[1264].second.push_front(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1259].first = 3;
        (*_glb_hdl_sc_channel_map)[1259].second.push_front(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1267].first = 3;
        (*_glb_hdl_sc_channel_map)[1267].second.push_front(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1263].first = 1;
        (*_glb_hdl_sc_channel_map)[1263].second.push_front(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1266].first = 3;
        (*_glb_hdl_sc_channel_map)[1266].second.push_front(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1262].first = 3;
        (*_glb_hdl_sc_channel_map)[1262].second.push_front(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1260].first = 3;
        (*_glb_hdl_sc_channel_map)[1260].second.push_front(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1261].first = 3;
        (*_glb_hdl_sc_channel_map)[1261].second.push_front(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1258].first = 3;
        (*_glb_hdl_sc_channel_map)[1258].second.push_front(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1257].first = 1;
        (*_glb_hdl_sc_channel_map)[1257].second.push_front(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7148560);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7148616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7148672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7148728);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7148784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7148840);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7148896);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1243].first = 1;
        (*_glb_hdl_sc_channel_map)[1243].second.push_front(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8245].first = 1;
        (*_glb_hdl_sc_channel_map)[8245].second.push_front(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8246].first = 1;
        (*_glb_hdl_sc_channel_map)[8246].second.push_front(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_9->xsim_set_dbg_index(25);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[8304].first = 1;
        (*_glb_hdl_sc_channel_map)[8304].second.push_front(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[8277].first = 3;
        (*_glb_hdl_sc_channel_map)[8277].second.push_front(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[8274].first = 3;
        (*_glb_hdl_sc_channel_map)[8274].second.push_front(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[8278].first = 3;
        (*_glb_hdl_sc_channel_map)[8278].second.push_front(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[8283].first = 3;
        (*_glb_hdl_sc_channel_map)[8283].second.push_front(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[8275].first = 3;
        (*_glb_hdl_sc_channel_map)[8275].second.push_front(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[8279].first = 1;
        (*_glb_hdl_sc_channel_map)[8279].second.push_front(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[8276].first = 3;
        (*_glb_hdl_sc_channel_map)[8276].second.push_front(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[8280].first = 3;
        (*_glb_hdl_sc_channel_map)[8280].second.push_front(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1236].first = 3;
        (*_glb_hdl_sc_channel_map)[1236].second.push_front(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[8281].first = 3;
        (*_glb_hdl_sc_channel_map)[8281].second.push_front(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[8284].first = 3;
        (*_glb_hdl_sc_channel_map)[8284].second.push_front(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[8285].first = 1;
        (*_glb_hdl_sc_channel_map)[8285].second.push_front(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7149896);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[8298].first = 3;
        (*_glb_hdl_sc_channel_map)[8298].second.push_front(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[8301].first = 3;
        (*_glb_hdl_sc_channel_map)[8301].second.push_front(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[8299].first = 1;
        (*_glb_hdl_sc_channel_map)[8299].second.push_front(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[8302].first = 3;
        (*_glb_hdl_sc_channel_map)[8302].second.push_front(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[8303].first = 1;
        (*_glb_hdl_sc_channel_map)[8303].second.push_front(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7150232);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7150288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7150344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7150400);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7150456);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[8287].first = 1;
        (*_glb_hdl_sc_channel_map)[8287].second.push_front(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[8265].first = 3;
        (*_glb_hdl_sc_channel_map)[8265].second.push_front(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[8261].first = 3;
        (*_glb_hdl_sc_channel_map)[8261].second.push_front(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[8266].first = 3;
        (*_glb_hdl_sc_channel_map)[8266].second.push_front(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[8271].first = 3;
        (*_glb_hdl_sc_channel_map)[8271].second.push_front(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[8262].first = 3;
        (*_glb_hdl_sc_channel_map)[8262].second.push_front(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[8267].first = 1;
        (*_glb_hdl_sc_channel_map)[8267].second.push_front(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[8263].first = 3;
        (*_glb_hdl_sc_channel_map)[8263].second.push_front(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[8268].first = 3;
        (*_glb_hdl_sc_channel_map)[8268].second.push_front(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1237].first = 3;
        (*_glb_hdl_sc_channel_map)[1237].second.push_front(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[8269].first = 3;
        (*_glb_hdl_sc_channel_map)[8269].second.push_front(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[8272].first = 3;
        (*_glb_hdl_sc_channel_map)[8272].second.push_front(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[8273].first = 1;
        (*_glb_hdl_sc_channel_map)[8273].second.push_front(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7151240);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7151296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7151352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7151408);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7151464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7151520);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7151576);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[8294].first = 1;
        (*_glb_hdl_sc_channel_map)[8294].second.push_front(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[8260].first = 1;
        (*_glb_hdl_sc_channel_map)[8260].second.push_front(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[8264].first = 1;
        (*_glb_hdl_sc_channel_map)[8264].second.push_front(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1220].first = 3;
        (*_glb_hdl_sc_channel_map)[1220].second.push_front(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1223].first = 3;
        (*_glb_hdl_sc_channel_map)[1223].second.push_front(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1219].first = 3;
        (*_glb_hdl_sc_channel_map)[1219].second.push_front(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1214].first = 3;
        (*_glb_hdl_sc_channel_map)[1214].second.push_front(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1222].first = 3;
        (*_glb_hdl_sc_channel_map)[1222].second.push_front(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1218].first = 1;
        (*_glb_hdl_sc_channel_map)[1218].second.push_front(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1221].first = 3;
        (*_glb_hdl_sc_channel_map)[1221].second.push_front(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1217].first = 3;
        (*_glb_hdl_sc_channel_map)[1217].second.push_front(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1215].first = 3;
        (*_glb_hdl_sc_channel_map)[1215].second.push_front(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1216].first = 3;
        (*_glb_hdl_sc_channel_map)[1216].second.push_front(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1213].first = 3;
        (*_glb_hdl_sc_channel_map)[1213].second.push_front(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1212].first = 1;
        (*_glb_hdl_sc_channel_map)[1212].second.push_front(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7152472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1209].first = 3;
        (*_glb_hdl_sc_channel_map)[1209].second.push_front(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1207].first = 3;
        (*_glb_hdl_sc_channel_map)[1207].second.push_front(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1208].first = 1;
        (*_glb_hdl_sc_channel_map)[1208].second.push_front(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1206].first = 3;
        (*_glb_hdl_sc_channel_map)[1206].second.push_front(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1205].first = 1;
        (*_glb_hdl_sc_channel_map)[1205].second.push_front(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7152808);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7152864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7152920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7152976);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7153032);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1211].first = 1;
        (*_glb_hdl_sc_channel_map)[1211].second.push_front(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1232].first = 3;
        (*_glb_hdl_sc_channel_map)[1232].second.push_front(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1235].first = 3;
        (*_glb_hdl_sc_channel_map)[1235].second.push_front(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1231].first = 3;
        (*_glb_hdl_sc_channel_map)[1231].second.push_front(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1226].first = 3;
        (*_glb_hdl_sc_channel_map)[1226].second.push_front(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1234].first = 3;
        (*_glb_hdl_sc_channel_map)[1234].second.push_front(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1230].first = 1;
        (*_glb_hdl_sc_channel_map)[1230].second.push_front(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1233].first = 3;
        (*_glb_hdl_sc_channel_map)[1233].second.push_front(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1229].first = 3;
        (*_glb_hdl_sc_channel_map)[1229].second.push_front(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1227].first = 3;
        (*_glb_hdl_sc_channel_map)[1227].second.push_front(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1228].first = 3;
        (*_glb_hdl_sc_channel_map)[1228].second.push_front(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1225].first = 3;
        (*_glb_hdl_sc_channel_map)[1225].second.push_front(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1224].first = 1;
        (*_glb_hdl_sc_channel_map)[1224].second.push_front(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7153816);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7153872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7153928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7153984);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7154040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7154096);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7154152);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1210].first = 1;
        (*_glb_hdl_sc_channel_map)[1210].second.push_front(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8305].first = 1;
        (*_glb_hdl_sc_channel_map)[8305].second.push_front(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8306].first = 1;
        (*_glb_hdl_sc_channel_map)[8306].second.push_front(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_10->xsim_set_dbg_index(26);
        xsim_sc_channel<0, bool > *p_10_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ui_clk.bind(*p_10_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[8364].first = 1;
        (*_glb_hdl_sc_channel_map)[8364].second.push_front(p_10_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_awid.bind(*p_10_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[8337].first = 3;
        (*_glb_hdl_sc_channel_map)[8337].second.push_front(p_10_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_awaddr.bind(*p_10_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[8334].first = 3;
        (*_glb_hdl_sc_channel_map)[8334].second.push_front(p_10_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_awlen.bind(*p_10_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[8338].first = 3;
        (*_glb_hdl_sc_channel_map)[8338].second.push_front(p_10_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awsize.bind(*p_10_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[8343].first = 3;
        (*_glb_hdl_sc_channel_map)[8343].second.push_front(p_10_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_awburst.bind(*p_10_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[8335].first = 3;
        (*_glb_hdl_sc_channel_map)[8335].second.push_front(p_10_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awlock.bind(*p_10_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[8339].first = 1;
        (*_glb_hdl_sc_channel_map)[8339].second.push_front(p_10_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awcache.bind(*p_10_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[8336].first = 3;
        (*_glb_hdl_sc_channel_map)[8336].second.push_front(p_10_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awprot.bind(*p_10_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[8340].first = 3;
        (*_glb_hdl_sc_channel_map)[8340].second.push_front(p_10_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awregion.bind(*p_10_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1203].first = 3;
        (*_glb_hdl_sc_channel_map)[1203].second.push_front(p_10_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awqos.bind(*p_10_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[8341].first = 3;
        (*_glb_hdl_sc_channel_map)[8341].second.push_front(p_10_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_awuser.bind(*p_10_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[8344].first = 3;
        (*_glb_hdl_sc_channel_map)[8344].second.push_front(p_10_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awvalid.bind(*p_10_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[8345].first = 1;
        (*_glb_hdl_sc_channel_map)[8345].second.push_front(p_10_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awready.bind(*p_10_c0_ddr_saxi_awready);
        p_10_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7155152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_wdata.bind(*p_10_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[8358].first = 3;
        (*_glb_hdl_sc_channel_map)[8358].second.push_front(p_10_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->c0_ddr_saxi_wstrb.bind(*p_10_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[8361].first = 3;
        (*_glb_hdl_sc_channel_map)[8361].second.push_front(p_10_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wlast.bind(*p_10_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[8359].first = 1;
        (*_glb_hdl_sc_channel_map)[8359].second.push_front(p_10_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_wuser.bind(*p_10_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[8362].first = 3;
        (*_glb_hdl_sc_channel_map)[8362].second.push_front(p_10_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wvalid.bind(*p_10_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[8363].first = 1;
        (*_glb_hdl_sc_channel_map)[8363].second.push_front(p_10_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wready.bind(*p_10_c0_ddr_saxi_wready);
        p_10_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7155488);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_bid.bind(*p_10_c0_ddr_saxi_bid);
        p_10_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7155544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_bresp.bind(*p_10_c0_ddr_saxi_bresp);
        p_10_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7155600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_buser.bind(*p_10_c0_ddr_saxi_buser);
        p_10_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7155656);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bvalid.bind(*p_10_c0_ddr_saxi_bvalid);
        p_10_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7155712);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bready.bind(*p_10_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[8347].first = 1;
        (*_glb_hdl_sc_channel_map)[8347].second.push_front(p_10_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_arid.bind(*p_10_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[8325].first = 3;
        (*_glb_hdl_sc_channel_map)[8325].second.push_front(p_10_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_araddr.bind(*p_10_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[8321].first = 3;
        (*_glb_hdl_sc_channel_map)[8321].second.push_front(p_10_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_arlen.bind(*p_10_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[8326].first = 3;
        (*_glb_hdl_sc_channel_map)[8326].second.push_front(p_10_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arsize.bind(*p_10_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[8331].first = 3;
        (*_glb_hdl_sc_channel_map)[8331].second.push_front(p_10_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_arburst.bind(*p_10_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[8322].first = 3;
        (*_glb_hdl_sc_channel_map)[8322].second.push_front(p_10_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arlock.bind(*p_10_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[8327].first = 1;
        (*_glb_hdl_sc_channel_map)[8327].second.push_front(p_10_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arcache.bind(*p_10_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[8323].first = 3;
        (*_glb_hdl_sc_channel_map)[8323].second.push_front(p_10_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arprot.bind(*p_10_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[8328].first = 3;
        (*_glb_hdl_sc_channel_map)[8328].second.push_front(p_10_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arregion.bind(*p_10_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1204].first = 3;
        (*_glb_hdl_sc_channel_map)[1204].second.push_front(p_10_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arqos.bind(*p_10_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[8329].first = 3;
        (*_glb_hdl_sc_channel_map)[8329].second.push_front(p_10_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_aruser.bind(*p_10_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[8332].first = 3;
        (*_glb_hdl_sc_channel_map)[8332].second.push_front(p_10_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arvalid.bind(*p_10_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[8333].first = 1;
        (*_glb_hdl_sc_channel_map)[8333].second.push_front(p_10_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arready.bind(*p_10_c0_ddr_saxi_arready);
        p_10_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7156496);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_rid.bind(*p_10_c0_ddr_saxi_rid);
        p_10_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7156552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_rdata.bind(*p_10_c0_ddr_saxi_rdata);
        p_10_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7156608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_rresp.bind(*p_10_c0_ddr_saxi_rresp);
        p_10_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7156664);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rlast.bind(*p_10_c0_ddr_saxi_rlast);
        p_10_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7156720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_ruser.bind(*p_10_c0_ddr_saxi_ruser);
        p_10_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7156776);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rvalid.bind(*p_10_c0_ddr_saxi_rvalid);
        p_10_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7156832);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rready.bind(*p_10_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[8354].first = 1;
        (*_glb_hdl_sc_channel_map)[8354].second.push_front(p_10_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aclk.bind(*p_10_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[8320].first = 1;
        (*_glb_hdl_sc_channel_map)[8320].second.push_front(p_10_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aresetn.bind(*p_10_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[8324].first = 1;
        (*_glb_hdl_sc_channel_map)[8324].second.push_front(p_10_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_awid.bind(*p_10_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1187].first = 3;
        (*_glb_hdl_sc_channel_map)[1187].second.push_front(p_10_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awaddr.bind(*p_10_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1190].first = 3;
        (*_glb_hdl_sc_channel_map)[1190].second.push_front(p_10_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_awlen.bind(*p_10_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1186].first = 3;
        (*_glb_hdl_sc_channel_map)[1186].second.push_front(p_10_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awsize.bind(*p_10_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1181].first = 3;
        (*_glb_hdl_sc_channel_map)[1181].second.push_front(p_10_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_awburst.bind(*p_10_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1189].first = 3;
        (*_glb_hdl_sc_channel_map)[1189].second.push_front(p_10_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awlock.bind(*p_10_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1185].first = 1;
        (*_glb_hdl_sc_channel_map)[1185].second.push_front(p_10_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awcache.bind(*p_10_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1188].first = 3;
        (*_glb_hdl_sc_channel_map)[1188].second.push_front(p_10_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awprot.bind(*p_10_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1184].first = 3;
        (*_glb_hdl_sc_channel_map)[1184].second.push_front(p_10_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awregion.bind(*p_10_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1182].first = 3;
        (*_glb_hdl_sc_channel_map)[1182].second.push_front(p_10_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awqos.bind(*p_10_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1183].first = 3;
        (*_glb_hdl_sc_channel_map)[1183].second.push_front(p_10_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awuser.bind(*p_10_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1180].first = 3;
        (*_glb_hdl_sc_channel_map)[1180].second.push_front(p_10_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awvalid.bind(*p_10_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1179].first = 1;
        (*_glb_hdl_sc_channel_map)[1179].second.push_front(p_10_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awready.bind(*p_10_s_xdma_axi_awready);
        p_10_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7157728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_wdata.bind(*p_10_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1176].first = 3;
        (*_glb_hdl_sc_channel_map)[1176].second.push_front(p_10_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_wstrb.bind(*p_10_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1174].first = 3;
        (*_glb_hdl_sc_channel_map)[1174].second.push_front(p_10_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wlast.bind(*p_10_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1175].first = 1;
        (*_glb_hdl_sc_channel_map)[1175].second.push_front(p_10_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_wuser.bind(*p_10_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1173].first = 3;
        (*_glb_hdl_sc_channel_map)[1173].second.push_front(p_10_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wvalid.bind(*p_10_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1172].first = 1;
        (*_glb_hdl_sc_channel_map)[1172].second.push_front(p_10_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wready.bind(*p_10_s_xdma_axi_wready);
        p_10_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7158064);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_bid.bind(*p_10_s_xdma_axi_bid);
        p_10_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7158120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_bresp.bind(*p_10_s_xdma_axi_bresp);
        p_10_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7158176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_buser.bind(*p_10_s_xdma_axi_buser);
        p_10_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7158232);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bvalid.bind(*p_10_s_xdma_axi_bvalid);
        p_10_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7158288);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bready.bind(*p_10_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1178].first = 1;
        (*_glb_hdl_sc_channel_map)[1178].second.push_front(p_10_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_arid.bind(*p_10_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1199].first = 3;
        (*_glb_hdl_sc_channel_map)[1199].second.push_front(p_10_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_araddr.bind(*p_10_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1202].first = 3;
        (*_glb_hdl_sc_channel_map)[1202].second.push_front(p_10_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_arlen.bind(*p_10_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1198].first = 3;
        (*_glb_hdl_sc_channel_map)[1198].second.push_front(p_10_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arsize.bind(*p_10_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1193].first = 3;
        (*_glb_hdl_sc_channel_map)[1193].second.push_front(p_10_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_arburst.bind(*p_10_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1201].first = 3;
        (*_glb_hdl_sc_channel_map)[1201].second.push_front(p_10_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arlock.bind(*p_10_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1197].first = 1;
        (*_glb_hdl_sc_channel_map)[1197].second.push_front(p_10_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arcache.bind(*p_10_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1200].first = 3;
        (*_glb_hdl_sc_channel_map)[1200].second.push_front(p_10_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arprot.bind(*p_10_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1196].first = 3;
        (*_glb_hdl_sc_channel_map)[1196].second.push_front(p_10_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arregion.bind(*p_10_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1194].first = 3;
        (*_glb_hdl_sc_channel_map)[1194].second.push_front(p_10_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arqos.bind(*p_10_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1195].first = 3;
        (*_glb_hdl_sc_channel_map)[1195].second.push_front(p_10_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_aruser.bind(*p_10_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1192].first = 3;
        (*_glb_hdl_sc_channel_map)[1192].second.push_front(p_10_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arvalid.bind(*p_10_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1191].first = 1;
        (*_glb_hdl_sc_channel_map)[1191].second.push_front(p_10_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arready.bind(*p_10_s_xdma_axi_arready);
        p_10_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7159072);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_rid.bind(*p_10_s_xdma_axi_rid);
        p_10_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7159128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_rdata.bind(*p_10_s_xdma_axi_rdata);
        p_10_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7159184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_rresp.bind(*p_10_s_xdma_axi_rresp);
        p_10_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7159240);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rlast.bind(*p_10_s_xdma_axi_rlast);
        p_10_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7159296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_ruser.bind(*p_10_s_xdma_axi_ruser);
        p_10_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7159352);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rvalid.bind(*p_10_s_xdma_axi_rvalid);
        p_10_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7159408);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rready.bind(*p_10_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1177].first = 1;
        (*_glb_hdl_sc_channel_map)[1177].second.push_front(p_10_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aclk.bind(*p_10_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8365].first = 1;
        (*_glb_hdl_sc_channel_map)[8365].second.push_front(p_10_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aresetn.bind(*p_10_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8366].first = 1;
        (*_glb_hdl_sc_channel_map)[8366].second.push_front(p_10_s_xdma_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_11->xsim_set_dbg_index(681);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[8576].first = 3;
        (*_glb_hdl_sc_channel_map)[8576].second.push_front(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[8514].first = 3;
        (*_glb_hdl_sc_channel_map)[8514].second.push_front(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[8577].first = 3;
        (*_glb_hdl_sc_channel_map)[8577].second.push_front(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[8582].first = 3;
        (*_glb_hdl_sc_channel_map)[8582].second.push_front(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[8574].first = 3;
        (*_glb_hdl_sc_channel_map)[8574].second.push_front(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[8578].first = 1;
        (*_glb_hdl_sc_channel_map)[8578].second.push_front(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[8575].first = 3;
        (*_glb_hdl_sc_channel_map)[8575].second.push_front(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[8579].first = 3;
        (*_glb_hdl_sc_channel_map)[8579].second.push_front(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[8513].first = 3;
        (*_glb_hdl_sc_channel_map)[8513].second.push_front(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[8580].first = 3;
        (*_glb_hdl_sc_channel_map)[8580].second.push_front(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[8583].first = 3;
        (*_glb_hdl_sc_channel_map)[8583].second.push_front(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[8584].first = 1;
        (*_glb_hdl_sc_channel_map)[8584].second.push_front(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(7220104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[8597].first = 3;
        (*_glb_hdl_sc_channel_map)[8597].second.push_front(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[8600].first = 3;
        (*_glb_hdl_sc_channel_map)[8600].second.push_front(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[8598].first = 1;
        (*_glb_hdl_sc_channel_map)[8598].second.push_front(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[8601].first = 3;
        (*_glb_hdl_sc_channel_map)[8601].second.push_front(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[8602].first = 1;
        (*_glb_hdl_sc_channel_map)[8602].second.push_front(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(7220440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(7220496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(7220552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(7220608);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(7220664);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[8586].first = 1;
        (*_glb_hdl_sc_channel_map)[8586].second.push_front(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[8565].first = 3;
        (*_glb_hdl_sc_channel_map)[8565].second.push_front(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[8516].first = 3;
        (*_glb_hdl_sc_channel_map)[8516].second.push_front(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[8566].first = 3;
        (*_glb_hdl_sc_channel_map)[8566].second.push_front(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[8571].first = 3;
        (*_glb_hdl_sc_channel_map)[8571].second.push_front(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[8562].first = 3;
        (*_glb_hdl_sc_channel_map)[8562].second.push_front(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[8567].first = 1;
        (*_glb_hdl_sc_channel_map)[8567].second.push_front(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[8563].first = 3;
        (*_glb_hdl_sc_channel_map)[8563].second.push_front(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[8568].first = 3;
        (*_glb_hdl_sc_channel_map)[8568].second.push_front(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[8515].first = 3;
        (*_glb_hdl_sc_channel_map)[8515].second.push_front(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[8569].first = 3;
        (*_glb_hdl_sc_channel_map)[8569].second.push_front(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[8572].first = 3;
        (*_glb_hdl_sc_channel_map)[8572].second.push_front(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[8573].first = 1;
        (*_glb_hdl_sc_channel_map)[8573].second.push_front(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(7221448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(7221504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(7221560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(7221616);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(7221672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(7221728);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(7221784);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[8593].first = 1;
        (*_glb_hdl_sc_channel_map)[8593].second.push_front(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8561].first = 1;
        (*_glb_hdl_sc_channel_map)[8561].second.push_front(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8564].first = 1;
        (*_glb_hdl_sc_channel_map)[8564].second.push_front(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(7222008);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(7222064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(7222120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(7222176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(7222232);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(7222288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(7222344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(7222400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(7222456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(7222512);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(7222568);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[8539].first = 1;
        (*_glb_hdl_sc_channel_map)[8539].second.push_front(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(7222680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(7222736);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(7222792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(7222848);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(7222904);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[8557].first = 1;
        (*_glb_hdl_sc_channel_map)[8557].second.push_front(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[8543].first = 3;
        (*_glb_hdl_sc_channel_map)[8543].second.push_front(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[8545].first = 3;
        (*_glb_hdl_sc_channel_map)[8545].second.push_front(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[8546].first = 3;
        (*_glb_hdl_sc_channel_map)[8546].second.push_front(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[8547].first = 1;
        (*_glb_hdl_sc_channel_map)[8547].second.push_front(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(7223240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(7223296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(7223352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(7223408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(7223464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(7223520);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(7223576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(7223632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(7223688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(7223744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(7223800);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(7223856);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[8527].first = 1;
        (*_glb_hdl_sc_channel_map)[8527].second.push_front(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[8549].first = 3;
        (*_glb_hdl_sc_channel_map)[8549].second.push_front(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[8548].first = 3;
        (*_glb_hdl_sc_channel_map)[8548].second.push_front(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[8552].first = 3;
        (*_glb_hdl_sc_channel_map)[8552].second.push_front(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[8550].first = 1;
        (*_glb_hdl_sc_channel_map)[8550].second.push_front(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[8553].first = 3;
        (*_glb_hdl_sc_channel_map)[8553].second.push_front(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[8554].first = 1;
        (*_glb_hdl_sc_channel_map)[8554].second.push_front(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(7224304);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8517].first = 1;
        (*_glb_hdl_sc_channel_map)[8517].second.push_front(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8521].first = 1;
        (*_glb_hdl_sc_channel_map)[8521].second.push_front(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_12->xsim_set_dbg_index(795);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[11203].first = 3;
        (*_glb_hdl_sc_channel_map)[11203].second.push_front(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[11141].first = 3;
        (*_glb_hdl_sc_channel_map)[11141].second.push_front(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[11204].first = 3;
        (*_glb_hdl_sc_channel_map)[11204].second.push_front(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[11209].first = 3;
        (*_glb_hdl_sc_channel_map)[11209].second.push_front(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[11201].first = 3;
        (*_glb_hdl_sc_channel_map)[11201].second.push_front(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[11205].first = 1;
        (*_glb_hdl_sc_channel_map)[11205].second.push_front(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[11202].first = 3;
        (*_glb_hdl_sc_channel_map)[11202].second.push_front(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[11206].first = 3;
        (*_glb_hdl_sc_channel_map)[11206].second.push_front(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[11140].first = 3;
        (*_glb_hdl_sc_channel_map)[11140].second.push_front(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[11207].first = 3;
        (*_glb_hdl_sc_channel_map)[11207].second.push_front(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[11210].first = 3;
        (*_glb_hdl_sc_channel_map)[11210].second.push_front(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[11211].first = 1;
        (*_glb_hdl_sc_channel_map)[11211].second.push_front(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(7866360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[11224].first = 3;
        (*_glb_hdl_sc_channel_map)[11224].second.push_front(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[11227].first = 3;
        (*_glb_hdl_sc_channel_map)[11227].second.push_front(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[11225].first = 1;
        (*_glb_hdl_sc_channel_map)[11225].second.push_front(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[11228].first = 3;
        (*_glb_hdl_sc_channel_map)[11228].second.push_front(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[11229].first = 1;
        (*_glb_hdl_sc_channel_map)[11229].second.push_front(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(7866696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(7866752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(7866808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(7866864);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(7866920);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[11213].first = 1;
        (*_glb_hdl_sc_channel_map)[11213].second.push_front(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[11192].first = 3;
        (*_glb_hdl_sc_channel_map)[11192].second.push_front(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[11143].first = 3;
        (*_glb_hdl_sc_channel_map)[11143].second.push_front(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[11193].first = 3;
        (*_glb_hdl_sc_channel_map)[11193].second.push_front(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[11198].first = 3;
        (*_glb_hdl_sc_channel_map)[11198].second.push_front(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[11189].first = 3;
        (*_glb_hdl_sc_channel_map)[11189].second.push_front(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[11194].first = 1;
        (*_glb_hdl_sc_channel_map)[11194].second.push_front(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[11190].first = 3;
        (*_glb_hdl_sc_channel_map)[11190].second.push_front(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[11195].first = 3;
        (*_glb_hdl_sc_channel_map)[11195].second.push_front(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[11142].first = 3;
        (*_glb_hdl_sc_channel_map)[11142].second.push_front(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[11196].first = 3;
        (*_glb_hdl_sc_channel_map)[11196].second.push_front(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[11199].first = 3;
        (*_glb_hdl_sc_channel_map)[11199].second.push_front(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[11200].first = 1;
        (*_glb_hdl_sc_channel_map)[11200].second.push_front(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(7867704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(7867760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(7867816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(7867872);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(7867928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(7867984);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(7868040);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[11220].first = 1;
        (*_glb_hdl_sc_channel_map)[11220].second.push_front(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11188].first = 1;
        (*_glb_hdl_sc_channel_map)[11188].second.push_front(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11191].first = 1;
        (*_glb_hdl_sc_channel_map)[11191].second.push_front(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(7868264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(7868320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(7868376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(7868432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(7868488);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(7868544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(7868600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(7868656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(7868712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(7868768);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(7868824);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[11166].first = 1;
        (*_glb_hdl_sc_channel_map)[11166].second.push_front(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(7868936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(7868992);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(7869048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(7869104);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(7869160);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[11184].first = 1;
        (*_glb_hdl_sc_channel_map)[11184].second.push_front(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[11170].first = 3;
        (*_glb_hdl_sc_channel_map)[11170].second.push_front(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[11172].first = 3;
        (*_glb_hdl_sc_channel_map)[11172].second.push_front(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[11173].first = 3;
        (*_glb_hdl_sc_channel_map)[11173].second.push_front(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[11174].first = 1;
        (*_glb_hdl_sc_channel_map)[11174].second.push_front(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(7869496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(7869552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(7869608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(7869664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(7869720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(7869776);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(7869832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(7869888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(7869944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(7870000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(7870056);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(7870112);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[11154].first = 1;
        (*_glb_hdl_sc_channel_map)[11154].second.push_front(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[11176].first = 3;
        (*_glb_hdl_sc_channel_map)[11176].second.push_front(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[11175].first = 3;
        (*_glb_hdl_sc_channel_map)[11175].second.push_front(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[11179].first = 3;
        (*_glb_hdl_sc_channel_map)[11179].second.push_front(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[11177].first = 1;
        (*_glb_hdl_sc_channel_map)[11177].second.push_front(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[11180].first = 3;
        (*_glb_hdl_sc_channel_map)[11180].second.push_front(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[11181].first = 1;
        (*_glb_hdl_sc_channel_map)[11181].second.push_front(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(7870560);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11144].first = 1;
        (*_glb_hdl_sc_channel_map)[11144].second.push_front(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11148].first = 1;
        (*_glb_hdl_sc_channel_map)[11148].second.push_front(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_13->xsim_set_dbg_index(796);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[11289].first = 3;
        (*_glb_hdl_sc_channel_map)[11289].second.push_front(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[11137].first = 3;
        (*_glb_hdl_sc_channel_map)[11137].second.push_front(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[11290].first = 3;
        (*_glb_hdl_sc_channel_map)[11290].second.push_front(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[11295].first = 3;
        (*_glb_hdl_sc_channel_map)[11295].second.push_front(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[11287].first = 3;
        (*_glb_hdl_sc_channel_map)[11287].second.push_front(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[11291].first = 1;
        (*_glb_hdl_sc_channel_map)[11291].second.push_front(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[11288].first = 3;
        (*_glb_hdl_sc_channel_map)[11288].second.push_front(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[11292].first = 3;
        (*_glb_hdl_sc_channel_map)[11292].second.push_front(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[11136].first = 3;
        (*_glb_hdl_sc_channel_map)[11136].second.push_front(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[11293].first = 3;
        (*_glb_hdl_sc_channel_map)[11293].second.push_front(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[11296].first = 3;
        (*_glb_hdl_sc_channel_map)[11296].second.push_front(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[11297].first = 1;
        (*_glb_hdl_sc_channel_map)[11297].second.push_front(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(7871448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[11310].first = 3;
        (*_glb_hdl_sc_channel_map)[11310].second.push_front(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[11313].first = 3;
        (*_glb_hdl_sc_channel_map)[11313].second.push_front(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[11311].first = 1;
        (*_glb_hdl_sc_channel_map)[11311].second.push_front(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[11314].first = 3;
        (*_glb_hdl_sc_channel_map)[11314].second.push_front(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[11315].first = 1;
        (*_glb_hdl_sc_channel_map)[11315].second.push_front(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(7871784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(7871840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(7871896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(7871952);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(7872008);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[11299].first = 1;
        (*_glb_hdl_sc_channel_map)[11299].second.push_front(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[11278].first = 3;
        (*_glb_hdl_sc_channel_map)[11278].second.push_front(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[11139].first = 3;
        (*_glb_hdl_sc_channel_map)[11139].second.push_front(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[11279].first = 3;
        (*_glb_hdl_sc_channel_map)[11279].second.push_front(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[11284].first = 3;
        (*_glb_hdl_sc_channel_map)[11284].second.push_front(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[11275].first = 3;
        (*_glb_hdl_sc_channel_map)[11275].second.push_front(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[11280].first = 1;
        (*_glb_hdl_sc_channel_map)[11280].second.push_front(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[11276].first = 3;
        (*_glb_hdl_sc_channel_map)[11276].second.push_front(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[11281].first = 3;
        (*_glb_hdl_sc_channel_map)[11281].second.push_front(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[11138].first = 3;
        (*_glb_hdl_sc_channel_map)[11138].second.push_front(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[11282].first = 3;
        (*_glb_hdl_sc_channel_map)[11282].second.push_front(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[11285].first = 3;
        (*_glb_hdl_sc_channel_map)[11285].second.push_front(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[11286].first = 1;
        (*_glb_hdl_sc_channel_map)[11286].second.push_front(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(7872792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(7872848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(7872904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(7872960);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(7873016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(7873072);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(7873128);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[11306].first = 1;
        (*_glb_hdl_sc_channel_map)[11306].second.push_front(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11274].first = 1;
        (*_glb_hdl_sc_channel_map)[11274].second.push_front(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11277].first = 1;
        (*_glb_hdl_sc_channel_map)[11277].second.push_front(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(7873352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(7873408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(7873464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(7873520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(7873576);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(7873632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(7873688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(7873744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(7873800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(7873856);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(7873912);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[11252].first = 1;
        (*_glb_hdl_sc_channel_map)[11252].second.push_front(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(7874024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(7874080);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(7874136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(7874192);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(7874248);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[11270].first = 1;
        (*_glb_hdl_sc_channel_map)[11270].second.push_front(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[11256].first = 3;
        (*_glb_hdl_sc_channel_map)[11256].second.push_front(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[11258].first = 3;
        (*_glb_hdl_sc_channel_map)[11258].second.push_front(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[11259].first = 3;
        (*_glb_hdl_sc_channel_map)[11259].second.push_front(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[11260].first = 1;
        (*_glb_hdl_sc_channel_map)[11260].second.push_front(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(7874584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(7874640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(7874696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(7874752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(7874808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(7874864);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(7874920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(7874976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(7875032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(7875088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(7875144);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(7875200);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[11240].first = 1;
        (*_glb_hdl_sc_channel_map)[11240].second.push_front(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[11262].first = 3;
        (*_glb_hdl_sc_channel_map)[11262].second.push_front(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[11261].first = 3;
        (*_glb_hdl_sc_channel_map)[11261].second.push_front(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[11265].first = 3;
        (*_glb_hdl_sc_channel_map)[11265].second.push_front(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[11263].first = 1;
        (*_glb_hdl_sc_channel_map)[11263].second.push_front(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[11266].first = 3;
        (*_glb_hdl_sc_channel_map)[11266].second.push_front(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[11267].first = 1;
        (*_glb_hdl_sc_channel_map)[11267].second.push_front(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(7875648);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11230].first = 1;
        (*_glb_hdl_sc_channel_map)[11230].second.push_front(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11234].first = 1;
        (*_glb_hdl_sc_channel_map)[11234].second.push_front(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_14->xsim_set_dbg_index(1053);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[13818].first = 3;
        (*_glb_hdl_sc_channel_map)[13818].second.push_front(p_14_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[13756].first = 3;
        (*_glb_hdl_sc_channel_map)[13756].second.push_front(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[13819].first = 3;
        (*_glb_hdl_sc_channel_map)[13819].second.push_front(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[13824].first = 3;
        (*_glb_hdl_sc_channel_map)[13824].second.push_front(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[13816].first = 3;
        (*_glb_hdl_sc_channel_map)[13816].second.push_front(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[13820].first = 1;
        (*_glb_hdl_sc_channel_map)[13820].second.push_front(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[13817].first = 3;
        (*_glb_hdl_sc_channel_map)[13817].second.push_front(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[13821].first = 3;
        (*_glb_hdl_sc_channel_map)[13821].second.push_front(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[13755].first = 3;
        (*_glb_hdl_sc_channel_map)[13755].second.push_front(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[13822].first = 3;
        (*_glb_hdl_sc_channel_map)[13822].second.push_front(p_14_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awuser.bind(*p_14_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[13825].first = 3;
        (*_glb_hdl_sc_channel_map)[13825].second.push_front(p_14_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[13826].first = 1;
        (*_glb_hdl_sc_channel_map)[13826].second.push_front(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(8665208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[13839].first = 3;
        (*_glb_hdl_sc_channel_map)[13839].second.push_front(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[13842].first = 3;
        (*_glb_hdl_sc_channel_map)[13842].second.push_front(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[13840].first = 1;
        (*_glb_hdl_sc_channel_map)[13840].second.push_front(p_14_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_wuser.bind(*p_14_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[13843].first = 3;
        (*_glb_hdl_sc_channel_map)[13843].second.push_front(p_14_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[13844].first = 1;
        (*_glb_hdl_sc_channel_map)[13844].second.push_front(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(8665544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(8665600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(8665656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_buser.bind(*p_14_s00_axi_buser);
        p_14_s00_axi_buser->set_sv_netview_offsetfromdp(8665712);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(8665768);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[13828].first = 1;
        (*_glb_hdl_sc_channel_map)[13828].second.push_front(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[13807].first = 3;
        (*_glb_hdl_sc_channel_map)[13807].second.push_front(p_14_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[13758].first = 3;
        (*_glb_hdl_sc_channel_map)[13758].second.push_front(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[13808].first = 3;
        (*_glb_hdl_sc_channel_map)[13808].second.push_front(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[13813].first = 3;
        (*_glb_hdl_sc_channel_map)[13813].second.push_front(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[13804].first = 3;
        (*_glb_hdl_sc_channel_map)[13804].second.push_front(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[13809].first = 1;
        (*_glb_hdl_sc_channel_map)[13809].second.push_front(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[13805].first = 3;
        (*_glb_hdl_sc_channel_map)[13805].second.push_front(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[13810].first = 3;
        (*_glb_hdl_sc_channel_map)[13810].second.push_front(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[13757].first = 3;
        (*_glb_hdl_sc_channel_map)[13757].second.push_front(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[13811].first = 3;
        (*_glb_hdl_sc_channel_map)[13811].second.push_front(p_14_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_aruser.bind(*p_14_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[13814].first = 3;
        (*_glb_hdl_sc_channel_map)[13814].second.push_front(p_14_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[13815].first = 1;
        (*_glb_hdl_sc_channel_map)[13815].second.push_front(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(8666552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(8666608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(8666664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(8666720);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(8666776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_ruser.bind(*p_14_s00_axi_ruser);
        p_14_s00_axi_ruser->set_sv_netview_offsetfromdp(8666832);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(8666888);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[13835].first = 1;
        (*_glb_hdl_sc_channel_map)[13835].second.push_front(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13803].first = 1;
        (*_glb_hdl_sc_channel_map)[13803].second.push_front(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13806].first = 1;
        (*_glb_hdl_sc_channel_map)[13806].second.push_front(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(8667112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(8667168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(8667224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(8667280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(8667336);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(8667392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(8667448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(8667504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(8667560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(8667616);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(8667672);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[13781].first = 1;
        (*_glb_hdl_sc_channel_map)[13781].second.push_front(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(8667784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(8667840);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(8667896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(8667952);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(8668008);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[13799].first = 1;
        (*_glb_hdl_sc_channel_map)[13799].second.push_front(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[13785].first = 3;
        (*_glb_hdl_sc_channel_map)[13785].second.push_front(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[13787].first = 3;
        (*_glb_hdl_sc_channel_map)[13787].second.push_front(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[13788].first = 3;
        (*_glb_hdl_sc_channel_map)[13788].second.push_front(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[13789].first = 1;
        (*_glb_hdl_sc_channel_map)[13789].second.push_front(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(8668344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(8668400);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(8668456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(8668512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(8668568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(8668624);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(8668680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(8668736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(8668792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(8668848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(8668904);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(8668960);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[13769].first = 1;
        (*_glb_hdl_sc_channel_map)[13769].second.push_front(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[13791].first = 3;
        (*_glb_hdl_sc_channel_map)[13791].second.push_front(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[13790].first = 3;
        (*_glb_hdl_sc_channel_map)[13790].second.push_front(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[13794].first = 3;
        (*_glb_hdl_sc_channel_map)[13794].second.push_front(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[13792].first = 1;
        (*_glb_hdl_sc_channel_map)[13792].second.push_front(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[13795].first = 3;
        (*_glb_hdl_sc_channel_map)[13795].second.push_front(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[13796].first = 1;
        (*_glb_hdl_sc_channel_map)[13796].second.push_front(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(8669408);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13759].first = 1;
        (*_glb_hdl_sc_channel_map)[13759].second.push_front(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13763].first = 1;
        (*_glb_hdl_sc_channel_map)[13763].second.push_front(p_14_m00_axi_aresetn);
        sc_inst_15 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_15->xsim_set_dbg_index(31);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awid.bind(*p_15_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[16937].first = 3;
        (*_glb_hdl_sc_channel_map)[16937].second.push_front(p_15_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[16934].first = 3;
        (*_glb_hdl_sc_channel_map)[16934].second.push_front(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[16938].first = 3;
        (*_glb_hdl_sc_channel_map)[16938].second.push_front(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[16944].first = 3;
        (*_glb_hdl_sc_channel_map)[16944].second.push_front(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[16935].first = 3;
        (*_glb_hdl_sc_channel_map)[16935].second.push_front(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[16939].first = 1;
        (*_glb_hdl_sc_channel_map)[16939].second.push_front(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[16936].first = 3;
        (*_glb_hdl_sc_channel_map)[16936].second.push_front(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[16940].first = 3;
        (*_glb_hdl_sc_channel_map)[16940].second.push_front(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[16943].first = 3;
        (*_glb_hdl_sc_channel_map)[16943].second.push_front(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[16941].first = 3;
        (*_glb_hdl_sc_channel_map)[16941].second.push_front(p_15_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[16945].first = 1;
        (*_glb_hdl_sc_channel_map)[16945].second.push_front(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(9419288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[16956].first = 3;
        (*_glb_hdl_sc_channel_map)[16956].second.push_front(p_15_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[16959].first = 3;
        (*_glb_hdl_sc_channel_map)[16959].second.push_front(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[16957].first = 1;
        (*_glb_hdl_sc_channel_map)[16957].second.push_front(p_15_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[16960].first = 1;
        (*_glb_hdl_sc_channel_map)[16960].second.push_front(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(9419568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_bid.bind(*p_15_s00_axi_bid);
        p_15_s00_axi_bid->set_sv_netview_offsetfromdp(9419624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(9419680);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(9419736);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[16947].first = 1;
        (*_glb_hdl_sc_channel_map)[16947].second.push_front(p_15_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_arid.bind(*p_15_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[16925].first = 3;
        (*_glb_hdl_sc_channel_map)[16925].second.push_front(p_15_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[16921].first = 3;
        (*_glb_hdl_sc_channel_map)[16921].second.push_front(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[16926].first = 3;
        (*_glb_hdl_sc_channel_map)[16926].second.push_front(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[16932].first = 3;
        (*_glb_hdl_sc_channel_map)[16932].second.push_front(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[16922].first = 3;
        (*_glb_hdl_sc_channel_map)[16922].second.push_front(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[16927].first = 1;
        (*_glb_hdl_sc_channel_map)[16927].second.push_front(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[16923].first = 3;
        (*_glb_hdl_sc_channel_map)[16923].second.push_front(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[16928].first = 3;
        (*_glb_hdl_sc_channel_map)[16928].second.push_front(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[16931].first = 3;
        (*_glb_hdl_sc_channel_map)[16931].second.push_front(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[16929].first = 3;
        (*_glb_hdl_sc_channel_map)[16929].second.push_front(p_15_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[16933].first = 1;
        (*_glb_hdl_sc_channel_map)[16933].second.push_front(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(9420464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_rid.bind(*p_15_s00_axi_rid);
        p_15_s00_axi_rid->set_sv_netview_offsetfromdp(9420520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(9420576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(9420632);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(9420688);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(9420744);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[16953].first = 1;
        (*_glb_hdl_sc_channel_map)[16953].second.push_front(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16920].first = 1;
        (*_glb_hdl_sc_channel_map)[16920].second.push_front(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16924].first = 1;
        (*_glb_hdl_sc_channel_map)[16924].second.push_front(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(9420968);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(9421024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(9421080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(9421136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(9421192);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(9421248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(9421304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(9421360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(9421416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(9421472);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(9421528);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[16735].first = 1;
        (*_glb_hdl_sc_channel_map)[16735].second.push_front(p_15_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(9421640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(9421696);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(9421752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(9421808);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(9421864);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[16753].first = 1;
        (*_glb_hdl_sc_channel_map)[16753].second.push_front(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[16739].first = 3;
        (*_glb_hdl_sc_channel_map)[16739].second.push_front(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16741].first = 3;
        (*_glb_hdl_sc_channel_map)[16741].second.push_front(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[16742].first = 3;
        (*_glb_hdl_sc_channel_map)[16742].second.push_front(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16743].first = 1;
        (*_glb_hdl_sc_channel_map)[16743].second.push_front(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(9422200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(9422256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(9422312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(9422368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(9422424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(9422480);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(9422536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(9422592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(9422648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(9422704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(9422760);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(9422816);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[16723].first = 1;
        (*_glb_hdl_sc_channel_map)[16723].second.push_front(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[16745].first = 3;
        (*_glb_hdl_sc_channel_map)[16745].second.push_front(p_15_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16744].first = 3;
        (*_glb_hdl_sc_channel_map)[16744].second.push_front(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16748].first = 3;
        (*_glb_hdl_sc_channel_map)[16748].second.push_front(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16746].first = 1;
        (*_glb_hdl_sc_channel_map)[16746].second.push_front(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[16749].first = 3;
        (*_glb_hdl_sc_channel_map)[16749].second.push_front(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16750].first = 1;
        (*_glb_hdl_sc_channel_map)[16750].second.push_front(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(9423264);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16713].first = 1;
        (*_glb_hdl_sc_channel_map)[16713].second.push_front(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16717].first = 1;
        (*_glb_hdl_sc_channel_map)[16717].second.push_front(p_15_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awid.bind(*p_15_m02_axi_awid);
        p_15_m02_axi_awid->set_sv_netview_offsetfromdp(9423432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_awaddr.bind(*p_15_m02_axi_awaddr);
        p_15_m02_axi_awaddr->set_sv_netview_offsetfromdp(9423488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_awlen.bind(*p_15_m02_axi_awlen);
        p_15_m02_axi_awlen->set_sv_netview_offsetfromdp(9423544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awsize.bind(*p_15_m02_axi_awsize);
        p_15_m02_axi_awsize->set_sv_netview_offsetfromdp(9423600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_awburst.bind(*p_15_m02_axi_awburst);
        p_15_m02_axi_awburst->set_sv_netview_offsetfromdp(9423656);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awlock.bind(*p_15_m02_axi_awlock);
        p_15_m02_axi_awlock->set_sv_netview_offsetfromdp(9423712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awcache.bind(*p_15_m02_axi_awcache);
        p_15_m02_axi_awcache->set_sv_netview_offsetfromdp(9423768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awprot.bind(*p_15_m02_axi_awprot);
        p_15_m02_axi_awprot->set_sv_netview_offsetfromdp(9423824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awqos.bind(*p_15_m02_axi_awqos);
        p_15_m02_axi_awqos->set_sv_netview_offsetfromdp(9423880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awuser.bind(*p_15_m02_axi_awuser);
        p_15_m02_axi_awuser->set_sv_netview_offsetfromdp(9423936);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awvalid.bind(*p_15_m02_axi_awvalid);
        p_15_m02_axi_awvalid->set_sv_netview_offsetfromdp(9423992);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awready.bind(*p_15_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[16823].first = 1;
        (*_glb_hdl_sc_channel_map)[16823].second.push_front(p_15_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_wdata.bind(*p_15_m02_axi_wdata);
        p_15_m02_axi_wdata->set_sv_netview_offsetfromdp(9424104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_wstrb.bind(*p_15_m02_axi_wstrb);
        p_15_m02_axi_wstrb->set_sv_netview_offsetfromdp(9424160);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wlast.bind(*p_15_m02_axi_wlast);
        p_15_m02_axi_wlast->set_sv_netview_offsetfromdp(9424216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_wuser.bind(*p_15_m02_axi_wuser);
        p_15_m02_axi_wuser->set_sv_netview_offsetfromdp(9424272);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wvalid.bind(*p_15_m02_axi_wvalid);
        p_15_m02_axi_wvalid->set_sv_netview_offsetfromdp(9424328);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wready.bind(*p_15_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[16841].first = 1;
        (*_glb_hdl_sc_channel_map)[16841].second.push_front(p_15_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_bid.bind(*p_15_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[16827].first = 3;
        (*_glb_hdl_sc_channel_map)[16827].second.push_front(p_15_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_bresp.bind(*p_15_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16829].first = 3;
        (*_glb_hdl_sc_channel_map)[16829].second.push_front(p_15_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_buser.bind(*p_15_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[16830].first = 3;
        (*_glb_hdl_sc_channel_map)[16830].second.push_front(p_15_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bvalid.bind(*p_15_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16831].first = 1;
        (*_glb_hdl_sc_channel_map)[16831].second.push_front(p_15_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bready.bind(*p_15_m02_axi_bready);
        p_15_m02_axi_bready->set_sv_netview_offsetfromdp(9424664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_arid.bind(*p_15_m02_axi_arid);
        p_15_m02_axi_arid->set_sv_netview_offsetfromdp(9424720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_araddr.bind(*p_15_m02_axi_araddr);
        p_15_m02_axi_araddr->set_sv_netview_offsetfromdp(9424776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_arlen.bind(*p_15_m02_axi_arlen);
        p_15_m02_axi_arlen->set_sv_netview_offsetfromdp(9424832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arsize.bind(*p_15_m02_axi_arsize);
        p_15_m02_axi_arsize->set_sv_netview_offsetfromdp(9424888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_arburst.bind(*p_15_m02_axi_arburst);
        p_15_m02_axi_arburst->set_sv_netview_offsetfromdp(9424944);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arlock.bind(*p_15_m02_axi_arlock);
        p_15_m02_axi_arlock->set_sv_netview_offsetfromdp(9425000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arcache.bind(*p_15_m02_axi_arcache);
        p_15_m02_axi_arcache->set_sv_netview_offsetfromdp(9425056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arprot.bind(*p_15_m02_axi_arprot);
        p_15_m02_axi_arprot->set_sv_netview_offsetfromdp(9425112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arqos.bind(*p_15_m02_axi_arqos);
        p_15_m02_axi_arqos->set_sv_netview_offsetfromdp(9425168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_aruser.bind(*p_15_m02_axi_aruser);
        p_15_m02_axi_aruser->set_sv_netview_offsetfromdp(9425224);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arvalid.bind(*p_15_m02_axi_arvalid);
        p_15_m02_axi_arvalid->set_sv_netview_offsetfromdp(9425280);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arready.bind(*p_15_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[16811].first = 1;
        (*_glb_hdl_sc_channel_map)[16811].second.push_front(p_15_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_rid.bind(*p_15_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[16833].first = 3;
        (*_glb_hdl_sc_channel_map)[16833].second.push_front(p_15_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_rdata.bind(*p_15_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16832].first = 3;
        (*_glb_hdl_sc_channel_map)[16832].second.push_front(p_15_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_rresp.bind(*p_15_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16836].first = 3;
        (*_glb_hdl_sc_channel_map)[16836].second.push_front(p_15_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rlast.bind(*p_15_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16834].first = 1;
        (*_glb_hdl_sc_channel_map)[16834].second.push_front(p_15_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_ruser.bind(*p_15_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[16837].first = 3;
        (*_glb_hdl_sc_channel_map)[16837].second.push_front(p_15_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rvalid.bind(*p_15_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16838].first = 1;
        (*_glb_hdl_sc_channel_map)[16838].second.push_front(p_15_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rready.bind(*p_15_m02_axi_rready);
        p_15_m02_axi_rready->set_sv_netview_offsetfromdp(9425728);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aclk.bind(*p_15_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16801].first = 1;
        (*_glb_hdl_sc_channel_map)[16801].second.push_front(p_15_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aresetn.bind(*p_15_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16805].first = 1;
        (*_glb_hdl_sc_channel_map)[16805].second.push_front(p_15_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awid.bind(*p_15_m03_axi_awid);
        p_15_m03_axi_awid->set_sv_netview_offsetfromdp(9425896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_awaddr.bind(*p_15_m03_axi_awaddr);
        p_15_m03_axi_awaddr->set_sv_netview_offsetfromdp(9425952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_awlen.bind(*p_15_m03_axi_awlen);
        p_15_m03_axi_awlen->set_sv_netview_offsetfromdp(9426008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awsize.bind(*p_15_m03_axi_awsize);
        p_15_m03_axi_awsize->set_sv_netview_offsetfromdp(9426064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_awburst.bind(*p_15_m03_axi_awburst);
        p_15_m03_axi_awburst->set_sv_netview_offsetfromdp(9426120);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awlock.bind(*p_15_m03_axi_awlock);
        p_15_m03_axi_awlock->set_sv_netview_offsetfromdp(9426176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awcache.bind(*p_15_m03_axi_awcache);
        p_15_m03_axi_awcache->set_sv_netview_offsetfromdp(9426232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awprot.bind(*p_15_m03_axi_awprot);
        p_15_m03_axi_awprot->set_sv_netview_offsetfromdp(9426288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awqos.bind(*p_15_m03_axi_awqos);
        p_15_m03_axi_awqos->set_sv_netview_offsetfromdp(9426344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awuser.bind(*p_15_m03_axi_awuser);
        p_15_m03_axi_awuser->set_sv_netview_offsetfromdp(9426400);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awvalid.bind(*p_15_m03_axi_awvalid);
        p_15_m03_axi_awvalid->set_sv_netview_offsetfromdp(9426456);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awready.bind(*p_15_m03_axi_awready);
        (*_glb_hdl_sc_channel_map)[16867].first = 1;
        (*_glb_hdl_sc_channel_map)[16867].second.push_front(p_15_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_wdata.bind(*p_15_m03_axi_wdata);
        p_15_m03_axi_wdata->set_sv_netview_offsetfromdp(9426568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_wstrb.bind(*p_15_m03_axi_wstrb);
        p_15_m03_axi_wstrb->set_sv_netview_offsetfromdp(9426624);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wlast.bind(*p_15_m03_axi_wlast);
        p_15_m03_axi_wlast->set_sv_netview_offsetfromdp(9426680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_wuser.bind(*p_15_m03_axi_wuser);
        p_15_m03_axi_wuser->set_sv_netview_offsetfromdp(9426736);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wvalid.bind(*p_15_m03_axi_wvalid);
        p_15_m03_axi_wvalid->set_sv_netview_offsetfromdp(9426792);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wready.bind(*p_15_m03_axi_wready);
        (*_glb_hdl_sc_channel_map)[16885].first = 1;
        (*_glb_hdl_sc_channel_map)[16885].second.push_front(p_15_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_bid.bind(*p_15_m03_axi_bid);
        (*_glb_hdl_sc_channel_map)[16871].first = 3;
        (*_glb_hdl_sc_channel_map)[16871].second.push_front(p_15_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_bresp.bind(*p_15_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16873].first = 3;
        (*_glb_hdl_sc_channel_map)[16873].second.push_front(p_15_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_buser.bind(*p_15_m03_axi_buser);
        (*_glb_hdl_sc_channel_map)[16874].first = 3;
        (*_glb_hdl_sc_channel_map)[16874].second.push_front(p_15_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bvalid.bind(*p_15_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16875].first = 1;
        (*_glb_hdl_sc_channel_map)[16875].second.push_front(p_15_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bready.bind(*p_15_m03_axi_bready);
        p_15_m03_axi_bready->set_sv_netview_offsetfromdp(9427128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_arid.bind(*p_15_m03_axi_arid);
        p_15_m03_axi_arid->set_sv_netview_offsetfromdp(9427184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_araddr.bind(*p_15_m03_axi_araddr);
        p_15_m03_axi_araddr->set_sv_netview_offsetfromdp(9427240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_arlen.bind(*p_15_m03_axi_arlen);
        p_15_m03_axi_arlen->set_sv_netview_offsetfromdp(9427296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arsize.bind(*p_15_m03_axi_arsize);
        p_15_m03_axi_arsize->set_sv_netview_offsetfromdp(9427352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_arburst.bind(*p_15_m03_axi_arburst);
        p_15_m03_axi_arburst->set_sv_netview_offsetfromdp(9427408);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arlock.bind(*p_15_m03_axi_arlock);
        p_15_m03_axi_arlock->set_sv_netview_offsetfromdp(9427464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arcache.bind(*p_15_m03_axi_arcache);
        p_15_m03_axi_arcache->set_sv_netview_offsetfromdp(9427520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arprot.bind(*p_15_m03_axi_arprot);
        p_15_m03_axi_arprot->set_sv_netview_offsetfromdp(9427576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arqos.bind(*p_15_m03_axi_arqos);
        p_15_m03_axi_arqos->set_sv_netview_offsetfromdp(9427632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_aruser.bind(*p_15_m03_axi_aruser);
        p_15_m03_axi_aruser->set_sv_netview_offsetfromdp(9427688);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arvalid.bind(*p_15_m03_axi_arvalid);
        p_15_m03_axi_arvalid->set_sv_netview_offsetfromdp(9427744);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arready.bind(*p_15_m03_axi_arready);
        (*_glb_hdl_sc_channel_map)[16855].first = 1;
        (*_glb_hdl_sc_channel_map)[16855].second.push_front(p_15_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_rid.bind(*p_15_m03_axi_rid);
        (*_glb_hdl_sc_channel_map)[16877].first = 3;
        (*_glb_hdl_sc_channel_map)[16877].second.push_front(p_15_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_rdata.bind(*p_15_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16876].first = 3;
        (*_glb_hdl_sc_channel_map)[16876].second.push_front(p_15_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_rresp.bind(*p_15_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16880].first = 3;
        (*_glb_hdl_sc_channel_map)[16880].second.push_front(p_15_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rlast.bind(*p_15_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16878].first = 1;
        (*_glb_hdl_sc_channel_map)[16878].second.push_front(p_15_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_ruser.bind(*p_15_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map)[16881].first = 3;
        (*_glb_hdl_sc_channel_map)[16881].second.push_front(p_15_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rvalid.bind(*p_15_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16882].first = 1;
        (*_glb_hdl_sc_channel_map)[16882].second.push_front(p_15_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rready.bind(*p_15_m03_axi_rready);
        p_15_m03_axi_rready->set_sv_netview_offsetfromdp(9428192);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aclk.bind(*p_15_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16845].first = 1;
        (*_glb_hdl_sc_channel_map)[16845].second.push_front(p_15_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aresetn.bind(*p_15_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16849].first = 1;
        (*_glb_hdl_sc_channel_map)[16849].second.push_front(p_15_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awid.bind(*p_15_m04_axi_awid);
        p_15_m04_axi_awid->set_sv_netview_offsetfromdp(9428360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_awaddr.bind(*p_15_m04_axi_awaddr);
        p_15_m04_axi_awaddr->set_sv_netview_offsetfromdp(9428416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_awlen.bind(*p_15_m04_axi_awlen);
        p_15_m04_axi_awlen->set_sv_netview_offsetfromdp(9428472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awsize.bind(*p_15_m04_axi_awsize);
        p_15_m04_axi_awsize->set_sv_netview_offsetfromdp(9428528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_awburst.bind(*p_15_m04_axi_awburst);
        p_15_m04_axi_awburst->set_sv_netview_offsetfromdp(9428584);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awlock.bind(*p_15_m04_axi_awlock);
        p_15_m04_axi_awlock->set_sv_netview_offsetfromdp(9428640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awcache.bind(*p_15_m04_axi_awcache);
        p_15_m04_axi_awcache->set_sv_netview_offsetfromdp(9428696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awprot.bind(*p_15_m04_axi_awprot);
        p_15_m04_axi_awprot->set_sv_netview_offsetfromdp(9428752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awqos.bind(*p_15_m04_axi_awqos);
        p_15_m04_axi_awqos->set_sv_netview_offsetfromdp(9428808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awuser.bind(*p_15_m04_axi_awuser);
        p_15_m04_axi_awuser->set_sv_netview_offsetfromdp(9428864);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awvalid.bind(*p_15_m04_axi_awvalid);
        p_15_m04_axi_awvalid->set_sv_netview_offsetfromdp(9428920);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awready.bind(*p_15_m04_axi_awready);
        (*_glb_hdl_sc_channel_map)[16902].first = 1;
        (*_glb_hdl_sc_channel_map)[16902].second.push_front(p_15_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_wdata.bind(*p_15_m04_axi_wdata);
        p_15_m04_axi_wdata->set_sv_netview_offsetfromdp(9429032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_wstrb.bind(*p_15_m04_axi_wstrb);
        p_15_m04_axi_wstrb->set_sv_netview_offsetfromdp(9429088);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wlast.bind(*p_15_m04_axi_wlast);
        p_15_m04_axi_wlast->set_sv_netview_offsetfromdp(9429144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_wuser.bind(*p_15_m04_axi_wuser);
        p_15_m04_axi_wuser->set_sv_netview_offsetfromdp(9429200);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wvalid.bind(*p_15_m04_axi_wvalid);
        p_15_m04_axi_wvalid->set_sv_netview_offsetfromdp(9429256);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wready.bind(*p_15_m04_axi_wready);
        (*_glb_hdl_sc_channel_map)[16917].first = 1;
        (*_glb_hdl_sc_channel_map)[16917].second.push_front(p_15_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_bid.bind(*p_15_m04_axi_bid);
        (*_glb_hdl_sc_channel_map)[16905].first = 3;
        (*_glb_hdl_sc_channel_map)[16905].second.push_front(p_15_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_bresp.bind(*p_15_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16907].first = 3;
        (*_glb_hdl_sc_channel_map)[16907].second.push_front(p_15_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_buser.bind(*p_15_m04_axi_buser);
        (*_glb_hdl_sc_channel_map)[1171].first = 3;
        (*_glb_hdl_sc_channel_map)[1171].second.push_front(p_15_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bvalid.bind(*p_15_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16908].first = 1;
        (*_glb_hdl_sc_channel_map)[16908].second.push_front(p_15_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bready.bind(*p_15_m04_axi_bready);
        p_15_m04_axi_bready->set_sv_netview_offsetfromdp(9429592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_arid.bind(*p_15_m04_axi_arid);
        p_15_m04_axi_arid->set_sv_netview_offsetfromdp(9429648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_araddr.bind(*p_15_m04_axi_araddr);
        p_15_m04_axi_araddr->set_sv_netview_offsetfromdp(9429704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_arlen.bind(*p_15_m04_axi_arlen);
        p_15_m04_axi_arlen->set_sv_netview_offsetfromdp(9429760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arsize.bind(*p_15_m04_axi_arsize);
        p_15_m04_axi_arsize->set_sv_netview_offsetfromdp(9429816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_arburst.bind(*p_15_m04_axi_arburst);
        p_15_m04_axi_arburst->set_sv_netview_offsetfromdp(9429872);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arlock.bind(*p_15_m04_axi_arlock);
        p_15_m04_axi_arlock->set_sv_netview_offsetfromdp(9429928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arcache.bind(*p_15_m04_axi_arcache);
        p_15_m04_axi_arcache->set_sv_netview_offsetfromdp(9429984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arprot.bind(*p_15_m04_axi_arprot);
        p_15_m04_axi_arprot->set_sv_netview_offsetfromdp(9430040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arqos.bind(*p_15_m04_axi_arqos);
        p_15_m04_axi_arqos->set_sv_netview_offsetfromdp(9430096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_aruser.bind(*p_15_m04_axi_aruser);
        p_15_m04_axi_aruser->set_sv_netview_offsetfromdp(9430152);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arvalid.bind(*p_15_m04_axi_arvalid);
        p_15_m04_axi_arvalid->set_sv_netview_offsetfromdp(9430208);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arready.bind(*p_15_m04_axi_arready);
        (*_glb_hdl_sc_channel_map)[16895].first = 1;
        (*_glb_hdl_sc_channel_map)[16895].second.push_front(p_15_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_rid.bind(*p_15_m04_axi_rid);
        (*_glb_hdl_sc_channel_map)[16910].first = 3;
        (*_glb_hdl_sc_channel_map)[16910].second.push_front(p_15_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_rdata.bind(*p_15_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16909].first = 3;
        (*_glb_hdl_sc_channel_map)[16909].second.push_front(p_15_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_rresp.bind(*p_15_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16913].first = 3;
        (*_glb_hdl_sc_channel_map)[16913].second.push_front(p_15_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rlast.bind(*p_15_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16911].first = 1;
        (*_glb_hdl_sc_channel_map)[16911].second.push_front(p_15_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_ruser.bind(*p_15_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map)[1170].first = 3;
        (*_glb_hdl_sc_channel_map)[1170].second.push_front(p_15_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rvalid.bind(*p_15_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16914].first = 1;
        (*_glb_hdl_sc_channel_map)[16914].second.push_front(p_15_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rready.bind(*p_15_m04_axi_rready);
        p_15_m04_axi_rready->set_sv_netview_offsetfromdp(9430656);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aclk.bind(*p_15_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16889].first = 1;
        (*_glb_hdl_sc_channel_map)[16889].second.push_front(p_15_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aresetn.bind(*p_15_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16892].first = 1;
        (*_glb_hdl_sc_channel_map)[16892].second.push_front(p_15_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awid.bind(*p_15_m01_axi_awid);
        p_15_m01_axi_awid->set_sv_netview_offsetfromdp(9430824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_awaddr.bind(*p_15_m01_axi_awaddr);
        p_15_m01_axi_awaddr->set_sv_netview_offsetfromdp(9430880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_awlen.bind(*p_15_m01_axi_awlen);
        p_15_m01_axi_awlen->set_sv_netview_offsetfromdp(9430936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awsize.bind(*p_15_m01_axi_awsize);
        p_15_m01_axi_awsize->set_sv_netview_offsetfromdp(9430992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_awburst.bind(*p_15_m01_axi_awburst);
        p_15_m01_axi_awburst->set_sv_netview_offsetfromdp(9431048);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awlock.bind(*p_15_m01_axi_awlock);
        p_15_m01_axi_awlock->set_sv_netview_offsetfromdp(9431104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awcache.bind(*p_15_m01_axi_awcache);
        p_15_m01_axi_awcache->set_sv_netview_offsetfromdp(9431160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awprot.bind(*p_15_m01_axi_awprot);
        p_15_m01_axi_awprot->set_sv_netview_offsetfromdp(9431216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awqos.bind(*p_15_m01_axi_awqos);
        p_15_m01_axi_awqos->set_sv_netview_offsetfromdp(9431272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awuser.bind(*p_15_m01_axi_awuser);
        p_15_m01_axi_awuser->set_sv_netview_offsetfromdp(9431328);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awvalid.bind(*p_15_m01_axi_awvalid);
        p_15_m01_axi_awvalid->set_sv_netview_offsetfromdp(9431384);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awready.bind(*p_15_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[16779].first = 1;
        (*_glb_hdl_sc_channel_map)[16779].second.push_front(p_15_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_wdata.bind(*p_15_m01_axi_wdata);
        p_15_m01_axi_wdata->set_sv_netview_offsetfromdp(9431496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_wstrb.bind(*p_15_m01_axi_wstrb);
        p_15_m01_axi_wstrb->set_sv_netview_offsetfromdp(9431552);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wlast.bind(*p_15_m01_axi_wlast);
        p_15_m01_axi_wlast->set_sv_netview_offsetfromdp(9431608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_wuser.bind(*p_15_m01_axi_wuser);
        p_15_m01_axi_wuser->set_sv_netview_offsetfromdp(9431664);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wvalid.bind(*p_15_m01_axi_wvalid);
        p_15_m01_axi_wvalid->set_sv_netview_offsetfromdp(9431720);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wready.bind(*p_15_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[16797].first = 1;
        (*_glb_hdl_sc_channel_map)[16797].second.push_front(p_15_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_bid.bind(*p_15_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[16783].first = 3;
        (*_glb_hdl_sc_channel_map)[16783].second.push_front(p_15_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_bresp.bind(*p_15_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16785].first = 3;
        (*_glb_hdl_sc_channel_map)[16785].second.push_front(p_15_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_buser.bind(*p_15_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[16786].first = 3;
        (*_glb_hdl_sc_channel_map)[16786].second.push_front(p_15_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bvalid.bind(*p_15_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16787].first = 1;
        (*_glb_hdl_sc_channel_map)[16787].second.push_front(p_15_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bready.bind(*p_15_m01_axi_bready);
        p_15_m01_axi_bready->set_sv_netview_offsetfromdp(9432056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_arid.bind(*p_15_m01_axi_arid);
        p_15_m01_axi_arid->set_sv_netview_offsetfromdp(9432112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_araddr.bind(*p_15_m01_axi_araddr);
        p_15_m01_axi_araddr->set_sv_netview_offsetfromdp(9432168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_arlen.bind(*p_15_m01_axi_arlen);
        p_15_m01_axi_arlen->set_sv_netview_offsetfromdp(9432224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arsize.bind(*p_15_m01_axi_arsize);
        p_15_m01_axi_arsize->set_sv_netview_offsetfromdp(9432280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_arburst.bind(*p_15_m01_axi_arburst);
        p_15_m01_axi_arburst->set_sv_netview_offsetfromdp(9432336);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arlock.bind(*p_15_m01_axi_arlock);
        p_15_m01_axi_arlock->set_sv_netview_offsetfromdp(9432392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arcache.bind(*p_15_m01_axi_arcache);
        p_15_m01_axi_arcache->set_sv_netview_offsetfromdp(9432448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arprot.bind(*p_15_m01_axi_arprot);
        p_15_m01_axi_arprot->set_sv_netview_offsetfromdp(9432504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arqos.bind(*p_15_m01_axi_arqos);
        p_15_m01_axi_arqos->set_sv_netview_offsetfromdp(9432560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_aruser.bind(*p_15_m01_axi_aruser);
        p_15_m01_axi_aruser->set_sv_netview_offsetfromdp(9432616);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arvalid.bind(*p_15_m01_axi_arvalid);
        p_15_m01_axi_arvalid->set_sv_netview_offsetfromdp(9432672);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arready.bind(*p_15_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[16767].first = 1;
        (*_glb_hdl_sc_channel_map)[16767].second.push_front(p_15_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_rid.bind(*p_15_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[16789].first = 3;
        (*_glb_hdl_sc_channel_map)[16789].second.push_front(p_15_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_rdata.bind(*p_15_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16788].first = 3;
        (*_glb_hdl_sc_channel_map)[16788].second.push_front(p_15_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_rresp.bind(*p_15_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16792].first = 3;
        (*_glb_hdl_sc_channel_map)[16792].second.push_front(p_15_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rlast.bind(*p_15_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16790].first = 1;
        (*_glb_hdl_sc_channel_map)[16790].second.push_front(p_15_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_ruser.bind(*p_15_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[16793].first = 3;
        (*_glb_hdl_sc_channel_map)[16793].second.push_front(p_15_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rvalid.bind(*p_15_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16794].first = 1;
        (*_glb_hdl_sc_channel_map)[16794].second.push_front(p_15_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rready.bind(*p_15_m01_axi_rready);
        p_15_m01_axi_rready->set_sv_netview_offsetfromdp(9433120);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aclk.bind(*p_15_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16757].first = 1;
        (*_glb_hdl_sc_channel_map)[16757].second.push_front(p_15_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aresetn.bind(*p_15_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16761].first = 1;
        (*_glb_hdl_sc_channel_map)[16761].second.push_front(p_15_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_awid.bind(*p_15_s03_axi_awid);
        (*_glb_hdl_sc_channel_map)[17060].first = 3;
        (*_glb_hdl_sc_channel_map)[17060].second.push_front(p_15_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_awaddr.bind(*p_15_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17057].first = 3;
        (*_glb_hdl_sc_channel_map)[17057].second.push_front(p_15_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_awlen.bind(*p_15_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17061].first = 3;
        (*_glb_hdl_sc_channel_map)[17061].second.push_front(p_15_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awsize.bind(*p_15_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17067].first = 3;
        (*_glb_hdl_sc_channel_map)[17067].second.push_front(p_15_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_awburst.bind(*p_15_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17058].first = 3;
        (*_glb_hdl_sc_channel_map)[17058].second.push_front(p_15_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awlock.bind(*p_15_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17062].first = 1;
        (*_glb_hdl_sc_channel_map)[17062].second.push_front(p_15_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awcache.bind(*p_15_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17059].first = 3;
        (*_glb_hdl_sc_channel_map)[17059].second.push_front(p_15_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awprot.bind(*p_15_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17063].first = 3;
        (*_glb_hdl_sc_channel_map)[17063].second.push_front(p_15_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awregion.bind(*p_15_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17066].first = 3;
        (*_glb_hdl_sc_channel_map)[17066].second.push_front(p_15_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awqos.bind(*p_15_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17064].first = 3;
        (*_glb_hdl_sc_channel_map)[17064].second.push_front(p_15_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awvalid.bind(*p_15_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17068].first = 1;
        (*_glb_hdl_sc_channel_map)[17068].second.push_front(p_15_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awready.bind(*p_15_s03_axi_awready);
        p_15_s03_axi_awready->set_sv_netview_offsetfromdp(9433904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_wdata.bind(*p_15_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17079].first = 3;
        (*_glb_hdl_sc_channel_map)[17079].second.push_front(p_15_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_wstrb.bind(*p_15_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17082].first = 3;
        (*_glb_hdl_sc_channel_map)[17082].second.push_front(p_15_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wlast.bind(*p_15_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17080].first = 1;
        (*_glb_hdl_sc_channel_map)[17080].second.push_front(p_15_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wvalid.bind(*p_15_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17083].first = 1;
        (*_glb_hdl_sc_channel_map)[17083].second.push_front(p_15_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wready.bind(*p_15_s03_axi_wready);
        p_15_s03_axi_wready->set_sv_netview_offsetfromdp(9434184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_bid.bind(*p_15_s03_axi_bid);
        p_15_s03_axi_bid->set_sv_netview_offsetfromdp(9434240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_bresp.bind(*p_15_s03_axi_bresp);
        p_15_s03_axi_bresp->set_sv_netview_offsetfromdp(9434296);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bvalid.bind(*p_15_s03_axi_bvalid);
        p_15_s03_axi_bvalid->set_sv_netview_offsetfromdp(9434352);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bready.bind(*p_15_s03_axi_bready);
        (*_glb_hdl_sc_channel_map)[17070].first = 1;
        (*_glb_hdl_sc_channel_map)[17070].second.push_front(p_15_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_arid.bind(*p_15_s03_axi_arid);
        (*_glb_hdl_sc_channel_map)[17048].first = 3;
        (*_glb_hdl_sc_channel_map)[17048].second.push_front(p_15_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_araddr.bind(*p_15_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17044].first = 3;
        (*_glb_hdl_sc_channel_map)[17044].second.push_front(p_15_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_arlen.bind(*p_15_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17049].first = 3;
        (*_glb_hdl_sc_channel_map)[17049].second.push_front(p_15_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arsize.bind(*p_15_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17055].first = 3;
        (*_glb_hdl_sc_channel_map)[17055].second.push_front(p_15_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_arburst.bind(*p_15_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17045].first = 3;
        (*_glb_hdl_sc_channel_map)[17045].second.push_front(p_15_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arlock.bind(*p_15_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17050].first = 1;
        (*_glb_hdl_sc_channel_map)[17050].second.push_front(p_15_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arcache.bind(*p_15_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17046].first = 3;
        (*_glb_hdl_sc_channel_map)[17046].second.push_front(p_15_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arprot.bind(*p_15_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17051].first = 3;
        (*_glb_hdl_sc_channel_map)[17051].second.push_front(p_15_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arregion.bind(*p_15_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17054].first = 3;
        (*_glb_hdl_sc_channel_map)[17054].second.push_front(p_15_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arqos.bind(*p_15_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17052].first = 3;
        (*_glb_hdl_sc_channel_map)[17052].second.push_front(p_15_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arvalid.bind(*p_15_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17056].first = 1;
        (*_glb_hdl_sc_channel_map)[17056].second.push_front(p_15_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arready.bind(*p_15_s03_axi_arready);
        p_15_s03_axi_arready->set_sv_netview_offsetfromdp(9435080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_rid.bind(*p_15_s03_axi_rid);
        p_15_s03_axi_rid->set_sv_netview_offsetfromdp(9435136);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_rdata.bind(*p_15_s03_axi_rdata);
        p_15_s03_axi_rdata->set_sv_netview_offsetfromdp(9435192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_rresp.bind(*p_15_s03_axi_rresp);
        p_15_s03_axi_rresp->set_sv_netview_offsetfromdp(9435248);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rlast.bind(*p_15_s03_axi_rlast);
        p_15_s03_axi_rlast->set_sv_netview_offsetfromdp(9435304);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rvalid.bind(*p_15_s03_axi_rvalid);
        p_15_s03_axi_rvalid->set_sv_netview_offsetfromdp(9435360);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rready.bind(*p_15_s03_axi_rready);
        (*_glb_hdl_sc_channel_map)[17076].first = 1;
        (*_glb_hdl_sc_channel_map)[17076].second.push_front(p_15_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aclk.bind(*p_15_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17043].first = 1;
        (*_glb_hdl_sc_channel_map)[17043].second.push_front(p_15_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aresetn.bind(*p_15_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17047].first = 1;
        (*_glb_hdl_sc_channel_map)[17047].second.push_front(p_15_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_awid.bind(*p_15_s01_axi_awid);
        (*_glb_hdl_sc_channel_map)[16978].first = 3;
        (*_glb_hdl_sc_channel_map)[16978].second.push_front(p_15_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_awaddr.bind(*p_15_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[16975].first = 3;
        (*_glb_hdl_sc_channel_map)[16975].second.push_front(p_15_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_awlen.bind(*p_15_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map)[16979].first = 3;
        (*_glb_hdl_sc_channel_map)[16979].second.push_front(p_15_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awsize.bind(*p_15_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map)[16985].first = 3;
        (*_glb_hdl_sc_channel_map)[16985].second.push_front(p_15_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_awburst.bind(*p_15_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map)[16976].first = 3;
        (*_glb_hdl_sc_channel_map)[16976].second.push_front(p_15_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awlock.bind(*p_15_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map)[16980].first = 1;
        (*_glb_hdl_sc_channel_map)[16980].second.push_front(p_15_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awcache.bind(*p_15_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map)[16977].first = 3;
        (*_glb_hdl_sc_channel_map)[16977].second.push_front(p_15_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awprot.bind(*p_15_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map)[16981].first = 3;
        (*_glb_hdl_sc_channel_map)[16981].second.push_front(p_15_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awregion.bind(*p_15_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map)[16984].first = 3;
        (*_glb_hdl_sc_channel_map)[16984].second.push_front(p_15_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awqos.bind(*p_15_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map)[16982].first = 3;
        (*_glb_hdl_sc_channel_map)[16982].second.push_front(p_15_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awvalid.bind(*p_15_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[16986].first = 1;
        (*_glb_hdl_sc_channel_map)[16986].second.push_front(p_15_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awready.bind(*p_15_s01_axi_awready);
        p_15_s01_axi_awready->set_sv_netview_offsetfromdp(9436200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_wdata.bind(*p_15_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map)[16997].first = 3;
        (*_glb_hdl_sc_channel_map)[16997].second.push_front(p_15_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_wstrb.bind(*p_15_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17000].first = 3;
        (*_glb_hdl_sc_channel_map)[17000].second.push_front(p_15_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wlast.bind(*p_15_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map)[16998].first = 1;
        (*_glb_hdl_sc_channel_map)[16998].second.push_front(p_15_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wvalid.bind(*p_15_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17001].first = 1;
        (*_glb_hdl_sc_channel_map)[17001].second.push_front(p_15_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wready.bind(*p_15_s01_axi_wready);
        p_15_s01_axi_wready->set_sv_netview_offsetfromdp(9436480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_bid.bind(*p_15_s01_axi_bid);
        p_15_s01_axi_bid->set_sv_netview_offsetfromdp(9436536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_bresp.bind(*p_15_s01_axi_bresp);
        p_15_s01_axi_bresp->set_sv_netview_offsetfromdp(9436592);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bvalid.bind(*p_15_s01_axi_bvalid);
        p_15_s01_axi_bvalid->set_sv_netview_offsetfromdp(9436648);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bready.bind(*p_15_s01_axi_bready);
        (*_glb_hdl_sc_channel_map)[16988].first = 1;
        (*_glb_hdl_sc_channel_map)[16988].second.push_front(p_15_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_arid.bind(*p_15_s01_axi_arid);
        (*_glb_hdl_sc_channel_map)[16966].first = 3;
        (*_glb_hdl_sc_channel_map)[16966].second.push_front(p_15_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_araddr.bind(*p_15_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map)[16962].first = 3;
        (*_glb_hdl_sc_channel_map)[16962].second.push_front(p_15_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_arlen.bind(*p_15_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map)[16967].first = 3;
        (*_glb_hdl_sc_channel_map)[16967].second.push_front(p_15_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arsize.bind(*p_15_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map)[16973].first = 3;
        (*_glb_hdl_sc_channel_map)[16973].second.push_front(p_15_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_arburst.bind(*p_15_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map)[16963].first = 3;
        (*_glb_hdl_sc_channel_map)[16963].second.push_front(p_15_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arlock.bind(*p_15_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map)[16968].first = 1;
        (*_glb_hdl_sc_channel_map)[16968].second.push_front(p_15_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arcache.bind(*p_15_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map)[16964].first = 3;
        (*_glb_hdl_sc_channel_map)[16964].second.push_front(p_15_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arprot.bind(*p_15_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map)[16969].first = 3;
        (*_glb_hdl_sc_channel_map)[16969].second.push_front(p_15_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arregion.bind(*p_15_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map)[16972].first = 3;
        (*_glb_hdl_sc_channel_map)[16972].second.push_front(p_15_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arqos.bind(*p_15_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map)[16970].first = 3;
        (*_glb_hdl_sc_channel_map)[16970].second.push_front(p_15_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arvalid.bind(*p_15_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[16974].first = 1;
        (*_glb_hdl_sc_channel_map)[16974].second.push_front(p_15_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arready.bind(*p_15_s01_axi_arready);
        p_15_s01_axi_arready->set_sv_netview_offsetfromdp(9437376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_rid.bind(*p_15_s01_axi_rid);
        p_15_s01_axi_rid->set_sv_netview_offsetfromdp(9437432);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_rdata.bind(*p_15_s01_axi_rdata);
        p_15_s01_axi_rdata->set_sv_netview_offsetfromdp(9437488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_rresp.bind(*p_15_s01_axi_rresp);
        p_15_s01_axi_rresp->set_sv_netview_offsetfromdp(9437544);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rlast.bind(*p_15_s01_axi_rlast);
        p_15_s01_axi_rlast->set_sv_netview_offsetfromdp(9437600);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rvalid.bind(*p_15_s01_axi_rvalid);
        p_15_s01_axi_rvalid->set_sv_netview_offsetfromdp(9437656);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rready.bind(*p_15_s01_axi_rready);
        (*_glb_hdl_sc_channel_map)[16994].first = 1;
        (*_glb_hdl_sc_channel_map)[16994].second.push_front(p_15_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aclk.bind(*p_15_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16961].first = 1;
        (*_glb_hdl_sc_channel_map)[16961].second.push_front(p_15_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aresetn.bind(*p_15_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16965].first = 1;
        (*_glb_hdl_sc_channel_map)[16965].second.push_front(p_15_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_awid.bind(*p_15_s02_axi_awid);
        (*_glb_hdl_sc_channel_map)[17019].first = 3;
        (*_glb_hdl_sc_channel_map)[17019].second.push_front(p_15_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_awaddr.bind(*p_15_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17016].first = 3;
        (*_glb_hdl_sc_channel_map)[17016].second.push_front(p_15_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_awlen.bind(*p_15_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17020].first = 3;
        (*_glb_hdl_sc_channel_map)[17020].second.push_front(p_15_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awsize.bind(*p_15_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17026].first = 3;
        (*_glb_hdl_sc_channel_map)[17026].second.push_front(p_15_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_awburst.bind(*p_15_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17017].first = 3;
        (*_glb_hdl_sc_channel_map)[17017].second.push_front(p_15_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awlock.bind(*p_15_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17021].first = 1;
        (*_glb_hdl_sc_channel_map)[17021].second.push_front(p_15_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awcache.bind(*p_15_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17018].first = 3;
        (*_glb_hdl_sc_channel_map)[17018].second.push_front(p_15_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awprot.bind(*p_15_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17022].first = 3;
        (*_glb_hdl_sc_channel_map)[17022].second.push_front(p_15_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awregion.bind(*p_15_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17025].first = 3;
        (*_glb_hdl_sc_channel_map)[17025].second.push_front(p_15_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awqos.bind(*p_15_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17023].first = 3;
        (*_glb_hdl_sc_channel_map)[17023].second.push_front(p_15_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awvalid.bind(*p_15_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17027].first = 1;
        (*_glb_hdl_sc_channel_map)[17027].second.push_front(p_15_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awready.bind(*p_15_s02_axi_awready);
        p_15_s02_axi_awready->set_sv_netview_offsetfromdp(9438496);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_wdata.bind(*p_15_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17038].first = 3;
        (*_glb_hdl_sc_channel_map)[17038].second.push_front(p_15_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_wstrb.bind(*p_15_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17041].first = 3;
        (*_glb_hdl_sc_channel_map)[17041].second.push_front(p_15_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wlast.bind(*p_15_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17039].first = 1;
        (*_glb_hdl_sc_channel_map)[17039].second.push_front(p_15_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wvalid.bind(*p_15_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17042].first = 1;
        (*_glb_hdl_sc_channel_map)[17042].second.push_front(p_15_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wready.bind(*p_15_s02_axi_wready);
        p_15_s02_axi_wready->set_sv_netview_offsetfromdp(9438776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_bid.bind(*p_15_s02_axi_bid);
        p_15_s02_axi_bid->set_sv_netview_offsetfromdp(9438832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_bresp.bind(*p_15_s02_axi_bresp);
        p_15_s02_axi_bresp->set_sv_netview_offsetfromdp(9438888);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bvalid.bind(*p_15_s02_axi_bvalid);
        p_15_s02_axi_bvalid->set_sv_netview_offsetfromdp(9438944);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bready.bind(*p_15_s02_axi_bready);
        (*_glb_hdl_sc_channel_map)[17029].first = 1;
        (*_glb_hdl_sc_channel_map)[17029].second.push_front(p_15_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_arid.bind(*p_15_s02_axi_arid);
        (*_glb_hdl_sc_channel_map)[17007].first = 3;
        (*_glb_hdl_sc_channel_map)[17007].second.push_front(p_15_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_araddr.bind(*p_15_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17003].first = 3;
        (*_glb_hdl_sc_channel_map)[17003].second.push_front(p_15_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_arlen.bind(*p_15_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17008].first = 3;
        (*_glb_hdl_sc_channel_map)[17008].second.push_front(p_15_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arsize.bind(*p_15_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17014].first = 3;
        (*_glb_hdl_sc_channel_map)[17014].second.push_front(p_15_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_arburst.bind(*p_15_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17004].first = 3;
        (*_glb_hdl_sc_channel_map)[17004].second.push_front(p_15_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arlock.bind(*p_15_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17009].first = 1;
        (*_glb_hdl_sc_channel_map)[17009].second.push_front(p_15_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arcache.bind(*p_15_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17005].first = 3;
        (*_glb_hdl_sc_channel_map)[17005].second.push_front(p_15_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arprot.bind(*p_15_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17010].first = 3;
        (*_glb_hdl_sc_channel_map)[17010].second.push_front(p_15_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arregion.bind(*p_15_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17013].first = 3;
        (*_glb_hdl_sc_channel_map)[17013].second.push_front(p_15_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arqos.bind(*p_15_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17011].first = 3;
        (*_glb_hdl_sc_channel_map)[17011].second.push_front(p_15_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arvalid.bind(*p_15_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17015].first = 1;
        (*_glb_hdl_sc_channel_map)[17015].second.push_front(p_15_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arready.bind(*p_15_s02_axi_arready);
        p_15_s02_axi_arready->set_sv_netview_offsetfromdp(9439672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_rid.bind(*p_15_s02_axi_rid);
        p_15_s02_axi_rid->set_sv_netview_offsetfromdp(9439728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_rdata.bind(*p_15_s02_axi_rdata);
        p_15_s02_axi_rdata->set_sv_netview_offsetfromdp(9439784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_rresp.bind(*p_15_s02_axi_rresp);
        p_15_s02_axi_rresp->set_sv_netview_offsetfromdp(9439840);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rlast.bind(*p_15_s02_axi_rlast);
        p_15_s02_axi_rlast->set_sv_netview_offsetfromdp(9439896);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rvalid.bind(*p_15_s02_axi_rvalid);
        p_15_s02_axi_rvalid->set_sv_netview_offsetfromdp(9439952);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rready.bind(*p_15_s02_axi_rready);
        (*_glb_hdl_sc_channel_map)[17035].first = 1;
        (*_glb_hdl_sc_channel_map)[17035].second.push_front(p_15_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aclk.bind(*p_15_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17002].first = 1;
        (*_glb_hdl_sc_channel_map)[17002].second.push_front(p_15_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aresetn.bind(*p_15_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17006].first = 1;
        (*_glb_hdl_sc_channel_map)[17006].second.push_front(p_15_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_awid.bind(*p_15_s04_axi_awid);
        (*_glb_hdl_sc_channel_map)[17101].first = 3;
        (*_glb_hdl_sc_channel_map)[17101].second.push_front(p_15_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_awaddr.bind(*p_15_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17098].first = 3;
        (*_glb_hdl_sc_channel_map)[17098].second.push_front(p_15_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_awlen.bind(*p_15_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17102].first = 3;
        (*_glb_hdl_sc_channel_map)[17102].second.push_front(p_15_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awsize.bind(*p_15_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17108].first = 3;
        (*_glb_hdl_sc_channel_map)[17108].second.push_front(p_15_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_awburst.bind(*p_15_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17099].first = 3;
        (*_glb_hdl_sc_channel_map)[17099].second.push_front(p_15_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awlock.bind(*p_15_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17103].first = 1;
        (*_glb_hdl_sc_channel_map)[17103].second.push_front(p_15_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awcache.bind(*p_15_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17100].first = 3;
        (*_glb_hdl_sc_channel_map)[17100].second.push_front(p_15_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awprot.bind(*p_15_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17104].first = 3;
        (*_glb_hdl_sc_channel_map)[17104].second.push_front(p_15_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awregion.bind(*p_15_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17107].first = 3;
        (*_glb_hdl_sc_channel_map)[17107].second.push_front(p_15_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awqos.bind(*p_15_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17105].first = 3;
        (*_glb_hdl_sc_channel_map)[17105].second.push_front(p_15_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awvalid.bind(*p_15_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17109].first = 1;
        (*_glb_hdl_sc_channel_map)[17109].second.push_front(p_15_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awready.bind(*p_15_s04_axi_awready);
        p_15_s04_axi_awready->set_sv_netview_offsetfromdp(9440792);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_wdata.bind(*p_15_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17120].first = 3;
        (*_glb_hdl_sc_channel_map)[17120].second.push_front(p_15_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_wstrb.bind(*p_15_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17123].first = 3;
        (*_glb_hdl_sc_channel_map)[17123].second.push_front(p_15_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wlast.bind(*p_15_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17121].first = 1;
        (*_glb_hdl_sc_channel_map)[17121].second.push_front(p_15_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wvalid.bind(*p_15_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17124].first = 1;
        (*_glb_hdl_sc_channel_map)[17124].second.push_front(p_15_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wready.bind(*p_15_s04_axi_wready);
        p_15_s04_axi_wready->set_sv_netview_offsetfromdp(9441072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_bid.bind(*p_15_s04_axi_bid);
        p_15_s04_axi_bid->set_sv_netview_offsetfromdp(9441128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_bresp.bind(*p_15_s04_axi_bresp);
        p_15_s04_axi_bresp->set_sv_netview_offsetfromdp(9441184);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bvalid.bind(*p_15_s04_axi_bvalid);
        p_15_s04_axi_bvalid->set_sv_netview_offsetfromdp(9441240);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bready.bind(*p_15_s04_axi_bready);
        (*_glb_hdl_sc_channel_map)[17111].first = 1;
        (*_glb_hdl_sc_channel_map)[17111].second.push_front(p_15_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_arid.bind(*p_15_s04_axi_arid);
        (*_glb_hdl_sc_channel_map)[17089].first = 3;
        (*_glb_hdl_sc_channel_map)[17089].second.push_front(p_15_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_araddr.bind(*p_15_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17085].first = 3;
        (*_glb_hdl_sc_channel_map)[17085].second.push_front(p_15_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_arlen.bind(*p_15_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17090].first = 3;
        (*_glb_hdl_sc_channel_map)[17090].second.push_front(p_15_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arsize.bind(*p_15_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17096].first = 3;
        (*_glb_hdl_sc_channel_map)[17096].second.push_front(p_15_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_arburst.bind(*p_15_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17086].first = 3;
        (*_glb_hdl_sc_channel_map)[17086].second.push_front(p_15_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arlock.bind(*p_15_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17091].first = 1;
        (*_glb_hdl_sc_channel_map)[17091].second.push_front(p_15_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arcache.bind(*p_15_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17087].first = 3;
        (*_glb_hdl_sc_channel_map)[17087].second.push_front(p_15_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arprot.bind(*p_15_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17092].first = 3;
        (*_glb_hdl_sc_channel_map)[17092].second.push_front(p_15_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arregion.bind(*p_15_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17095].first = 3;
        (*_glb_hdl_sc_channel_map)[17095].second.push_front(p_15_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arqos.bind(*p_15_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17093].first = 3;
        (*_glb_hdl_sc_channel_map)[17093].second.push_front(p_15_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arvalid.bind(*p_15_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17097].first = 1;
        (*_glb_hdl_sc_channel_map)[17097].second.push_front(p_15_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arready.bind(*p_15_s04_axi_arready);
        p_15_s04_axi_arready->set_sv_netview_offsetfromdp(9441968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_rid.bind(*p_15_s04_axi_rid);
        p_15_s04_axi_rid->set_sv_netview_offsetfromdp(9442024);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_rdata.bind(*p_15_s04_axi_rdata);
        p_15_s04_axi_rdata->set_sv_netview_offsetfromdp(9442080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_rresp.bind(*p_15_s04_axi_rresp);
        p_15_s04_axi_rresp->set_sv_netview_offsetfromdp(9442136);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rlast.bind(*p_15_s04_axi_rlast);
        p_15_s04_axi_rlast->set_sv_netview_offsetfromdp(9442192);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rvalid.bind(*p_15_s04_axi_rvalid);
        p_15_s04_axi_rvalid->set_sv_netview_offsetfromdp(9442248);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rready.bind(*p_15_s04_axi_rready);
        (*_glb_hdl_sc_channel_map)[17117].first = 1;
        (*_glb_hdl_sc_channel_map)[17117].second.push_front(p_15_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aclk.bind(*p_15_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17084].first = 1;
        (*_glb_hdl_sc_channel_map)[17084].second.push_front(p_15_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aresetn.bind(*p_15_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17088].first = 1;
        (*_glb_hdl_sc_channel_map)[17088].second.push_front(p_15_s04_axi_aresetn);
        sc_inst_16 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_16->xsim_set_dbg_index(14);
        sc_inst_17 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_17->xsim_set_dbg_index(1604);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_awaddr.bind(*p_17_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[23211].first = 3;
        (*_glb_hdl_sc_channel_map)[23211].second.push_front(p_17_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_awprot.bind(*p_17_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[23212].first = 3;
        (*_glb_hdl_sc_channel_map)[23212].second.push_front(p_17_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awvalid.bind(*p_17_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[23214].first = 1;
        (*_glb_hdl_sc_channel_map)[23214].second.push_front(p_17_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awready.bind(*p_17_saxi_lite_cq_awready);
        p_17_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(11597536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_wdata.bind(*p_17_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[23222].first = 3;
        (*_glb_hdl_sc_channel_map)[23222].second.push_front(p_17_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->saxi_lite_cq_wstrb.bind(*p_17_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[23224].first = 3;
        (*_glb_hdl_sc_channel_map)[23224].second.push_front(p_17_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wvalid.bind(*p_17_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[23225].first = 1;
        (*_glb_hdl_sc_channel_map)[23225].second.push_front(p_17_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wready.bind(*p_17_saxi_lite_cq_wready);
        p_17_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(11597760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_bresp.bind(*p_17_saxi_lite_cq_bresp);
        p_17_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(11597816);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bvalid.bind(*p_17_saxi_lite_cq_bvalid);
        p_17_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(11597872);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bready.bind(*p_17_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[23215].first = 1;
        (*_glb_hdl_sc_channel_map)[23215].second.push_front(p_17_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_araddr.bind(*p_17_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[23206].first = 3;
        (*_glb_hdl_sc_channel_map)[23206].second.push_front(p_17_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_arprot.bind(*p_17_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[23208].first = 3;
        (*_glb_hdl_sc_channel_map)[23208].second.push_front(p_17_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arvalid.bind(*p_17_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[23210].first = 1;
        (*_glb_hdl_sc_channel_map)[23210].second.push_front(p_17_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arready.bind(*p_17_saxi_lite_cq_arready);
        p_17_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(11598152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_rdata.bind(*p_17_saxi_lite_cq_rdata);
        p_17_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(11598208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_rresp.bind(*p_17_saxi_lite_cq_rresp);
        p_17_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(11598264);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rvalid.bind(*p_17_saxi_lite_cq_rvalid);
        p_17_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(11598320);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rready.bind(*p_17_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[23219].first = 1;
        (*_glb_hdl_sc_channel_map)[23219].second.push_front(p_17_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aclk.bind(*p_17_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[23205].first = 1;
        (*_glb_hdl_sc_channel_map)[23205].second.push_front(p_17_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aresetn.bind(*p_17_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[23207].first = 1;
        (*_glb_hdl_sc_channel_map)[23207].second.push_front(p_17_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_awaddr.bind(*p_17_maxi_lite_mb_awaddr);
        p_17_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(11598544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_awprot.bind(*p_17_maxi_lite_mb_awprot);
        p_17_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(11598600);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awvalid.bind(*p_17_maxi_lite_mb_awvalid);
        p_17_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(11598656);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awready.bind(*p_17_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[23192].first = 1;
        (*_glb_hdl_sc_channel_map)[23192].second.push_front(p_17_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_wdata.bind(*p_17_maxi_lite_mb_wdata);
        p_17_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(11598768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->maxi_lite_mb_wstrb.bind(*p_17_maxi_lite_mb_wstrb);
        p_17_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(11598824);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wvalid.bind(*p_17_maxi_lite_mb_wvalid);
        p_17_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(11598880);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wready.bind(*p_17_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[23202].first = 1;
        (*_glb_hdl_sc_channel_map)[23202].second.push_front(p_17_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_bresp.bind(*p_17_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[23195].first = 3;
        (*_glb_hdl_sc_channel_map)[23195].second.push_front(p_17_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bvalid.bind(*p_17_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[23196].first = 1;
        (*_glb_hdl_sc_channel_map)[23196].second.push_front(p_17_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bready.bind(*p_17_maxi_lite_mb_bready);
        p_17_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(11599104);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_araddr.bind(*p_17_maxi_lite_mb_araddr);
        p_17_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(11599160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_arprot.bind(*p_17_maxi_lite_mb_arprot);
        p_17_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(11599216);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arvalid.bind(*p_17_maxi_lite_mb_arvalid);
        p_17_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(11599272);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arready.bind(*p_17_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[23188].first = 1;
        (*_glb_hdl_sc_channel_map)[23188].second.push_front(p_17_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_rdata.bind(*p_17_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[23197].first = 3;
        (*_glb_hdl_sc_channel_map)[23197].second.push_front(p_17_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_rresp.bind(*p_17_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[23199].first = 3;
        (*_glb_hdl_sc_channel_map)[23199].second.push_front(p_17_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rvalid.bind(*p_17_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[23200].first = 1;
        (*_glb_hdl_sc_channel_map)[23200].second.push_front(p_17_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rready.bind(*p_17_maxi_lite_mb_rready);
        p_17_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(11599552);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aclk.bind(*p_17_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[23184].first = 1;
        (*_glb_hdl_sc_channel_map)[23184].second.push_front(p_17_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aresetn.bind(*p_17_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[23186].first = 1;
        (*_glb_hdl_sc_channel_map)[23186].second.push_front(p_17_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_17_irq = new xsim_sc_channel<0, bool >();
        sc_inst_17->irq.bind(*p_17_irq);
        (*_glb_hdl_sc_channel_map)[23183].first = 1;
        (*_glb_hdl_sc_channel_map)[23183].second.push_front(p_17_irq);
        sc_inst_18 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_18->xsim_set_dbg_index(283);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_awaddr.bind(*p_18_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17743].first = 3;
        (*_glb_hdl_sc_channel_map)[17743].second.push_front(p_18_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_awlen.bind(*p_18_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[23308].first = 3;
        (*_glb_hdl_sc_channel_map)[23308].second.push_front(p_18_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awsize.bind(*p_18_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[23311].first = 3;
        (*_glb_hdl_sc_channel_map)[23311].second.push_front(p_18_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_awburst.bind(*p_18_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[23307].first = 3;
        (*_glb_hdl_sc_channel_map)[23307].second.push_front(p_18_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awlock.bind(*p_18_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17741].first = 1;
        (*_glb_hdl_sc_channel_map)[17741].second.push_front(p_18_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awcache.bind(*p_18_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17742].first = 3;
        (*_glb_hdl_sc_channel_map)[17742].second.push_front(p_18_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awprot.bind(*p_18_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[23309].first = 3;
        (*_glb_hdl_sc_channel_map)[23309].second.push_front(p_18_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awregion.bind(*p_18_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17739].first = 3;
        (*_glb_hdl_sc_channel_map)[17739].second.push_front(p_18_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awqos.bind(*p_18_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17740].first = 3;
        (*_glb_hdl_sc_channel_map)[17740].second.push_front(p_18_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awvalid.bind(*p_18_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[23312].first = 1;
        (*_glb_hdl_sc_channel_map)[23312].second.push_front(p_18_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awready.bind(*p_18_s00_axi_awready);
        p_18_s00_axi_awready->set_sv_netview_offsetfromdp(11610104);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_wdata.bind(*p_18_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23321].first = 3;
        (*_glb_hdl_sc_channel_map)[23321].second.push_front(p_18_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_wstrb.bind(*p_18_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23324].first = 3;
        (*_glb_hdl_sc_channel_map)[23324].second.push_front(p_18_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wlast.bind(*p_18_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[23322].first = 1;
        (*_glb_hdl_sc_channel_map)[23322].second.push_front(p_18_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wvalid.bind(*p_18_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23325].first = 1;
        (*_glb_hdl_sc_channel_map)[23325].second.push_front(p_18_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wready.bind(*p_18_s00_axi_wready);
        p_18_s00_axi_wready->set_sv_netview_offsetfromdp(11610384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_bresp.bind(*p_18_s00_axi_bresp);
        p_18_s00_axi_bresp->set_sv_netview_offsetfromdp(11610440);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bvalid.bind(*p_18_s00_axi_bvalid);
        p_18_s00_axi_bvalid->set_sv_netview_offsetfromdp(11610496);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bready.bind(*p_18_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[23313].first = 1;
        (*_glb_hdl_sc_channel_map)[23313].second.push_front(p_18_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_araddr.bind(*p_18_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17748].first = 3;
        (*_glb_hdl_sc_channel_map)[17748].second.push_front(p_18_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_arlen.bind(*p_18_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[23302].first = 3;
        (*_glb_hdl_sc_channel_map)[23302].second.push_front(p_18_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arsize.bind(*p_18_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[23305].first = 3;
        (*_glb_hdl_sc_channel_map)[23305].second.push_front(p_18_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_arburst.bind(*p_18_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[23300].first = 3;
        (*_glb_hdl_sc_channel_map)[23300].second.push_front(p_18_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arlock.bind(*p_18_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17746].first = 1;
        (*_glb_hdl_sc_channel_map)[17746].second.push_front(p_18_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arcache.bind(*p_18_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17747].first = 3;
        (*_glb_hdl_sc_channel_map)[17747].second.push_front(p_18_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arprot.bind(*p_18_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[23303].first = 3;
        (*_glb_hdl_sc_channel_map)[23303].second.push_front(p_18_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arregion.bind(*p_18_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17744].first = 3;
        (*_glb_hdl_sc_channel_map)[17744].second.push_front(p_18_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arqos.bind(*p_18_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17745].first = 3;
        (*_glb_hdl_sc_channel_map)[17745].second.push_front(p_18_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arvalid.bind(*p_18_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[23306].first = 1;
        (*_glb_hdl_sc_channel_map)[23306].second.push_front(p_18_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arready.bind(*p_18_s00_axi_arready);
        p_18_s00_axi_arready->set_sv_netview_offsetfromdp(11611168);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_rdata.bind(*p_18_s00_axi_rdata);
        p_18_s00_axi_rdata->set_sv_netview_offsetfromdp(11611224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_rresp.bind(*p_18_s00_axi_rresp);
        p_18_s00_axi_rresp->set_sv_netview_offsetfromdp(11611280);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rlast.bind(*p_18_s00_axi_rlast);
        p_18_s00_axi_rlast->set_sv_netview_offsetfromdp(11611336);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rvalid.bind(*p_18_s00_axi_rvalid);
        p_18_s00_axi_rvalid->set_sv_netview_offsetfromdp(11611392);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rready.bind(*p_18_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[23318].first = 1;
        (*_glb_hdl_sc_channel_map)[23318].second.push_front(p_18_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aclk.bind(*p_18_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23299].first = 1;
        (*_glb_hdl_sc_channel_map)[23299].second.push_front(p_18_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aresetn.bind(*p_18_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23301].first = 1;
        (*_glb_hdl_sc_channel_map)[23301].second.push_front(p_18_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awid.bind(*p_18_m00_axi_awid);
        p_18_m00_axi_awid->set_sv_netview_offsetfromdp(11611616);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_awaddr.bind(*p_18_m00_axi_awaddr);
        p_18_m00_axi_awaddr->set_sv_netview_offsetfromdp(11611672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_awlen.bind(*p_18_m00_axi_awlen);
        p_18_m00_axi_awlen->set_sv_netview_offsetfromdp(11611728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awsize.bind(*p_18_m00_axi_awsize);
        p_18_m00_axi_awsize->set_sv_netview_offsetfromdp(11611784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_awburst.bind(*p_18_m00_axi_awburst);
        p_18_m00_axi_awburst->set_sv_netview_offsetfromdp(11611840);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awlock.bind(*p_18_m00_axi_awlock);
        p_18_m00_axi_awlock->set_sv_netview_offsetfromdp(11611896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awcache.bind(*p_18_m00_axi_awcache);
        p_18_m00_axi_awcache->set_sv_netview_offsetfromdp(11611952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awprot.bind(*p_18_m00_axi_awprot);
        p_18_m00_axi_awprot->set_sv_netview_offsetfromdp(11612008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awqos.bind(*p_18_m00_axi_awqos);
        p_18_m00_axi_awqos->set_sv_netview_offsetfromdp(11612064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awuser.bind(*p_18_m00_axi_awuser);
        p_18_m00_axi_awuser->set_sv_netview_offsetfromdp(11612120);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awvalid.bind(*p_18_m00_axi_awvalid);
        p_18_m00_axi_awvalid->set_sv_netview_offsetfromdp(11612176);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awready.bind(*p_18_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[23277].first = 1;
        (*_glb_hdl_sc_channel_map)[23277].second.push_front(p_18_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_wdata.bind(*p_18_m00_axi_wdata);
        p_18_m00_axi_wdata->set_sv_netview_offsetfromdp(11612288);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m00_axi_wstrb.bind(*p_18_m00_axi_wstrb);
        p_18_m00_axi_wstrb->set_sv_netview_offsetfromdp(11612344);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wlast.bind(*p_18_m00_axi_wlast);
        p_18_m00_axi_wlast->set_sv_netview_offsetfromdp(11612400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_wuser.bind(*p_18_m00_axi_wuser);
        p_18_m00_axi_wuser->set_sv_netview_offsetfromdp(11612456);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wvalid.bind(*p_18_m00_axi_wvalid);
        p_18_m00_axi_wvalid->set_sv_netview_offsetfromdp(11612512);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wready.bind(*p_18_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[23295].first = 1;
        (*_glb_hdl_sc_channel_map)[23295].second.push_front(p_18_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_bid.bind(*p_18_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[23281].first = 3;
        (*_glb_hdl_sc_channel_map)[23281].second.push_front(p_18_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_bresp.bind(*p_18_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[23283].first = 3;
        (*_glb_hdl_sc_channel_map)[23283].second.push_front(p_18_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_buser.bind(*p_18_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[23284].first = 3;
        (*_glb_hdl_sc_channel_map)[23284].second.push_front(p_18_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bvalid.bind(*p_18_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[23285].first = 1;
        (*_glb_hdl_sc_channel_map)[23285].second.push_front(p_18_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bready.bind(*p_18_m00_axi_bready);
        p_18_m00_axi_bready->set_sv_netview_offsetfromdp(11612848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_arid.bind(*p_18_m00_axi_arid);
        p_18_m00_axi_arid->set_sv_netview_offsetfromdp(11612904);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_araddr.bind(*p_18_m00_axi_araddr);
        p_18_m00_axi_araddr->set_sv_netview_offsetfromdp(11612960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_arlen.bind(*p_18_m00_axi_arlen);
        p_18_m00_axi_arlen->set_sv_netview_offsetfromdp(11613016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arsize.bind(*p_18_m00_axi_arsize);
        p_18_m00_axi_arsize->set_sv_netview_offsetfromdp(11613072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_arburst.bind(*p_18_m00_axi_arburst);
        p_18_m00_axi_arburst->set_sv_netview_offsetfromdp(11613128);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arlock.bind(*p_18_m00_axi_arlock);
        p_18_m00_axi_arlock->set_sv_netview_offsetfromdp(11613184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arcache.bind(*p_18_m00_axi_arcache);
        p_18_m00_axi_arcache->set_sv_netview_offsetfromdp(11613240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arprot.bind(*p_18_m00_axi_arprot);
        p_18_m00_axi_arprot->set_sv_netview_offsetfromdp(11613296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arqos.bind(*p_18_m00_axi_arqos);
        p_18_m00_axi_arqos->set_sv_netview_offsetfromdp(11613352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_aruser.bind(*p_18_m00_axi_aruser);
        p_18_m00_axi_aruser->set_sv_netview_offsetfromdp(11613408);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arvalid.bind(*p_18_m00_axi_arvalid);
        p_18_m00_axi_arvalid->set_sv_netview_offsetfromdp(11613464);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arready.bind(*p_18_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[23265].first = 1;
        (*_glb_hdl_sc_channel_map)[23265].second.push_front(p_18_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_rid.bind(*p_18_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[23287].first = 3;
        (*_glb_hdl_sc_channel_map)[23287].second.push_front(p_18_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_rdata.bind(*p_18_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[23286].first = 3;
        (*_glb_hdl_sc_channel_map)[23286].second.push_front(p_18_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_rresp.bind(*p_18_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[23290].first = 3;
        (*_glb_hdl_sc_channel_map)[23290].second.push_front(p_18_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rlast.bind(*p_18_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[23288].first = 1;
        (*_glb_hdl_sc_channel_map)[23288].second.push_front(p_18_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_ruser.bind(*p_18_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[23291].first = 3;
        (*_glb_hdl_sc_channel_map)[23291].second.push_front(p_18_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rvalid.bind(*p_18_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[23292].first = 1;
        (*_glb_hdl_sc_channel_map)[23292].second.push_front(p_18_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rready.bind(*p_18_m00_axi_rready);
        p_18_m00_axi_rready->set_sv_netview_offsetfromdp(11613912);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aclk.bind(*p_18_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23255].first = 1;
        (*_glb_hdl_sc_channel_map)[23255].second.push_front(p_18_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aresetn.bind(*p_18_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23259].first = 1;
        (*_glb_hdl_sc_channel_map)[23259].second.push_front(p_18_m00_axi_aresetn);
        sc_inst_19 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_19->xsim_set_dbg_index(285);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[17734].first = 3;
        (*_glb_hdl_sc_channel_map)[17734].second.push_front(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[23613].first = 1;
        (*_glb_hdl_sc_channel_map)[23613].second.push_front(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11660416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[23621].first = 3;
        (*_glb_hdl_sc_channel_map)[23621].second.push_front(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[23623].first = 3;
        (*_glb_hdl_sc_channel_map)[23623].second.push_front(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[23624].first = 1;
        (*_glb_hdl_sc_channel_map)[23624].second.push_front(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11660640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11660696);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11660752);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[23614].first = 1;
        (*_glb_hdl_sc_channel_map)[23614].second.push_front(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[17735].first = 3;
        (*_glb_hdl_sc_channel_map)[17735].second.push_front(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[23611].first = 1;
        (*_glb_hdl_sc_channel_map)[23611].second.push_front(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11660976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11661032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11661088);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11661144);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[23618].first = 1;
        (*_glb_hdl_sc_channel_map)[23618].second.push_front(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map)[23572].first = 1;
        (*_glb_hdl_sc_channel_map)[23572].second.push_front(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[23573].first = 1;
        (*_glb_hdl_sc_channel_map)[23573].second.push_front(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(11661368);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11661424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11661480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11661536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11661592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11661648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11661704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11661760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11661816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11661872);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11661928);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[23593].first = 1;
        (*_glb_hdl_sc_channel_map)[23593].second.push_front(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11662040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11662096);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11662152);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11662208);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[23607].first = 1;
        (*_glb_hdl_sc_channel_map)[23607].second.push_front(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[23598].first = 3;
        (*_glb_hdl_sc_channel_map)[23598].second.push_front(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[23599].first = 1;
        (*_glb_hdl_sc_channel_map)[23599].second.push_front(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11662432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11662488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11662544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11662600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11662656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11662712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11662768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11662824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11662880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11662936);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11662992);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[23582].first = 1;
        (*_glb_hdl_sc_channel_map)[23582].second.push_front(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[23600].first = 3;
        (*_glb_hdl_sc_channel_map)[23600].second.push_front(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[23603].first = 3;
        (*_glb_hdl_sc_channel_map)[23603].second.push_front(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[23601].first = 1;
        (*_glb_hdl_sc_channel_map)[23601].second.push_front(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[23604].first = 1;
        (*_glb_hdl_sc_channel_map)[23604].second.push_front(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11663328);
        sc_inst_20 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_20->xsim_set_dbg_index(286);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[17732].first = 3;
        (*_glb_hdl_sc_channel_map)[17732].second.push_front(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[23665].first = 1;
        (*_glb_hdl_sc_channel_map)[23665].second.push_front(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11663544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[23673].first = 3;
        (*_glb_hdl_sc_channel_map)[23673].second.push_front(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[23675].first = 3;
        (*_glb_hdl_sc_channel_map)[23675].second.push_front(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[23676].first = 1;
        (*_glb_hdl_sc_channel_map)[23676].second.push_front(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11663768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11663824);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11663880);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[23666].first = 1;
        (*_glb_hdl_sc_channel_map)[23666].second.push_front(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[17733].first = 3;
        (*_glb_hdl_sc_channel_map)[17733].second.push_front(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[23663].first = 1;
        (*_glb_hdl_sc_channel_map)[23663].second.push_front(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11664104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11664160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11664216);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11664272);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[23670].first = 1;
        (*_glb_hdl_sc_channel_map)[23670].second.push_front(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map)[23625].first = 1;
        (*_glb_hdl_sc_channel_map)[23625].second.push_front(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[23626].first = 1;
        (*_glb_hdl_sc_channel_map)[23626].second.push_front(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(11664496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11664552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11664608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11664664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11664720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11664776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11664832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11664888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11664944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11665000);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11665056);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[23645].first = 1;
        (*_glb_hdl_sc_channel_map)[23645].second.push_front(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11665168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11665224);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11665280);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11665336);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[23659].first = 1;
        (*_glb_hdl_sc_channel_map)[23659].second.push_front(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[23650].first = 3;
        (*_glb_hdl_sc_channel_map)[23650].second.push_front(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[23651].first = 1;
        (*_glb_hdl_sc_channel_map)[23651].second.push_front(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11665560);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11665616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11665672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11665728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11665784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11665840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11665896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11665952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11666008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11666064);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11666120);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[23634].first = 1;
        (*_glb_hdl_sc_channel_map)[23634].second.push_front(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[23652].first = 3;
        (*_glb_hdl_sc_channel_map)[23652].second.push_front(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[23655].first = 3;
        (*_glb_hdl_sc_channel_map)[23655].second.push_front(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[23653].first = 1;
        (*_glb_hdl_sc_channel_map)[23653].second.push_front(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[23656].first = 1;
        (*_glb_hdl_sc_channel_map)[23656].second.push_front(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11666456);
        sc_inst_21 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_21->xsim_set_dbg_index(287);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[17730].first = 3;
        (*_glb_hdl_sc_channel_map)[17730].second.push_front(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[23718].first = 1;
        (*_glb_hdl_sc_channel_map)[23718].second.push_front(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11666672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[23726].first = 3;
        (*_glb_hdl_sc_channel_map)[23726].second.push_front(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[23728].first = 3;
        (*_glb_hdl_sc_channel_map)[23728].second.push_front(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[23729].first = 1;
        (*_glb_hdl_sc_channel_map)[23729].second.push_front(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11666896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11666952);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11667008);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[23719].first = 1;
        (*_glb_hdl_sc_channel_map)[23719].second.push_front(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[17731].first = 3;
        (*_glb_hdl_sc_channel_map)[17731].second.push_front(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[23716].first = 1;
        (*_glb_hdl_sc_channel_map)[23716].second.push_front(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11667232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11667288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11667344);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11667400);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[23723].first = 1;
        (*_glb_hdl_sc_channel_map)[23723].second.push_front(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map)[23678].first = 1;
        (*_glb_hdl_sc_channel_map)[23678].second.push_front(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[23679].first = 1;
        (*_glb_hdl_sc_channel_map)[23679].second.push_front(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(11667624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11667680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11667736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11667792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11667848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11667904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11667960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11668016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11668072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11668128);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11668184);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[23698].first = 1;
        (*_glb_hdl_sc_channel_map)[23698].second.push_front(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11668296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11668352);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11668408);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11668464);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[23712].first = 1;
        (*_glb_hdl_sc_channel_map)[23712].second.push_front(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[23703].first = 3;
        (*_glb_hdl_sc_channel_map)[23703].second.push_front(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[23704].first = 1;
        (*_glb_hdl_sc_channel_map)[23704].second.push_front(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11668688);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11668744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11668800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11668856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11668912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11668968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11669024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11669080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11669136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11669192);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11669248);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[23687].first = 1;
        (*_glb_hdl_sc_channel_map)[23687].second.push_front(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[23705].first = 3;
        (*_glb_hdl_sc_channel_map)[23705].second.push_front(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[23708].first = 3;
        (*_glb_hdl_sc_channel_map)[23708].second.push_front(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[23706].first = 1;
        (*_glb_hdl_sc_channel_map)[23706].second.push_front(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[23709].first = 1;
        (*_glb_hdl_sc_channel_map)[23709].second.push_front(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11669584);
        sc_inst_22 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_22->xsim_set_dbg_index(288);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_AWADDR.bind(*p_22_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[17728].first = 3;
        (*_glb_hdl_sc_channel_map)[17728].second.push_front(p_22_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWVALID.bind(*p_22_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[23771].first = 1;
        (*_glb_hdl_sc_channel_map)[23771].second.push_front(p_22_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWREADY.bind(*p_22_s_axi_control_AWREADY);
        p_22_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11669800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_WDATA.bind(*p_22_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[23779].first = 3;
        (*_glb_hdl_sc_channel_map)[23779].second.push_front(p_22_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_control_WSTRB.bind(*p_22_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[23781].first = 3;
        (*_glb_hdl_sc_channel_map)[23781].second.push_front(p_22_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WVALID.bind(*p_22_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[23782].first = 1;
        (*_glb_hdl_sc_channel_map)[23782].second.push_front(p_22_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WREADY.bind(*p_22_s_axi_control_WREADY);
        p_22_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11670024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_BRESP.bind(*p_22_s_axi_control_BRESP);
        p_22_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11670080);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BVALID.bind(*p_22_s_axi_control_BVALID);
        p_22_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11670136);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BREADY.bind(*p_22_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[23772].first = 1;
        (*_glb_hdl_sc_channel_map)[23772].second.push_front(p_22_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_ARADDR.bind(*p_22_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[17729].first = 3;
        (*_glb_hdl_sc_channel_map)[17729].second.push_front(p_22_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARVALID.bind(*p_22_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[23769].first = 1;
        (*_glb_hdl_sc_channel_map)[23769].second.push_front(p_22_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARREADY.bind(*p_22_s_axi_control_ARREADY);
        p_22_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11670360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_RDATA.bind(*p_22_s_axi_control_RDATA);
        p_22_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11670416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_RRESP.bind(*p_22_s_axi_control_RRESP);
        p_22_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11670472);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RVALID.bind(*p_22_s_axi_control_RVALID);
        p_22_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11670528);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RREADY.bind(*p_22_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[23776].first = 1;
        (*_glb_hdl_sc_channel_map)[23776].second.push_front(p_22_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_22_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_clk.bind(*p_22_ap_clk);
        (*_glb_hdl_sc_channel_map)[23731].first = 1;
        (*_glb_hdl_sc_channel_map)[23731].second.push_front(p_22_ap_clk);
        xsim_sc_channel<0, bool > *p_22_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_rst_n.bind(*p_22_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[23732].first = 1;
        (*_glb_hdl_sc_channel_map)[23732].second.push_front(p_22_ap_rst_n);
        xsim_sc_channel<0, bool > *p_22_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_22->interrupt.bind(*p_22_interrupt);
        p_22_interrupt->set_sv_netview_offsetfromdp(11670752);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_AWADDR.bind(*p_22_m_axi_gmem_AWADDR);
        p_22_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11670808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_AWLEN.bind(*p_22_m_axi_gmem_AWLEN);
        p_22_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11670864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWSIZE.bind(*p_22_m_axi_gmem_AWSIZE);
        p_22_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11670920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_AWBURST.bind(*p_22_m_axi_gmem_AWBURST);
        p_22_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11670976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_AWLOCK.bind(*p_22_m_axi_gmem_AWLOCK);
        p_22_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11671032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWREGION.bind(*p_22_m_axi_gmem_AWREGION);
        p_22_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11671088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWCACHE.bind(*p_22_m_axi_gmem_AWCACHE);
        p_22_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11671144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWPROT.bind(*p_22_m_axi_gmem_AWPROT);
        p_22_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11671200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWQOS.bind(*p_22_m_axi_gmem_AWQOS);
        p_22_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11671256);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWVALID.bind(*p_22_m_axi_gmem_AWVALID);
        p_22_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11671312);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWREADY.bind(*p_22_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[23751].first = 1;
        (*_glb_hdl_sc_channel_map)[23751].second.push_front(p_22_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_WDATA.bind(*p_22_m_axi_gmem_WDATA);
        p_22_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11671424);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_WSTRB.bind(*p_22_m_axi_gmem_WSTRB);
        p_22_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11671480);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WLAST.bind(*p_22_m_axi_gmem_WLAST);
        p_22_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11671536);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WVALID.bind(*p_22_m_axi_gmem_WVALID);
        p_22_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11671592);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WREADY.bind(*p_22_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[23765].first = 1;
        (*_glb_hdl_sc_channel_map)[23765].second.push_front(p_22_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_BRESP.bind(*p_22_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[23756].first = 3;
        (*_glb_hdl_sc_channel_map)[23756].second.push_front(p_22_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BVALID.bind(*p_22_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[23757].first = 1;
        (*_glb_hdl_sc_channel_map)[23757].second.push_front(p_22_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BREADY.bind(*p_22_m_axi_gmem_BREADY);
        p_22_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11671816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_ARADDR.bind(*p_22_m_axi_gmem_ARADDR);
        p_22_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11671872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_ARLEN.bind(*p_22_m_axi_gmem_ARLEN);
        p_22_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11671928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARSIZE.bind(*p_22_m_axi_gmem_ARSIZE);
        p_22_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11671984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_ARBURST.bind(*p_22_m_axi_gmem_ARBURST);
        p_22_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11672040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_ARLOCK.bind(*p_22_m_axi_gmem_ARLOCK);
        p_22_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11672096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARREGION.bind(*p_22_m_axi_gmem_ARREGION);
        p_22_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11672152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARCACHE.bind(*p_22_m_axi_gmem_ARCACHE);
        p_22_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11672208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARPROT.bind(*p_22_m_axi_gmem_ARPROT);
        p_22_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11672264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARQOS.bind(*p_22_m_axi_gmem_ARQOS);
        p_22_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11672320);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARVALID.bind(*p_22_m_axi_gmem_ARVALID);
        p_22_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11672376);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARREADY.bind(*p_22_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[23740].first = 1;
        (*_glb_hdl_sc_channel_map)[23740].second.push_front(p_22_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_RDATA.bind(*p_22_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[23758].first = 3;
        (*_glb_hdl_sc_channel_map)[23758].second.push_front(p_22_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_RRESP.bind(*p_22_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[23761].first = 3;
        (*_glb_hdl_sc_channel_map)[23761].second.push_front(p_22_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RLAST.bind(*p_22_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[23759].first = 1;
        (*_glb_hdl_sc_channel_map)[23759].second.push_front(p_22_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RVALID.bind(*p_22_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[23762].first = 1;
        (*_glb_hdl_sc_channel_map)[23762].second.push_front(p_22_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RREADY.bind(*p_22_m_axi_gmem_RREADY);
        p_22_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11672712);
        sc_inst_23 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_23->xsim_set_dbg_index(289);
        xsim_sc_channel<0, bool > *p_23_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ui_clk.bind(*p_23_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[23828].first = 1;
        (*_glb_hdl_sc_channel_map)[23828].second.push_front(p_23_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awid.bind(*p_23_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[23801].first = 3;
        (*_glb_hdl_sc_channel_map)[23801].second.push_front(p_23_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_awaddr.bind(*p_23_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[23798].first = 3;
        (*_glb_hdl_sc_channel_map)[23798].second.push_front(p_23_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_awlen.bind(*p_23_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[23802].first = 3;
        (*_glb_hdl_sc_channel_map)[23802].second.push_front(p_23_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awsize.bind(*p_23_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[23807].first = 3;
        (*_glb_hdl_sc_channel_map)[23807].second.push_front(p_23_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_awburst.bind(*p_23_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[23799].first = 3;
        (*_glb_hdl_sc_channel_map)[23799].second.push_front(p_23_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awlock.bind(*p_23_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[23803].first = 1;
        (*_glb_hdl_sc_channel_map)[23803].second.push_front(p_23_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awcache.bind(*p_23_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[23800].first = 3;
        (*_glb_hdl_sc_channel_map)[23800].second.push_front(p_23_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awprot.bind(*p_23_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[23804].first = 3;
        (*_glb_hdl_sc_channel_map)[23804].second.push_front(p_23_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awregion.bind(*p_23_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[17726].first = 3;
        (*_glb_hdl_sc_channel_map)[17726].second.push_front(p_23_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awqos.bind(*p_23_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[23805].first = 3;
        (*_glb_hdl_sc_channel_map)[23805].second.push_front(p_23_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awuser.bind(*p_23_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[23808].first = 3;
        (*_glb_hdl_sc_channel_map)[23808].second.push_front(p_23_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awvalid.bind(*p_23_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[23809].first = 1;
        (*_glb_hdl_sc_channel_map)[23809].second.push_front(p_23_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awready.bind(*p_23_c0_ddr_saxi_awready);
        p_23_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(11673544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_wdata.bind(*p_23_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[23822].first = 3;
        (*_glb_hdl_sc_channel_map)[23822].second.push_front(p_23_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->c0_ddr_saxi_wstrb.bind(*p_23_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[23825].first = 3;
        (*_glb_hdl_sc_channel_map)[23825].second.push_front(p_23_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wlast.bind(*p_23_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[23823].first = 1;
        (*_glb_hdl_sc_channel_map)[23823].second.push_front(p_23_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_wuser.bind(*p_23_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[23826].first = 3;
        (*_glb_hdl_sc_channel_map)[23826].second.push_front(p_23_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wvalid.bind(*p_23_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[23827].first = 1;
        (*_glb_hdl_sc_channel_map)[23827].second.push_front(p_23_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wready.bind(*p_23_c0_ddr_saxi_wready);
        p_23_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(11673880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_bid.bind(*p_23_c0_ddr_saxi_bid);
        p_23_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(11673936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_bresp.bind(*p_23_c0_ddr_saxi_bresp);
        p_23_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(11673992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_buser.bind(*p_23_c0_ddr_saxi_buser);
        p_23_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(11674048);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bvalid.bind(*p_23_c0_ddr_saxi_bvalid);
        p_23_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(11674104);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bready.bind(*p_23_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[23811].first = 1;
        (*_glb_hdl_sc_channel_map)[23811].second.push_front(p_23_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_arid.bind(*p_23_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[23789].first = 3;
        (*_glb_hdl_sc_channel_map)[23789].second.push_front(p_23_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_araddr.bind(*p_23_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[23785].first = 3;
        (*_glb_hdl_sc_channel_map)[23785].second.push_front(p_23_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_arlen.bind(*p_23_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[23790].first = 3;
        (*_glb_hdl_sc_channel_map)[23790].second.push_front(p_23_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arsize.bind(*p_23_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[23795].first = 3;
        (*_glb_hdl_sc_channel_map)[23795].second.push_front(p_23_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_arburst.bind(*p_23_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[23786].first = 3;
        (*_glb_hdl_sc_channel_map)[23786].second.push_front(p_23_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arlock.bind(*p_23_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[23791].first = 1;
        (*_glb_hdl_sc_channel_map)[23791].second.push_front(p_23_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arcache.bind(*p_23_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[23787].first = 3;
        (*_glb_hdl_sc_channel_map)[23787].second.push_front(p_23_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arprot.bind(*p_23_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[23792].first = 3;
        (*_glb_hdl_sc_channel_map)[23792].second.push_front(p_23_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arregion.bind(*p_23_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[17727].first = 3;
        (*_glb_hdl_sc_channel_map)[17727].second.push_front(p_23_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arqos.bind(*p_23_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[23793].first = 3;
        (*_glb_hdl_sc_channel_map)[23793].second.push_front(p_23_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_aruser.bind(*p_23_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[23796].first = 3;
        (*_glb_hdl_sc_channel_map)[23796].second.push_front(p_23_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arvalid.bind(*p_23_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[23797].first = 1;
        (*_glb_hdl_sc_channel_map)[23797].second.push_front(p_23_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arready.bind(*p_23_c0_ddr_saxi_arready);
        p_23_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(11674888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_rid.bind(*p_23_c0_ddr_saxi_rid);
        p_23_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(11674944);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_rdata.bind(*p_23_c0_ddr_saxi_rdata);
        p_23_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(11675000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_rresp.bind(*p_23_c0_ddr_saxi_rresp);
        p_23_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(11675056);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rlast.bind(*p_23_c0_ddr_saxi_rlast);
        p_23_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(11675112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_ruser.bind(*p_23_c0_ddr_saxi_ruser);
        p_23_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(11675168);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rvalid.bind(*p_23_c0_ddr_saxi_rvalid);
        p_23_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(11675224);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rready.bind(*p_23_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[23818].first = 1;
        (*_glb_hdl_sc_channel_map)[23818].second.push_front(p_23_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aclk.bind(*p_23_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[23784].first = 1;
        (*_glb_hdl_sc_channel_map)[23784].second.push_front(p_23_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aresetn.bind(*p_23_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[23788].first = 1;
        (*_glb_hdl_sc_channel_map)[23788].second.push_front(p_23_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_awid.bind(*p_23_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[17710].first = 3;
        (*_glb_hdl_sc_channel_map)[17710].second.push_front(p_23_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awaddr.bind(*p_23_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17713].first = 3;
        (*_glb_hdl_sc_channel_map)[17713].second.push_front(p_23_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_awlen.bind(*p_23_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17709].first = 3;
        (*_glb_hdl_sc_channel_map)[17709].second.push_front(p_23_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awsize.bind(*p_23_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17704].first = 3;
        (*_glb_hdl_sc_channel_map)[17704].second.push_front(p_23_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_awburst.bind(*p_23_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17712].first = 3;
        (*_glb_hdl_sc_channel_map)[17712].second.push_front(p_23_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awlock.bind(*p_23_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17708].first = 1;
        (*_glb_hdl_sc_channel_map)[17708].second.push_front(p_23_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awcache.bind(*p_23_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17711].first = 3;
        (*_glb_hdl_sc_channel_map)[17711].second.push_front(p_23_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awprot.bind(*p_23_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17707].first = 3;
        (*_glb_hdl_sc_channel_map)[17707].second.push_front(p_23_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awregion.bind(*p_23_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17705].first = 3;
        (*_glb_hdl_sc_channel_map)[17705].second.push_front(p_23_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awqos.bind(*p_23_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17706].first = 3;
        (*_glb_hdl_sc_channel_map)[17706].second.push_front(p_23_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awuser.bind(*p_23_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[17703].first = 3;
        (*_glb_hdl_sc_channel_map)[17703].second.push_front(p_23_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awvalid.bind(*p_23_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17702].first = 1;
        (*_glb_hdl_sc_channel_map)[17702].second.push_front(p_23_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awready.bind(*p_23_s_xdma_axi_awready);
        p_23_s_xdma_axi_awready->set_sv_netview_offsetfromdp(11676120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_wdata.bind(*p_23_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17699].first = 3;
        (*_glb_hdl_sc_channel_map)[17699].second.push_front(p_23_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_wstrb.bind(*p_23_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17697].first = 3;
        (*_glb_hdl_sc_channel_map)[17697].second.push_front(p_23_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wlast.bind(*p_23_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17698].first = 1;
        (*_glb_hdl_sc_channel_map)[17698].second.push_front(p_23_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_wuser.bind(*p_23_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[17696].first = 3;
        (*_glb_hdl_sc_channel_map)[17696].second.push_front(p_23_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wvalid.bind(*p_23_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17695].first = 1;
        (*_glb_hdl_sc_channel_map)[17695].second.push_front(p_23_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wready.bind(*p_23_s_xdma_axi_wready);
        p_23_s_xdma_axi_wready->set_sv_netview_offsetfromdp(11676456);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_bid.bind(*p_23_s_xdma_axi_bid);
        p_23_s_xdma_axi_bid->set_sv_netview_offsetfromdp(11676512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_bresp.bind(*p_23_s_xdma_axi_bresp);
        p_23_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(11676568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_buser.bind(*p_23_s_xdma_axi_buser);
        p_23_s_xdma_axi_buser->set_sv_netview_offsetfromdp(11676624);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bvalid.bind(*p_23_s_xdma_axi_bvalid);
        p_23_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(11676680);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bready.bind(*p_23_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[17701].first = 1;
        (*_glb_hdl_sc_channel_map)[17701].second.push_front(p_23_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_arid.bind(*p_23_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[17722].first = 3;
        (*_glb_hdl_sc_channel_map)[17722].second.push_front(p_23_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_araddr.bind(*p_23_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17725].first = 3;
        (*_glb_hdl_sc_channel_map)[17725].second.push_front(p_23_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_arlen.bind(*p_23_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17721].first = 3;
        (*_glb_hdl_sc_channel_map)[17721].second.push_front(p_23_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arsize.bind(*p_23_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17716].first = 3;
        (*_glb_hdl_sc_channel_map)[17716].second.push_front(p_23_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_arburst.bind(*p_23_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17724].first = 3;
        (*_glb_hdl_sc_channel_map)[17724].second.push_front(p_23_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arlock.bind(*p_23_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17720].first = 1;
        (*_glb_hdl_sc_channel_map)[17720].second.push_front(p_23_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arcache.bind(*p_23_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17723].first = 3;
        (*_glb_hdl_sc_channel_map)[17723].second.push_front(p_23_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arprot.bind(*p_23_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17719].first = 3;
        (*_glb_hdl_sc_channel_map)[17719].second.push_front(p_23_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arregion.bind(*p_23_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17717].first = 3;
        (*_glb_hdl_sc_channel_map)[17717].second.push_front(p_23_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arqos.bind(*p_23_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17718].first = 3;
        (*_glb_hdl_sc_channel_map)[17718].second.push_front(p_23_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_aruser.bind(*p_23_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[17715].first = 3;
        (*_glb_hdl_sc_channel_map)[17715].second.push_front(p_23_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arvalid.bind(*p_23_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17714].first = 1;
        (*_glb_hdl_sc_channel_map)[17714].second.push_front(p_23_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arready.bind(*p_23_s_xdma_axi_arready);
        p_23_s_xdma_axi_arready->set_sv_netview_offsetfromdp(11677464);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_rid.bind(*p_23_s_xdma_axi_rid);
        p_23_s_xdma_axi_rid->set_sv_netview_offsetfromdp(11677520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_rdata.bind(*p_23_s_xdma_axi_rdata);
        p_23_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(11677576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_rresp.bind(*p_23_s_xdma_axi_rresp);
        p_23_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(11677632);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rlast.bind(*p_23_s_xdma_axi_rlast);
        p_23_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(11677688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_ruser.bind(*p_23_s_xdma_axi_ruser);
        p_23_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(11677744);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rvalid.bind(*p_23_s_xdma_axi_rvalid);
        p_23_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(11677800);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rready.bind(*p_23_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[17700].first = 1;
        (*_glb_hdl_sc_channel_map)[17700].second.push_front(p_23_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aclk.bind(*p_23_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23829].first = 1;
        (*_glb_hdl_sc_channel_map)[23829].second.push_front(p_23_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aresetn.bind(*p_23_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23830].first = 1;
        (*_glb_hdl_sc_channel_map)[23830].second.push_front(p_23_s_xdma_axi_aresetn);
        sc_inst_24 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_24->xsim_set_dbg_index(290);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_awid.bind(*p_24_m_aximm_awid);
        p_24_m_aximm_awid->set_sv_netview_offsetfromdp(11678072);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_awaddr.bind(*p_24_m_aximm_awaddr);
        p_24_m_aximm_awaddr->set_sv_netview_offsetfromdp(11678128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_awlen.bind(*p_24_m_aximm_awlen);
        p_24_m_aximm_awlen->set_sv_netview_offsetfromdp(11678184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awsize.bind(*p_24_m_aximm_awsize);
        p_24_m_aximm_awsize->set_sv_netview_offsetfromdp(11678240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_awburst.bind(*p_24_m_aximm_awburst);
        p_24_m_aximm_awburst->set_sv_netview_offsetfromdp(11678296);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awlock.bind(*p_24_m_aximm_awlock);
        p_24_m_aximm_awlock->set_sv_netview_offsetfromdp(11678352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awcache.bind(*p_24_m_aximm_awcache);
        p_24_m_aximm_awcache->set_sv_netview_offsetfromdp(11678408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awprot.bind(*p_24_m_aximm_awprot);
        p_24_m_aximm_awprot->set_sv_netview_offsetfromdp(11678464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awqos.bind(*p_24_m_aximm_awqos);
        p_24_m_aximm_awqos->set_sv_netview_offsetfromdp(11678520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_awuser.bind(*p_24_m_aximm_awuser);
        p_24_m_aximm_awuser->set_sv_netview_offsetfromdp(11678576);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awvalid.bind(*p_24_m_aximm_awvalid);
        p_24_m_aximm_awvalid->set_sv_netview_offsetfromdp(11678632);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awready.bind(*p_24_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[23886].first = 1;
        (*_glb_hdl_sc_channel_map)[23886].second.push_front(p_24_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_wdata.bind(*p_24_m_aximm_wdata);
        p_24_m_aximm_wdata->set_sv_netview_offsetfromdp(11678744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_wstrb.bind(*p_24_m_aximm_wstrb);
        p_24_m_aximm_wstrb->set_sv_netview_offsetfromdp(11678800);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wlast.bind(*p_24_m_aximm_wlast);
        p_24_m_aximm_wlast->set_sv_netview_offsetfromdp(11678856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_wuser.bind(*p_24_m_aximm_wuser);
        p_24_m_aximm_wuser->set_sv_netview_offsetfromdp(11678912);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wvalid.bind(*p_24_m_aximm_wvalid);
        p_24_m_aximm_wvalid->set_sv_netview_offsetfromdp(11678968);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wready.bind(*p_24_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[23901].first = 1;
        (*_glb_hdl_sc_channel_map)[23901].second.push_front(p_24_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_bid.bind(*p_24_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[23889].first = 3;
        (*_glb_hdl_sc_channel_map)[23889].second.push_front(p_24_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_bresp.bind(*p_24_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[23891].first = 3;
        (*_glb_hdl_sc_channel_map)[23891].second.push_front(p_24_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_buser.bind(*p_24_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[17694].first = 3;
        (*_glb_hdl_sc_channel_map)[17694].second.push_front(p_24_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bvalid.bind(*p_24_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[23892].first = 1;
        (*_glb_hdl_sc_channel_map)[23892].second.push_front(p_24_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bready.bind(*p_24_m_aximm_bready);
        p_24_m_aximm_bready->set_sv_netview_offsetfromdp(11679304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_arid.bind(*p_24_m_aximm_arid);
        p_24_m_aximm_arid->set_sv_netview_offsetfromdp(11679360);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_araddr.bind(*p_24_m_aximm_araddr);
        p_24_m_aximm_araddr->set_sv_netview_offsetfromdp(11679416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_arlen.bind(*p_24_m_aximm_arlen);
        p_24_m_aximm_arlen->set_sv_netview_offsetfromdp(11679472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arsize.bind(*p_24_m_aximm_arsize);
        p_24_m_aximm_arsize->set_sv_netview_offsetfromdp(11679528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_arburst.bind(*p_24_m_aximm_arburst);
        p_24_m_aximm_arburst->set_sv_netview_offsetfromdp(11679584);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arlock.bind(*p_24_m_aximm_arlock);
        p_24_m_aximm_arlock->set_sv_netview_offsetfromdp(11679640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arcache.bind(*p_24_m_aximm_arcache);
        p_24_m_aximm_arcache->set_sv_netview_offsetfromdp(11679696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arprot.bind(*p_24_m_aximm_arprot);
        p_24_m_aximm_arprot->set_sv_netview_offsetfromdp(11679752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arqos.bind(*p_24_m_aximm_arqos);
        p_24_m_aximm_arqos->set_sv_netview_offsetfromdp(11679808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_aruser.bind(*p_24_m_aximm_aruser);
        p_24_m_aximm_aruser->set_sv_netview_offsetfromdp(11679864);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arvalid.bind(*p_24_m_aximm_arvalid);
        p_24_m_aximm_arvalid->set_sv_netview_offsetfromdp(11679920);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arready.bind(*p_24_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[23875].first = 1;
        (*_glb_hdl_sc_channel_map)[23875].second.push_front(p_24_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_rid.bind(*p_24_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[23894].first = 3;
        (*_glb_hdl_sc_channel_map)[23894].second.push_front(p_24_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_rdata.bind(*p_24_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[23893].first = 3;
        (*_glb_hdl_sc_channel_map)[23893].second.push_front(p_24_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_rresp.bind(*p_24_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[23897].first = 3;
        (*_glb_hdl_sc_channel_map)[23897].second.push_front(p_24_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rlast.bind(*p_24_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[23895].first = 1;
        (*_glb_hdl_sc_channel_map)[23895].second.push_front(p_24_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_ruser.bind(*p_24_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[17693].first = 3;
        (*_glb_hdl_sc_channel_map)[17693].second.push_front(p_24_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rvalid.bind(*p_24_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[23898].first = 1;
        (*_glb_hdl_sc_channel_map)[23898].second.push_front(p_24_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rready.bind(*p_24_m_aximm_rready);
        p_24_m_aximm_rready->set_sv_netview_offsetfromdp(11680368);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aclk.bind(*p_24_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[23865].first = 1;
        (*_glb_hdl_sc_channel_map)[23865].second.push_front(p_24_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aresetn.bind(*p_24_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[23869].first = 1;
        (*_glb_hdl_sc_channel_map)[23869].second.push_front(p_24_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_awaddr.bind(*p_24_m_axictrl_awaddr);
        p_24_m_axictrl_awaddr->set_sv_netview_offsetfromdp(11680536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_awprot.bind(*p_24_m_axictrl_awprot);
        p_24_m_axictrl_awprot->set_sv_netview_offsetfromdp(11680592);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awvalid.bind(*p_24_m_axictrl_awvalid);
        p_24_m_axictrl_awvalid->set_sv_netview_offsetfromdp(11680648);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awready.bind(*p_24_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[23852].first = 1;
        (*_glb_hdl_sc_channel_map)[23852].second.push_front(p_24_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_wdata.bind(*p_24_m_axictrl_wdata);
        p_24_m_axictrl_wdata->set_sv_netview_offsetfromdp(11680760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axictrl_wstrb.bind(*p_24_m_axictrl_wstrb);
        p_24_m_axictrl_wstrb->set_sv_netview_offsetfromdp(11680816);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wvalid.bind(*p_24_m_axictrl_wvalid);
        p_24_m_axictrl_wvalid->set_sv_netview_offsetfromdp(11680872);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wready.bind(*p_24_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[23862].first = 1;
        (*_glb_hdl_sc_channel_map)[23862].second.push_front(p_24_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_bresp.bind(*p_24_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[23855].first = 3;
        (*_glb_hdl_sc_channel_map)[23855].second.push_front(p_24_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bvalid.bind(*p_24_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[23856].first = 1;
        (*_glb_hdl_sc_channel_map)[23856].second.push_front(p_24_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bready.bind(*p_24_m_axictrl_bready);
        p_24_m_axictrl_bready->set_sv_netview_offsetfromdp(11681096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_araddr.bind(*p_24_m_axictrl_araddr);
        p_24_m_axictrl_araddr->set_sv_netview_offsetfromdp(11681152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_arprot.bind(*p_24_m_axictrl_arprot);
        p_24_m_axictrl_arprot->set_sv_netview_offsetfromdp(11681208);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arvalid.bind(*p_24_m_axictrl_arvalid);
        p_24_m_axictrl_arvalid->set_sv_netview_offsetfromdp(11681264);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arready.bind(*p_24_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[23848].first = 1;
        (*_glb_hdl_sc_channel_map)[23848].second.push_front(p_24_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_rdata.bind(*p_24_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[23857].first = 3;
        (*_glb_hdl_sc_channel_map)[23857].second.push_front(p_24_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_rresp.bind(*p_24_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[23859].first = 3;
        (*_glb_hdl_sc_channel_map)[23859].second.push_front(p_24_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rvalid.bind(*p_24_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[23860].first = 1;
        (*_glb_hdl_sc_channel_map)[23860].second.push_front(p_24_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rready.bind(*p_24_m_axictrl_rready);
        p_24_m_axictrl_rready->set_sv_netview_offsetfromdp(11681544);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aclk.bind(*p_24_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[23844].first = 1;
        (*_glb_hdl_sc_channel_map)[23844].second.push_front(p_24_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aresetn.bind(*p_24_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[23846].first = 1;
        (*_glb_hdl_sc_channel_map)[23846].second.push_front(p_24_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
    }
