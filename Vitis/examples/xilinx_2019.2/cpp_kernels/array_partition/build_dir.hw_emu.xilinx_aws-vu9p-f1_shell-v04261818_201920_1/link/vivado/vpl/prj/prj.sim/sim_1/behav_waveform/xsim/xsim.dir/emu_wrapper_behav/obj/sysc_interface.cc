#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 5 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 34 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 35 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(531);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[5541].first = 1;
        (*_glb_hdl_sc_channel_map)[5541].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[5524].first = 1;
        (*_glb_hdl_sc_channel_map)[5524].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[5554].first = 1;
        (*_glb_hdl_sc_channel_map)[5554].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[5553].first = 1;
        (*_glb_hdl_sc_channel_map)[5553].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[5487].first = 1;
        (*_glb_hdl_sc_channel_map)[5487].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[5486].first = 1;
        (*_glb_hdl_sc_channel_map)[5486].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(6536776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[5555].first = 3;
        (*_glb_hdl_sc_channel_map)[5555].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[5573].first = 1;
        (*_glb_hdl_sc_channel_map)[5573].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[5567].first = 3;
        (*_glb_hdl_sc_channel_map)[5567].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[5561].first = 3;
        (*_glb_hdl_sc_channel_map)[5561].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[5585].first = 1;
        (*_glb_hdl_sc_channel_map)[5585].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(6537112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(6537168);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[5574].first = 1;
        (*_glb_hdl_sc_channel_map)[5574].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[5568].first = 3;
        (*_glb_hdl_sc_channel_map)[5568].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[5562].first = 3;
        (*_glb_hdl_sc_channel_map)[5562].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[5586].first = 1;
        (*_glb_hdl_sc_channel_map)[5586].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[5557].first = 3;
        (*_glb_hdl_sc_channel_map)[5557].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(6537504);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[5575].first = 1;
        (*_glb_hdl_sc_channel_map)[5575].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[5569].first = 3;
        (*_glb_hdl_sc_channel_map)[5569].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[5563].first = 3;
        (*_glb_hdl_sc_channel_map)[5563].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[5587].first = 1;
        (*_glb_hdl_sc_channel_map)[5587].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map)[5558].first = 3;
        (*_glb_hdl_sc_channel_map)[5558].second.push_front(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(6537840);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map)[5576].first = 1;
        (*_glb_hdl_sc_channel_map)[5576].second.push_front(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map)[5570].first = 3;
        (*_glb_hdl_sc_channel_map)[5570].second.push_front(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map)[5564].first = 3;
        (*_glb_hdl_sc_channel_map)[5564].second.push_front(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map)[5588].first = 1;
        (*_glb_hdl_sc_channel_map)[5588].second.push_front(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map)[5559].first = 3;
        (*_glb_hdl_sc_channel_map)[5559].second.push_front(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(6538176);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map)[5577].first = 1;
        (*_glb_hdl_sc_channel_map)[5577].second.push_front(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map)[5571].first = 3;
        (*_glb_hdl_sc_channel_map)[5571].second.push_front(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map)[5565].first = 3;
        (*_glb_hdl_sc_channel_map)[5565].second.push_front(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map)[5589].first = 1;
        (*_glb_hdl_sc_channel_map)[5589].second.push_front(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map)[5560].first = 3;
        (*_glb_hdl_sc_channel_map)[5560].second.push_front(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(6538512);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map)[5578].first = 1;
        (*_glb_hdl_sc_channel_map)[5578].second.push_front(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map)[5572].first = 3;
        (*_glb_hdl_sc_channel_map)[5572].second.push_front(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map)[5566].first = 3;
        (*_glb_hdl_sc_channel_map)[5566].second.push_front(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map)[5590].first = 1;
        (*_glb_hdl_sc_channel_map)[5590].second.push_front(p_1_trace_tvalid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5491].first = 3;
        (*_glb_hdl_sc_channel_map)[5491].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5493].first = 1;
        (*_glb_hdl_sc_channel_map)[5493].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6538904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5501].first = 3;
        (*_glb_hdl_sc_channel_map)[5501].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5503].first = 3;
        (*_glb_hdl_sc_channel_map)[5503].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5504].first = 1;
        (*_glb_hdl_sc_channel_map)[5504].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6539128);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6539184);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5494].first = 1;
        (*_glb_hdl_sc_channel_map)[5494].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6539296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5488].first = 3;
        (*_glb_hdl_sc_channel_map)[5488].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5490].first = 1;
        (*_glb_hdl_sc_channel_map)[5490].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6539464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6539520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6539576);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6539632);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5498].first = 1;
        (*_glb_hdl_sc_channel_map)[5498].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[5508].first = 3;
        (*_glb_hdl_sc_channel_map)[5508].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[5510].first = 1;
        (*_glb_hdl_sc_channel_map)[5510].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(6539856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[5518].first = 3;
        (*_glb_hdl_sc_channel_map)[5518].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[5520].first = 3;
        (*_glb_hdl_sc_channel_map)[5520].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[5521].first = 1;
        (*_glb_hdl_sc_channel_map)[5521].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(6540080);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(6540136);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[5511].first = 1;
        (*_glb_hdl_sc_channel_map)[5511].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(6540248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[5505].first = 3;
        (*_glb_hdl_sc_channel_map)[5505].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[5507].first = 1;
        (*_glb_hdl_sc_channel_map)[5507].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(6540416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(6540472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(6540528);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(6540584);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[5515].first = 1;
        (*_glb_hdl_sc_channel_map)[5515].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[5530].first = 3;
        (*_glb_hdl_sc_channel_map)[5530].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[5536].first = 1;
        (*_glb_hdl_sc_channel_map)[5536].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(6540808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[5533].first = 3;
        (*_glb_hdl_sc_channel_map)[5533].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[5535].first = 3;
        (*_glb_hdl_sc_channel_map)[5535].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[5531].first = 3;
        (*_glb_hdl_sc_channel_map)[5531].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[5532].first = 3;
        (*_glb_hdl_sc_channel_map)[5532].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[5548].first = 3;
        (*_glb_hdl_sc_channel_map)[5548].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[5551].first = 3;
        (*_glb_hdl_sc_channel_map)[5551].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[5552].first = 1;
        (*_glb_hdl_sc_channel_map)[5552].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(6541256);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(6541312);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[5538].first = 1;
        (*_glb_hdl_sc_channel_map)[5538].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[5549].first = 1;
        (*_glb_hdl_sc_channel_map)[5549].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(6541480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(6541536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(6541592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[5522].first = 3;
        (*_glb_hdl_sc_channel_map)[5522].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[5529].first = 1;
        (*_glb_hdl_sc_channel_map)[5529].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(6541760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[5526].first = 3;
        (*_glb_hdl_sc_channel_map)[5526].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[5528].first = 3;
        (*_glb_hdl_sc_channel_map)[5528].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[5523].first = 3;
        (*_glb_hdl_sc_channel_map)[5523].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[5525].first = 3;
        (*_glb_hdl_sc_channel_map)[5525].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(6542040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(6542096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(6542152);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(6542208);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[5545].first = 1;
        (*_glb_hdl_sc_channel_map)[5545].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[5612].first = 1;
        (*_glb_hdl_sc_channel_map)[5612].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5613].first = 1;
        (*_glb_hdl_sc_channel_map)[5613].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[5633].first = 1;
        (*_glb_hdl_sc_channel_map)[5633].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[5634].first = 1;
        (*_glb_hdl_sc_channel_map)[5634].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5618].first = 3;
        (*_glb_hdl_sc_channel_map)[5618].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5619].first = 3;
        (*_glb_hdl_sc_channel_map)[5619].second.push_front(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5621].first = 1;
        (*_glb_hdl_sc_channel_map)[5621].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6542760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5629].first = 3;
        (*_glb_hdl_sc_channel_map)[5629].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5631].first = 3;
        (*_glb_hdl_sc_channel_map)[5631].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5632].first = 1;
        (*_glb_hdl_sc_channel_map)[5632].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6542984);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6543040);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5622].first = 1;
        (*_glb_hdl_sc_channel_map)[5622].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6543152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5614].first = 3;
        (*_glb_hdl_sc_channel_map)[5614].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5615].first = 3;
        (*_glb_hdl_sc_channel_map)[5615].second.push_front(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5617].first = 1;
        (*_glb_hdl_sc_channel_map)[5617].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6543376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6543432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6543488);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6543544);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5626].first = 1;
        (*_glb_hdl_sc_channel_map)[5626].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5600].first = 1;
        (*_glb_hdl_sc_channel_map)[5600].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5599].first = 1;
        (*_glb_hdl_sc_channel_map)[5599].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1575].first = 3;
        (*_glb_hdl_sc_channel_map)[1575].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5611].first = 1;
        (*_glb_hdl_sc_channel_map)[5611].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5609].first = 1;
        (*_glb_hdl_sc_channel_map)[5609].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5608].first = 3;
        (*_glb_hdl_sc_channel_map)[5608].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5610].first = 3;
        (*_glb_hdl_sc_channel_map)[5610].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5598].first = 1;
        (*_glb_hdl_sc_channel_map)[5598].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5597].first = 1;
        (*_glb_hdl_sc_channel_map)[5597].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1576].first = 3;
        (*_glb_hdl_sc_channel_map)[1576].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5607].first = 1;
        (*_glb_hdl_sc_channel_map)[5607].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5605].first = 1;
        (*_glb_hdl_sc_channel_map)[5605].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5604].first = 3;
        (*_glb_hdl_sc_channel_map)[5604].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5606].first = 3;
        (*_glb_hdl_sc_channel_map)[5606].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5603].first = 1;
        (*_glb_hdl_sc_channel_map)[5603].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5601].first = 1;
        (*_glb_hdl_sc_channel_map)[5601].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5602].first = 3;
        (*_glb_hdl_sc_channel_map)[5602].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[5595].first = 3;
        (*_glb_hdl_sc_channel_map)[5595].second.push_front(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(6544664);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(6544720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(6544776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(6544832);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(6544888);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[5672].first = 1;
        (*_glb_hdl_sc_channel_map)[5672].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5673].first = 1;
        (*_glb_hdl_sc_channel_map)[5673].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[5708].first = 1;
        (*_glb_hdl_sc_channel_map)[5708].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[5709].first = 1;
        (*_glb_hdl_sc_channel_map)[5709].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5680].first = 3;
        (*_glb_hdl_sc_channel_map)[5680].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5684].first = 1;
        (*_glb_hdl_sc_channel_map)[5684].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6545328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5700].first = 3;
        (*_glb_hdl_sc_channel_map)[5700].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5704].first = 3;
        (*_glb_hdl_sc_channel_map)[5704].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5706].first = 1;
        (*_glb_hdl_sc_channel_map)[5706].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6545552);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6545608);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5686].first = 1;
        (*_glb_hdl_sc_channel_map)[5686].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6545720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5674].first = 3;
        (*_glb_hdl_sc_channel_map)[5674].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5678].first = 1;
        (*_glb_hdl_sc_channel_map)[5678].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6545888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6545944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6546000);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6546056);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5694].first = 1;
        (*_glb_hdl_sc_channel_map)[5694].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5656].first = 1;
        (*_glb_hdl_sc_channel_map)[5656].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5654].first = 1;
        (*_glb_hdl_sc_channel_map)[5654].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5652].first = 3;
        (*_glb_hdl_sc_channel_map)[5652].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1571].first = 3;
        (*_glb_hdl_sc_channel_map)[1571].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5653].first = 3;
        (*_glb_hdl_sc_channel_map)[5653].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5655].first = 3;
        (*_glb_hdl_sc_channel_map)[5655].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1572].first = 3;
        (*_glb_hdl_sc_channel_map)[1572].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5671].first = 1;
        (*_glb_hdl_sc_channel_map)[5671].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5669].first = 1;
        (*_glb_hdl_sc_channel_map)[5669].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5667].first = 3;
        (*_glb_hdl_sc_channel_map)[5667].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5670].first = 3;
        (*_glb_hdl_sc_channel_map)[5670].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5668].first = 1;
        (*_glb_hdl_sc_channel_map)[5668].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5651].first = 1;
        (*_glb_hdl_sc_channel_map)[5651].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5649].first = 1;
        (*_glb_hdl_sc_channel_map)[5649].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5647].first = 3;
        (*_glb_hdl_sc_channel_map)[5647].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1573].first = 3;
        (*_glb_hdl_sc_channel_map)[1573].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5648].first = 3;
        (*_glb_hdl_sc_channel_map)[5648].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5650].first = 3;
        (*_glb_hdl_sc_channel_map)[5650].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1574].first = 3;
        (*_glb_hdl_sc_channel_map)[1574].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5666].first = 1;
        (*_glb_hdl_sc_channel_map)[5666].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5664].first = 1;
        (*_glb_hdl_sc_channel_map)[5664].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5661].first = 3;
        (*_glb_hdl_sc_channel_map)[5661].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5663].first = 1;
        (*_glb_hdl_sc_channel_map)[5663].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[5662].first = 3;
        (*_glb_hdl_sc_channel_map)[5662].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5665].first = 3;
        (*_glb_hdl_sc_channel_map)[5665].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5660].first = 1;
        (*_glb_hdl_sc_channel_map)[5660].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5658].first = 1;
        (*_glb_hdl_sc_channel_map)[5658].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5659].first = 3;
        (*_glb_hdl_sc_channel_map)[5659].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[5657].first = 3;
        (*_glb_hdl_sc_channel_map)[5657].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5639].first = 1;
        (*_glb_hdl_sc_channel_map)[5639].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6547848);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6547904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(6547960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6548016);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5645].first = 1;
        (*_glb_hdl_sc_channel_map)[5645].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6548128);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6548184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(6548240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6548296);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6548352);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6548408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1569].first = 3;
        (*_glb_hdl_sc_channel_map)[1569].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5681].first = 3;
        (*_glb_hdl_sc_channel_map)[5681].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5685].first = 1;
        (*_glb_hdl_sc_channel_map)[5685].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5683].first = 1;
        (*_glb_hdl_sc_channel_map)[5683].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5701].first = 3;
        (*_glb_hdl_sc_channel_map)[5701].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5705].first = 3;
        (*_glb_hdl_sc_channel_map)[5705].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5707].first = 1;
        (*_glb_hdl_sc_channel_map)[5707].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5703].first = 1;
        (*_glb_hdl_sc_channel_map)[5703].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5689].first = 3;
        (*_glb_hdl_sc_channel_map)[5689].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5691].first = 1;
        (*_glb_hdl_sc_channel_map)[5691].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5687].first = 1;
        (*_glb_hdl_sc_channel_map)[5687].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1570].first = 3;
        (*_glb_hdl_sc_channel_map)[1570].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5675].first = 3;
        (*_glb_hdl_sc_channel_map)[5675].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5679].first = 1;
        (*_glb_hdl_sc_channel_map)[5679].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5677].first = 1;
        (*_glb_hdl_sc_channel_map)[5677].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5693].first = 3;
        (*_glb_hdl_sc_channel_map)[5693].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5697].first = 3;
        (*_glb_hdl_sc_channel_map)[5697].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5699].first = 1;
        (*_glb_hdl_sc_channel_map)[5699].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5695].first = 1;
        (*_glb_hdl_sc_channel_map)[5695].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map)[5731].first = 1;
        (*_glb_hdl_sc_channel_map)[5731].second.push_front(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5732].first = 1;
        (*_glb_hdl_sc_channel_map)[5732].second.push_front(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map)[5752].first = 1;
        (*_glb_hdl_sc_channel_map)[5752].second.push_front(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map)[5753].first = 1;
        (*_glb_hdl_sc_channel_map)[5753].second.push_front(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5737].first = 3;
        (*_glb_hdl_sc_channel_map)[5737].second.push_front(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5738].first = 3;
        (*_glb_hdl_sc_channel_map)[5738].second.push_front(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5740].first = 1;
        (*_glb_hdl_sc_channel_map)[5740].second.push_front(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6549968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5748].first = 3;
        (*_glb_hdl_sc_channel_map)[5748].second.push_front(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5750].first = 3;
        (*_glb_hdl_sc_channel_map)[5750].second.push_front(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5751].first = 1;
        (*_glb_hdl_sc_channel_map)[5751].second.push_front(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6550192);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6550248);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5741].first = 1;
        (*_glb_hdl_sc_channel_map)[5741].second.push_front(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6550360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5733].first = 3;
        (*_glb_hdl_sc_channel_map)[5733].second.push_front(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5734].first = 3;
        (*_glb_hdl_sc_channel_map)[5734].second.push_front(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5736].first = 1;
        (*_glb_hdl_sc_channel_map)[5736].second.push_front(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6550584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6550640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6550696);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6550752);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5745].first = 1;
        (*_glb_hdl_sc_channel_map)[5745].second.push_front(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5719].first = 1;
        (*_glb_hdl_sc_channel_map)[5719].second.push_front(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5718].first = 1;
        (*_glb_hdl_sc_channel_map)[5718].second.push_front(p_4_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1567].first = 3;
        (*_glb_hdl_sc_channel_map)[1567].second.push_front(p_4_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5730].first = 1;
        (*_glb_hdl_sc_channel_map)[5730].second.push_front(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5728].first = 1;
        (*_glb_hdl_sc_channel_map)[5728].second.push_front(p_4_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5727].first = 3;
        (*_glb_hdl_sc_channel_map)[5727].second.push_front(p_4_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5729].first = 3;
        (*_glb_hdl_sc_channel_map)[5729].second.push_front(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5717].first = 1;
        (*_glb_hdl_sc_channel_map)[5717].second.push_front(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5716].first = 1;
        (*_glb_hdl_sc_channel_map)[5716].second.push_front(p_4_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1568].first = 3;
        (*_glb_hdl_sc_channel_map)[1568].second.push_front(p_4_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5726].first = 1;
        (*_glb_hdl_sc_channel_map)[5726].second.push_front(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5724].first = 1;
        (*_glb_hdl_sc_channel_map)[5724].second.push_front(p_4_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5723].first = 3;
        (*_glb_hdl_sc_channel_map)[5723].second.push_front(p_4_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5725].first = 3;
        (*_glb_hdl_sc_channel_map)[5725].second.push_front(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5722].first = 1;
        (*_glb_hdl_sc_channel_map)[5722].second.push_front(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5720].first = 1;
        (*_glb_hdl_sc_channel_map)[5720].second.push_front(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5721].first = 3;
        (*_glb_hdl_sc_channel_map)[5721].second.push_front(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->m_axis_tready.bind(*p_4_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[5714].first = 3;
        (*_glb_hdl_sc_channel_map)[5714].second.push_front(p_4_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_tdata.bind(*p_4_m_axis_tdata);
        p_4_m_axis_tdata->set_sv_netview_offsetfromdp(6551872);
        xsim_sc_channel<0, bool > *p_4_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_tlast.bind(*p_4_m_axis_tlast);
        p_4_m_axis_tlast->set_sv_netview_offsetfromdp(6551928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_tid.bind(*p_4_m_axis_tid);
        p_4_m_axis_tid->set_sv_netview_offsetfromdp(6551984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_tdest.bind(*p_4_m_axis_tdest);
        p_4_m_axis_tdest->set_sv_netview_offsetfromdp(6552040);
        xsim_sc_channel<0, bool > *p_4_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_tvalid.bind(*p_4_m_axis_tvalid);
        p_4_m_axis_tvalid->set_sv_netview_offsetfromdp(6552096);
        sc_inst_5 = new pfm_dynamic_dpa_mon3_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon3");
        sc_inst_5->xsim_set_dbg_index(535);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map)[5791].first = 1;
        (*_glb_hdl_sc_channel_map)[5791].second.push_front(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5792].first = 1;
        (*_glb_hdl_sc_channel_map)[5792].second.push_front(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map)[5827].first = 1;
        (*_glb_hdl_sc_channel_map)[5827].second.push_front(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map)[5828].first = 1;
        (*_glb_hdl_sc_channel_map)[5828].second.push_front(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5799].first = 3;
        (*_glb_hdl_sc_channel_map)[5799].second.push_front(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5803].first = 1;
        (*_glb_hdl_sc_channel_map)[5803].second.push_front(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(6552536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5819].first = 3;
        (*_glb_hdl_sc_channel_map)[5819].second.push_front(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5823].first = 3;
        (*_glb_hdl_sc_channel_map)[5823].second.push_front(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5825].first = 1;
        (*_glb_hdl_sc_channel_map)[5825].second.push_front(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(6552760);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(6552816);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5805].first = 1;
        (*_glb_hdl_sc_channel_map)[5805].second.push_front(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(6552928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5793].first = 3;
        (*_glb_hdl_sc_channel_map)[5793].second.push_front(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5797].first = 1;
        (*_glb_hdl_sc_channel_map)[5797].second.push_front(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(6553096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(6553152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(6553208);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(6553264);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5813].first = 1;
        (*_glb_hdl_sc_channel_map)[5813].second.push_front(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5775].first = 1;
        (*_glb_hdl_sc_channel_map)[5775].second.push_front(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5773].first = 1;
        (*_glb_hdl_sc_channel_map)[5773].second.push_front(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5771].first = 3;
        (*_glb_hdl_sc_channel_map)[5771].second.push_front(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1563].first = 3;
        (*_glb_hdl_sc_channel_map)[1563].second.push_front(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5772].first = 3;
        (*_glb_hdl_sc_channel_map)[5772].second.push_front(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5774].first = 3;
        (*_glb_hdl_sc_channel_map)[5774].second.push_front(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1564].first = 3;
        (*_glb_hdl_sc_channel_map)[1564].second.push_front(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5790].first = 1;
        (*_glb_hdl_sc_channel_map)[5790].second.push_front(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5788].first = 1;
        (*_glb_hdl_sc_channel_map)[5788].second.push_front(p_5_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5786].first = 3;
        (*_glb_hdl_sc_channel_map)[5786].second.push_front(p_5_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5789].first = 3;
        (*_glb_hdl_sc_channel_map)[5789].second.push_front(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5787].first = 1;
        (*_glb_hdl_sc_channel_map)[5787].second.push_front(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5770].first = 1;
        (*_glb_hdl_sc_channel_map)[5770].second.push_front(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5768].first = 1;
        (*_glb_hdl_sc_channel_map)[5768].second.push_front(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5766].first = 3;
        (*_glb_hdl_sc_channel_map)[5766].second.push_front(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1565].first = 3;
        (*_glb_hdl_sc_channel_map)[1565].second.push_front(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5767].first = 3;
        (*_glb_hdl_sc_channel_map)[5767].second.push_front(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5769].first = 3;
        (*_glb_hdl_sc_channel_map)[5769].second.push_front(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1566].first = 3;
        (*_glb_hdl_sc_channel_map)[1566].second.push_front(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5785].first = 1;
        (*_glb_hdl_sc_channel_map)[5785].second.push_front(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5783].first = 1;
        (*_glb_hdl_sc_channel_map)[5783].second.push_front(p_5_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5780].first = 3;
        (*_glb_hdl_sc_channel_map)[5780].second.push_front(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5782].first = 1;
        (*_glb_hdl_sc_channel_map)[5782].second.push_front(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map)[5781].first = 3;
        (*_glb_hdl_sc_channel_map)[5781].second.push_front(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5784].first = 3;
        (*_glb_hdl_sc_channel_map)[5784].second.push_front(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5779].first = 1;
        (*_glb_hdl_sc_channel_map)[5779].second.push_front(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5777].first = 1;
        (*_glb_hdl_sc_channel_map)[5777].second.push_front(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5778].first = 3;
        (*_glb_hdl_sc_channel_map)[5778].second.push_front(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map)[5776].first = 3;
        (*_glb_hdl_sc_channel_map)[5776].second.push_front(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5758].first = 1;
        (*_glb_hdl_sc_channel_map)[5758].second.push_front(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6555056);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6555112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(6555168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6555224);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5764].first = 1;
        (*_glb_hdl_sc_channel_map)[5764].second.push_front(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6555336);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6555392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(6555448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6555504);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6555560);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6555616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1561].first = 3;
        (*_glb_hdl_sc_channel_map)[1561].second.push_front(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5800].first = 3;
        (*_glb_hdl_sc_channel_map)[5800].second.push_front(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5804].first = 1;
        (*_glb_hdl_sc_channel_map)[5804].second.push_front(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5802].first = 1;
        (*_glb_hdl_sc_channel_map)[5802].second.push_front(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5820].first = 3;
        (*_glb_hdl_sc_channel_map)[5820].second.push_front(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5824].first = 3;
        (*_glb_hdl_sc_channel_map)[5824].second.push_front(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5826].first = 1;
        (*_glb_hdl_sc_channel_map)[5826].second.push_front(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5822].first = 1;
        (*_glb_hdl_sc_channel_map)[5822].second.push_front(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5808].first = 3;
        (*_glb_hdl_sc_channel_map)[5808].second.push_front(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5810].first = 1;
        (*_glb_hdl_sc_channel_map)[5810].second.push_front(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5806].first = 1;
        (*_glb_hdl_sc_channel_map)[5806].second.push_front(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1562].first = 3;
        (*_glb_hdl_sc_channel_map)[1562].second.push_front(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5794].first = 3;
        (*_glb_hdl_sc_channel_map)[5794].second.push_front(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5798].first = 1;
        (*_glb_hdl_sc_channel_map)[5798].second.push_front(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5796].first = 1;
        (*_glb_hdl_sc_channel_map)[5796].second.push_front(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5812].first = 3;
        (*_glb_hdl_sc_channel_map)[5812].second.push_front(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5816].first = 3;
        (*_glb_hdl_sc_channel_map)[5816].second.push_front(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5818].first = 1;
        (*_glb_hdl_sc_channel_map)[5818].second.push_front(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5814].first = 1;
        (*_glb_hdl_sc_channel_map)[5814].second.push_front(p_5_s_axi_rready_mon);
        sc_inst_6 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_6->xsim_set_dbg_index(29);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map)[8476].first = 1;
        (*_glb_hdl_sc_channel_map)[8476].second.push_front(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk1.bind(*p_6_aclk1);
        (*_glb_hdl_sc_channel_map)[8477].first = 1;
        (*_glb_hdl_sc_channel_map)[8477].second.push_front(p_6_aclk1);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map)[8478].first = 1;
        (*_glb_hdl_sc_channel_map)[8478].second.push_front(p_6_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awid.bind(*p_6_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[8261].first = 3;
        (*_glb_hdl_sc_channel_map)[8261].second.push_front(p_6_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_awaddr.bind(*p_6_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8258].first = 3;
        (*_glb_hdl_sc_channel_map)[8258].second.push_front(p_6_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_awlen.bind(*p_6_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8262].first = 3;
        (*_glb_hdl_sc_channel_map)[8262].second.push_front(p_6_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awsize.bind(*p_6_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8267].first = 3;
        (*_glb_hdl_sc_channel_map)[8267].second.push_front(p_6_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_awburst.bind(*p_6_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[8259].first = 3;
        (*_glb_hdl_sc_channel_map)[8259].second.push_front(p_6_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_awlock.bind(*p_6_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[8263].first = 1;
        (*_glb_hdl_sc_channel_map)[8263].second.push_front(p_6_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awcache.bind(*p_6_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8260].first = 3;
        (*_glb_hdl_sc_channel_map)[8260].second.push_front(p_6_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awprot.bind(*p_6_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8264].first = 3;
        (*_glb_hdl_sc_channel_map)[8264].second.push_front(p_6_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awqos.bind(*p_6_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8265].first = 3;
        (*_glb_hdl_sc_channel_map)[8265].second.push_front(p_6_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awuser.bind(*p_6_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[8268].first = 3;
        (*_glb_hdl_sc_channel_map)[8268].second.push_front(p_6_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awvalid.bind(*p_6_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8269].first = 3;
        (*_glb_hdl_sc_channel_map)[8269].second.push_front(p_6_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awready.bind(*p_6_S00_AXI_awready);
        p_6_S00_AXI_awready->set_sv_netview_offsetfromdp(7257816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_wdata.bind(*p_6_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8282].first = 3;
        (*_glb_hdl_sc_channel_map)[8282].second.push_front(p_6_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_wstrb.bind(*p_6_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8285].first = 3;
        (*_glb_hdl_sc_channel_map)[8285].second.push_front(p_6_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wlast.bind(*p_6_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8283].first = 3;
        (*_glb_hdl_sc_channel_map)[8283].second.push_front(p_6_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wuser.bind(*p_6_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[8286].first = 3;
        (*_glb_hdl_sc_channel_map)[8286].second.push_front(p_6_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wvalid.bind(*p_6_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8287].first = 3;
        (*_glb_hdl_sc_channel_map)[8287].second.push_front(p_6_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wready.bind(*p_6_S00_AXI_wready);
        p_6_S00_AXI_wready->set_sv_netview_offsetfromdp(7258152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bid.bind(*p_6_S00_AXI_bid);
        p_6_S00_AXI_bid->set_sv_netview_offsetfromdp(7258208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_bresp.bind(*p_6_S00_AXI_bresp);
        p_6_S00_AXI_bresp->set_sv_netview_offsetfromdp(7258264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_buser.bind(*p_6_S00_AXI_buser);
        p_6_S00_AXI_buser->set_sv_netview_offsetfromdp(7258320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bvalid.bind(*p_6_S00_AXI_bvalid);
        p_6_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7258376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bready.bind(*p_6_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8271].first = 3;
        (*_glb_hdl_sc_channel_map)[8271].second.push_front(p_6_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arid.bind(*p_6_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[8249].first = 3;
        (*_glb_hdl_sc_channel_map)[8249].second.push_front(p_6_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_araddr.bind(*p_6_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8246].first = 3;
        (*_glb_hdl_sc_channel_map)[8246].second.push_front(p_6_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_arlen.bind(*p_6_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8250].first = 3;
        (*_glb_hdl_sc_channel_map)[8250].second.push_front(p_6_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arsize.bind(*p_6_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8255].first = 3;
        (*_glb_hdl_sc_channel_map)[8255].second.push_front(p_6_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_arburst.bind(*p_6_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[8247].first = 3;
        (*_glb_hdl_sc_channel_map)[8247].second.push_front(p_6_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_arlock.bind(*p_6_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[8251].first = 1;
        (*_glb_hdl_sc_channel_map)[8251].second.push_front(p_6_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arcache.bind(*p_6_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8248].first = 3;
        (*_glb_hdl_sc_channel_map)[8248].second.push_front(p_6_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arprot.bind(*p_6_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8252].first = 3;
        (*_glb_hdl_sc_channel_map)[8252].second.push_front(p_6_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arqos.bind(*p_6_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8253].first = 3;
        (*_glb_hdl_sc_channel_map)[8253].second.push_front(p_6_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_aruser.bind(*p_6_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[8256].first = 3;
        (*_glb_hdl_sc_channel_map)[8256].second.push_front(p_6_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arvalid.bind(*p_6_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8257].first = 3;
        (*_glb_hdl_sc_channel_map)[8257].second.push_front(p_6_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arready.bind(*p_6_S00_AXI_arready);
        p_6_S00_AXI_arready->set_sv_netview_offsetfromdp(7259104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rid.bind(*p_6_S00_AXI_rid);
        p_6_S00_AXI_rid->set_sv_netview_offsetfromdp(7259160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_rdata.bind(*p_6_S00_AXI_rdata);
        p_6_S00_AXI_rdata->set_sv_netview_offsetfromdp(7259216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_rresp.bind(*p_6_S00_AXI_rresp);
        p_6_S00_AXI_rresp->set_sv_netview_offsetfromdp(7259272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rlast.bind(*p_6_S00_AXI_rlast);
        p_6_S00_AXI_rlast->set_sv_netview_offsetfromdp(7259328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_ruser.bind(*p_6_S00_AXI_ruser);
        p_6_S00_AXI_ruser->set_sv_netview_offsetfromdp(7259384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rvalid.bind(*p_6_S00_AXI_rvalid);
        p_6_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7259440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rready.bind(*p_6_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8278].first = 3;
        (*_glb_hdl_sc_channel_map)[8278].second.push_front(p_6_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awid.bind(*p_6_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map)[8303].first = 3;
        (*_glb_hdl_sc_channel_map)[8303].second.push_front(p_6_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_awaddr.bind(*p_6_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8300].first = 3;
        (*_glb_hdl_sc_channel_map)[8300].second.push_front(p_6_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_awlen.bind(*p_6_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8304].first = 3;
        (*_glb_hdl_sc_channel_map)[8304].second.push_front(p_6_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awsize.bind(*p_6_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8309].first = 3;
        (*_glb_hdl_sc_channel_map)[8309].second.push_front(p_6_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_awburst.bind(*p_6_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[8301].first = 3;
        (*_glb_hdl_sc_channel_map)[8301].second.push_front(p_6_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_awlock.bind(*p_6_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[8305].first = 1;
        (*_glb_hdl_sc_channel_map)[8305].second.push_front(p_6_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awcache.bind(*p_6_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8302].first = 3;
        (*_glb_hdl_sc_channel_map)[8302].second.push_front(p_6_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awprot.bind(*p_6_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8306].first = 3;
        (*_glb_hdl_sc_channel_map)[8306].second.push_front(p_6_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awqos.bind(*p_6_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8307].first = 3;
        (*_glb_hdl_sc_channel_map)[8307].second.push_front(p_6_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awuser.bind(*p_6_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[8310].first = 3;
        (*_glb_hdl_sc_channel_map)[8310].second.push_front(p_6_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awvalid.bind(*p_6_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8311].first = 3;
        (*_glb_hdl_sc_channel_map)[8311].second.push_front(p_6_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awready.bind(*p_6_S01_AXI_awready);
        p_6_S01_AXI_awready->set_sv_netview_offsetfromdp(7260168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_wdata.bind(*p_6_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8324].first = 3;
        (*_glb_hdl_sc_channel_map)[8324].second.push_front(p_6_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_wstrb.bind(*p_6_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8327].first = 3;
        (*_glb_hdl_sc_channel_map)[8327].second.push_front(p_6_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wlast.bind(*p_6_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8325].first = 3;
        (*_glb_hdl_sc_channel_map)[8325].second.push_front(p_6_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wuser.bind(*p_6_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[8328].first = 3;
        (*_glb_hdl_sc_channel_map)[8328].second.push_front(p_6_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wvalid.bind(*p_6_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8329].first = 3;
        (*_glb_hdl_sc_channel_map)[8329].second.push_front(p_6_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wready.bind(*p_6_S01_AXI_wready);
        p_6_S01_AXI_wready->set_sv_netview_offsetfromdp(7260504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bid.bind(*p_6_S01_AXI_bid);
        p_6_S01_AXI_bid->set_sv_netview_offsetfromdp(7260560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_bresp.bind(*p_6_S01_AXI_bresp);
        p_6_S01_AXI_bresp->set_sv_netview_offsetfromdp(7260616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_buser.bind(*p_6_S01_AXI_buser);
        p_6_S01_AXI_buser->set_sv_netview_offsetfromdp(7260672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bvalid.bind(*p_6_S01_AXI_bvalid);
        p_6_S01_AXI_bvalid->set_sv_netview_offsetfromdp(7260728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bready.bind(*p_6_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8313].first = 3;
        (*_glb_hdl_sc_channel_map)[8313].second.push_front(p_6_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arid.bind(*p_6_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map)[8291].first = 3;
        (*_glb_hdl_sc_channel_map)[8291].second.push_front(p_6_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_araddr.bind(*p_6_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8288].first = 3;
        (*_glb_hdl_sc_channel_map)[8288].second.push_front(p_6_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_arlen.bind(*p_6_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8292].first = 3;
        (*_glb_hdl_sc_channel_map)[8292].second.push_front(p_6_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arsize.bind(*p_6_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8297].first = 3;
        (*_glb_hdl_sc_channel_map)[8297].second.push_front(p_6_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_arburst.bind(*p_6_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[8289].first = 3;
        (*_glb_hdl_sc_channel_map)[8289].second.push_front(p_6_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_arlock.bind(*p_6_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[8293].first = 1;
        (*_glb_hdl_sc_channel_map)[8293].second.push_front(p_6_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arcache.bind(*p_6_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8290].first = 3;
        (*_glb_hdl_sc_channel_map)[8290].second.push_front(p_6_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arprot.bind(*p_6_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8294].first = 3;
        (*_glb_hdl_sc_channel_map)[8294].second.push_front(p_6_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arqos.bind(*p_6_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8295].first = 3;
        (*_glb_hdl_sc_channel_map)[8295].second.push_front(p_6_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_aruser.bind(*p_6_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[8298].first = 3;
        (*_glb_hdl_sc_channel_map)[8298].second.push_front(p_6_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arvalid.bind(*p_6_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8299].first = 3;
        (*_glb_hdl_sc_channel_map)[8299].second.push_front(p_6_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arready.bind(*p_6_S01_AXI_arready);
        p_6_S01_AXI_arready->set_sv_netview_offsetfromdp(7261456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rid.bind(*p_6_S01_AXI_rid);
        p_6_S01_AXI_rid->set_sv_netview_offsetfromdp(7261512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_rdata.bind(*p_6_S01_AXI_rdata);
        p_6_S01_AXI_rdata->set_sv_netview_offsetfromdp(7261568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_rresp.bind(*p_6_S01_AXI_rresp);
        p_6_S01_AXI_rresp->set_sv_netview_offsetfromdp(7261624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rlast.bind(*p_6_S01_AXI_rlast);
        p_6_S01_AXI_rlast->set_sv_netview_offsetfromdp(7261680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_ruser.bind(*p_6_S01_AXI_ruser);
        p_6_S01_AXI_ruser->set_sv_netview_offsetfromdp(7261736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rvalid.bind(*p_6_S01_AXI_rvalid);
        p_6_S01_AXI_rvalid->set_sv_netview_offsetfromdp(7261792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rready.bind(*p_6_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8320].first = 3;
        (*_glb_hdl_sc_channel_map)[8320].second.push_front(p_6_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awid.bind(*p_6_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map)[8345].first = 3;
        (*_glb_hdl_sc_channel_map)[8345].second.push_front(p_6_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_awaddr.bind(*p_6_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8342].first = 3;
        (*_glb_hdl_sc_channel_map)[8342].second.push_front(p_6_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_awlen.bind(*p_6_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8346].first = 3;
        (*_glb_hdl_sc_channel_map)[8346].second.push_front(p_6_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awsize.bind(*p_6_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8351].first = 3;
        (*_glb_hdl_sc_channel_map)[8351].second.push_front(p_6_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_awburst.bind(*p_6_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[8343].first = 3;
        (*_glb_hdl_sc_channel_map)[8343].second.push_front(p_6_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_awlock.bind(*p_6_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[8347].first = 1;
        (*_glb_hdl_sc_channel_map)[8347].second.push_front(p_6_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awcache.bind(*p_6_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8344].first = 3;
        (*_glb_hdl_sc_channel_map)[8344].second.push_front(p_6_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awprot.bind(*p_6_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8348].first = 3;
        (*_glb_hdl_sc_channel_map)[8348].second.push_front(p_6_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awqos.bind(*p_6_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8349].first = 3;
        (*_glb_hdl_sc_channel_map)[8349].second.push_front(p_6_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awuser.bind(*p_6_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[8352].first = 3;
        (*_glb_hdl_sc_channel_map)[8352].second.push_front(p_6_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awvalid.bind(*p_6_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8353].first = 3;
        (*_glb_hdl_sc_channel_map)[8353].second.push_front(p_6_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awready.bind(*p_6_S02_AXI_awready);
        p_6_S02_AXI_awready->set_sv_netview_offsetfromdp(7262520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_wdata.bind(*p_6_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8366].first = 3;
        (*_glb_hdl_sc_channel_map)[8366].second.push_front(p_6_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_wstrb.bind(*p_6_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8369].first = 3;
        (*_glb_hdl_sc_channel_map)[8369].second.push_front(p_6_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wlast.bind(*p_6_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8367].first = 3;
        (*_glb_hdl_sc_channel_map)[8367].second.push_front(p_6_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wuser.bind(*p_6_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[8370].first = 3;
        (*_glb_hdl_sc_channel_map)[8370].second.push_front(p_6_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wvalid.bind(*p_6_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8371].first = 3;
        (*_glb_hdl_sc_channel_map)[8371].second.push_front(p_6_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wready.bind(*p_6_S02_AXI_wready);
        p_6_S02_AXI_wready->set_sv_netview_offsetfromdp(7262856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bid.bind(*p_6_S02_AXI_bid);
        p_6_S02_AXI_bid->set_sv_netview_offsetfromdp(7262912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_bresp.bind(*p_6_S02_AXI_bresp);
        p_6_S02_AXI_bresp->set_sv_netview_offsetfromdp(7262968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_buser.bind(*p_6_S02_AXI_buser);
        p_6_S02_AXI_buser->set_sv_netview_offsetfromdp(7263024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bvalid.bind(*p_6_S02_AXI_bvalid);
        p_6_S02_AXI_bvalid->set_sv_netview_offsetfromdp(7263080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bready.bind(*p_6_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8355].first = 3;
        (*_glb_hdl_sc_channel_map)[8355].second.push_front(p_6_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arid.bind(*p_6_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map)[8333].first = 3;
        (*_glb_hdl_sc_channel_map)[8333].second.push_front(p_6_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_araddr.bind(*p_6_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8330].first = 3;
        (*_glb_hdl_sc_channel_map)[8330].second.push_front(p_6_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_arlen.bind(*p_6_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8334].first = 3;
        (*_glb_hdl_sc_channel_map)[8334].second.push_front(p_6_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arsize.bind(*p_6_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8339].first = 3;
        (*_glb_hdl_sc_channel_map)[8339].second.push_front(p_6_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_arburst.bind(*p_6_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[8331].first = 3;
        (*_glb_hdl_sc_channel_map)[8331].second.push_front(p_6_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_arlock.bind(*p_6_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[8335].first = 1;
        (*_glb_hdl_sc_channel_map)[8335].second.push_front(p_6_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arcache.bind(*p_6_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8332].first = 3;
        (*_glb_hdl_sc_channel_map)[8332].second.push_front(p_6_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arprot.bind(*p_6_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8336].first = 3;
        (*_glb_hdl_sc_channel_map)[8336].second.push_front(p_6_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arqos.bind(*p_6_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8337].first = 3;
        (*_glb_hdl_sc_channel_map)[8337].second.push_front(p_6_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_aruser.bind(*p_6_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[8340].first = 3;
        (*_glb_hdl_sc_channel_map)[8340].second.push_front(p_6_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arvalid.bind(*p_6_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8341].first = 3;
        (*_glb_hdl_sc_channel_map)[8341].second.push_front(p_6_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arready.bind(*p_6_S02_AXI_arready);
        p_6_S02_AXI_arready->set_sv_netview_offsetfromdp(7263808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rid.bind(*p_6_S02_AXI_rid);
        p_6_S02_AXI_rid->set_sv_netview_offsetfromdp(7263864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_rdata.bind(*p_6_S02_AXI_rdata);
        p_6_S02_AXI_rdata->set_sv_netview_offsetfromdp(7263920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_rresp.bind(*p_6_S02_AXI_rresp);
        p_6_S02_AXI_rresp->set_sv_netview_offsetfromdp(7263976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rlast.bind(*p_6_S02_AXI_rlast);
        p_6_S02_AXI_rlast->set_sv_netview_offsetfromdp(7264032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_ruser.bind(*p_6_S02_AXI_ruser);
        p_6_S02_AXI_ruser->set_sv_netview_offsetfromdp(7264088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rvalid.bind(*p_6_S02_AXI_rvalid);
        p_6_S02_AXI_rvalid->set_sv_netview_offsetfromdp(7264144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rready.bind(*p_6_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8362].first = 3;
        (*_glb_hdl_sc_channel_map)[8362].second.push_front(p_6_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awid.bind(*p_6_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map)[8387].first = 3;
        (*_glb_hdl_sc_channel_map)[8387].second.push_front(p_6_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_awaddr.bind(*p_6_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8384].first = 3;
        (*_glb_hdl_sc_channel_map)[8384].second.push_front(p_6_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_awlen.bind(*p_6_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8388].first = 3;
        (*_glb_hdl_sc_channel_map)[8388].second.push_front(p_6_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awsize.bind(*p_6_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8393].first = 3;
        (*_glb_hdl_sc_channel_map)[8393].second.push_front(p_6_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_awburst.bind(*p_6_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[8385].first = 3;
        (*_glb_hdl_sc_channel_map)[8385].second.push_front(p_6_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_awlock.bind(*p_6_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[8389].first = 1;
        (*_glb_hdl_sc_channel_map)[8389].second.push_front(p_6_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awcache.bind(*p_6_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8386].first = 3;
        (*_glb_hdl_sc_channel_map)[8386].second.push_front(p_6_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awprot.bind(*p_6_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8390].first = 3;
        (*_glb_hdl_sc_channel_map)[8390].second.push_front(p_6_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awqos.bind(*p_6_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8391].first = 3;
        (*_glb_hdl_sc_channel_map)[8391].second.push_front(p_6_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awuser.bind(*p_6_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[8394].first = 3;
        (*_glb_hdl_sc_channel_map)[8394].second.push_front(p_6_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awvalid.bind(*p_6_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8395].first = 3;
        (*_glb_hdl_sc_channel_map)[8395].second.push_front(p_6_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awready.bind(*p_6_S03_AXI_awready);
        p_6_S03_AXI_awready->set_sv_netview_offsetfromdp(7264872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_wdata.bind(*p_6_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8408].first = 3;
        (*_glb_hdl_sc_channel_map)[8408].second.push_front(p_6_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_wstrb.bind(*p_6_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8411].first = 3;
        (*_glb_hdl_sc_channel_map)[8411].second.push_front(p_6_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wlast.bind(*p_6_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8409].first = 3;
        (*_glb_hdl_sc_channel_map)[8409].second.push_front(p_6_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wuser.bind(*p_6_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[8412].first = 3;
        (*_glb_hdl_sc_channel_map)[8412].second.push_front(p_6_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wvalid.bind(*p_6_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8413].first = 3;
        (*_glb_hdl_sc_channel_map)[8413].second.push_front(p_6_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wready.bind(*p_6_S03_AXI_wready);
        p_6_S03_AXI_wready->set_sv_netview_offsetfromdp(7265208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bid.bind(*p_6_S03_AXI_bid);
        p_6_S03_AXI_bid->set_sv_netview_offsetfromdp(7265264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_bresp.bind(*p_6_S03_AXI_bresp);
        p_6_S03_AXI_bresp->set_sv_netview_offsetfromdp(7265320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_buser.bind(*p_6_S03_AXI_buser);
        p_6_S03_AXI_buser->set_sv_netview_offsetfromdp(7265376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bvalid.bind(*p_6_S03_AXI_bvalid);
        p_6_S03_AXI_bvalid->set_sv_netview_offsetfromdp(7265432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bready.bind(*p_6_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8397].first = 3;
        (*_glb_hdl_sc_channel_map)[8397].second.push_front(p_6_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arid.bind(*p_6_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map)[8375].first = 3;
        (*_glb_hdl_sc_channel_map)[8375].second.push_front(p_6_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_araddr.bind(*p_6_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8372].first = 3;
        (*_glb_hdl_sc_channel_map)[8372].second.push_front(p_6_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_arlen.bind(*p_6_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8376].first = 3;
        (*_glb_hdl_sc_channel_map)[8376].second.push_front(p_6_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arsize.bind(*p_6_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8381].first = 3;
        (*_glb_hdl_sc_channel_map)[8381].second.push_front(p_6_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_arburst.bind(*p_6_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[8373].first = 3;
        (*_glb_hdl_sc_channel_map)[8373].second.push_front(p_6_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_arlock.bind(*p_6_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[8377].first = 1;
        (*_glb_hdl_sc_channel_map)[8377].second.push_front(p_6_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arcache.bind(*p_6_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8374].first = 3;
        (*_glb_hdl_sc_channel_map)[8374].second.push_front(p_6_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arprot.bind(*p_6_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8378].first = 3;
        (*_glb_hdl_sc_channel_map)[8378].second.push_front(p_6_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arqos.bind(*p_6_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8379].first = 3;
        (*_glb_hdl_sc_channel_map)[8379].second.push_front(p_6_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_aruser.bind(*p_6_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[8382].first = 3;
        (*_glb_hdl_sc_channel_map)[8382].second.push_front(p_6_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arvalid.bind(*p_6_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8383].first = 3;
        (*_glb_hdl_sc_channel_map)[8383].second.push_front(p_6_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arready.bind(*p_6_S03_AXI_arready);
        p_6_S03_AXI_arready->set_sv_netview_offsetfromdp(7266160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rid.bind(*p_6_S03_AXI_rid);
        p_6_S03_AXI_rid->set_sv_netview_offsetfromdp(7266216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_rdata.bind(*p_6_S03_AXI_rdata);
        p_6_S03_AXI_rdata->set_sv_netview_offsetfromdp(7266272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_rresp.bind(*p_6_S03_AXI_rresp);
        p_6_S03_AXI_rresp->set_sv_netview_offsetfromdp(7266328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rlast.bind(*p_6_S03_AXI_rlast);
        p_6_S03_AXI_rlast->set_sv_netview_offsetfromdp(7266384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_ruser.bind(*p_6_S03_AXI_ruser);
        p_6_S03_AXI_ruser->set_sv_netview_offsetfromdp(7266440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rvalid.bind(*p_6_S03_AXI_rvalid);
        p_6_S03_AXI_rvalid->set_sv_netview_offsetfromdp(7266496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rready.bind(*p_6_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8404].first = 3;
        (*_glb_hdl_sc_channel_map)[8404].second.push_front(p_6_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_awaddr.bind(*p_6_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8423].first = 3;
        (*_glb_hdl_sc_channel_map)[8423].second.push_front(p_6_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_awlen.bind(*p_6_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8425].first = 3;
        (*_glb_hdl_sc_channel_map)[8425].second.push_front(p_6_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awsize.bind(*p_6_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8430].first = 3;
        (*_glb_hdl_sc_channel_map)[8430].second.push_front(p_6_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_awlock.bind(*p_6_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1273].first = 1;
        (*_glb_hdl_sc_channel_map)[1273].second.push_front(p_6_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awcache.bind(*p_6_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8424].first = 3;
        (*_glb_hdl_sc_channel_map)[8424].second.push_front(p_6_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awprot.bind(*p_6_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8426].first = 3;
        (*_glb_hdl_sc_channel_map)[8426].second.push_front(p_6_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awregion.bind(*p_6_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[8429].first = 3;
        (*_glb_hdl_sc_channel_map)[8429].second.push_front(p_6_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awqos.bind(*p_6_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8427].first = 3;
        (*_glb_hdl_sc_channel_map)[8427].second.push_front(p_6_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awvalid.bind(*p_6_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8431].first = 3;
        (*_glb_hdl_sc_channel_map)[8431].second.push_front(p_6_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awready.bind(*p_6_S04_AXI_awready);
        p_6_S04_AXI_awready->set_sv_netview_offsetfromdp(7267112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S04_AXI_wdata.bind(*p_6_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8440].first = 3;
        (*_glb_hdl_sc_channel_map)[8440].second.push_front(p_6_S04_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_wstrb.bind(*p_6_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8443].first = 3;
        (*_glb_hdl_sc_channel_map)[8443].second.push_front(p_6_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wlast.bind(*p_6_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8441].first = 3;
        (*_glb_hdl_sc_channel_map)[8441].second.push_front(p_6_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wvalid.bind(*p_6_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8444].first = 3;
        (*_glb_hdl_sc_channel_map)[8444].second.push_front(p_6_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wready.bind(*p_6_S04_AXI_wready);
        p_6_S04_AXI_wready->set_sv_netview_offsetfromdp(7267392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_bresp.bind(*p_6_S04_AXI_bresp);
        p_6_S04_AXI_bresp->set_sv_netview_offsetfromdp(7267448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bvalid.bind(*p_6_S04_AXI_bvalid);
        p_6_S04_AXI_bvalid->set_sv_netview_offsetfromdp(7267504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bready.bind(*p_6_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8432].first = 3;
        (*_glb_hdl_sc_channel_map)[8432].second.push_front(p_6_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_araddr.bind(*p_6_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8414].first = 3;
        (*_glb_hdl_sc_channel_map)[8414].second.push_front(p_6_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_arlen.bind(*p_6_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8416].first = 3;
        (*_glb_hdl_sc_channel_map)[8416].second.push_front(p_6_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arsize.bind(*p_6_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8421].first = 3;
        (*_glb_hdl_sc_channel_map)[8421].second.push_front(p_6_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_arlock.bind(*p_6_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1274].first = 1;
        (*_glb_hdl_sc_channel_map)[1274].second.push_front(p_6_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arcache.bind(*p_6_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8415].first = 3;
        (*_glb_hdl_sc_channel_map)[8415].second.push_front(p_6_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arprot.bind(*p_6_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8417].first = 3;
        (*_glb_hdl_sc_channel_map)[8417].second.push_front(p_6_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arregion.bind(*p_6_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[8420].first = 3;
        (*_glb_hdl_sc_channel_map)[8420].second.push_front(p_6_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arqos.bind(*p_6_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8418].first = 3;
        (*_glb_hdl_sc_channel_map)[8418].second.push_front(p_6_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arvalid.bind(*p_6_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8422].first = 3;
        (*_glb_hdl_sc_channel_map)[8422].second.push_front(p_6_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arready.bind(*p_6_S04_AXI_arready);
        p_6_S04_AXI_arready->set_sv_netview_offsetfromdp(7268120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S04_AXI_rdata.bind(*p_6_S04_AXI_rdata);
        p_6_S04_AXI_rdata->set_sv_netview_offsetfromdp(7268176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_rresp.bind(*p_6_S04_AXI_rresp);
        p_6_S04_AXI_rresp->set_sv_netview_offsetfromdp(7268232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rlast.bind(*p_6_S04_AXI_rlast);
        p_6_S04_AXI_rlast->set_sv_netview_offsetfromdp(7268288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rvalid.bind(*p_6_S04_AXI_rvalid);
        p_6_S04_AXI_rvalid->set_sv_netview_offsetfromdp(7268344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rready.bind(*p_6_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8437].first = 3;
        (*_glb_hdl_sc_channel_map)[8437].second.push_front(p_6_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_awaddr.bind(*p_6_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[8454].first = 3;
        (*_glb_hdl_sc_channel_map)[8454].second.push_front(p_6_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_awlen.bind(*p_6_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[8456].first = 3;
        (*_glb_hdl_sc_channel_map)[8456].second.push_front(p_6_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awsize.bind(*p_6_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[8461].first = 3;
        (*_glb_hdl_sc_channel_map)[8461].second.push_front(p_6_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_awlock.bind(*p_6_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1271].first = 1;
        (*_glb_hdl_sc_channel_map)[1271].second.push_front(p_6_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awcache.bind(*p_6_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[8455].first = 3;
        (*_glb_hdl_sc_channel_map)[8455].second.push_front(p_6_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awprot.bind(*p_6_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[8457].first = 3;
        (*_glb_hdl_sc_channel_map)[8457].second.push_front(p_6_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awregion.bind(*p_6_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[8460].first = 3;
        (*_glb_hdl_sc_channel_map)[8460].second.push_front(p_6_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awqos.bind(*p_6_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[8458].first = 3;
        (*_glb_hdl_sc_channel_map)[8458].second.push_front(p_6_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awvalid.bind(*p_6_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[8462].first = 3;
        (*_glb_hdl_sc_channel_map)[8462].second.push_front(p_6_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awready.bind(*p_6_S05_AXI_awready);
        p_6_S05_AXI_awready->set_sv_netview_offsetfromdp(7268960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S05_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S05_AXI_wdata.bind(*p_6_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[8471].first = 3;
        (*_glb_hdl_sc_channel_map)[8471].second.push_front(p_6_S05_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_wstrb.bind(*p_6_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[8474].first = 3;
        (*_glb_hdl_sc_channel_map)[8474].second.push_front(p_6_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wlast.bind(*p_6_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[8472].first = 3;
        (*_glb_hdl_sc_channel_map)[8472].second.push_front(p_6_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wvalid.bind(*p_6_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[8475].first = 3;
        (*_glb_hdl_sc_channel_map)[8475].second.push_front(p_6_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wready.bind(*p_6_S05_AXI_wready);
        p_6_S05_AXI_wready->set_sv_netview_offsetfromdp(7269240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_bresp.bind(*p_6_S05_AXI_bresp);
        p_6_S05_AXI_bresp->set_sv_netview_offsetfromdp(7269296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bvalid.bind(*p_6_S05_AXI_bvalid);
        p_6_S05_AXI_bvalid->set_sv_netview_offsetfromdp(7269352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bready.bind(*p_6_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map)[8463].first = 3;
        (*_glb_hdl_sc_channel_map)[8463].second.push_front(p_6_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_araddr.bind(*p_6_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[8445].first = 3;
        (*_glb_hdl_sc_channel_map)[8445].second.push_front(p_6_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_arlen.bind(*p_6_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[8447].first = 3;
        (*_glb_hdl_sc_channel_map)[8447].second.push_front(p_6_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arsize.bind(*p_6_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[8452].first = 3;
        (*_glb_hdl_sc_channel_map)[8452].second.push_front(p_6_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_arlock.bind(*p_6_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1272].first = 1;
        (*_glb_hdl_sc_channel_map)[1272].second.push_front(p_6_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arcache.bind(*p_6_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[8446].first = 3;
        (*_glb_hdl_sc_channel_map)[8446].second.push_front(p_6_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arprot.bind(*p_6_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[8448].first = 3;
        (*_glb_hdl_sc_channel_map)[8448].second.push_front(p_6_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arregion.bind(*p_6_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[8451].first = 3;
        (*_glb_hdl_sc_channel_map)[8451].second.push_front(p_6_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arqos.bind(*p_6_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[8449].first = 3;
        (*_glb_hdl_sc_channel_map)[8449].second.push_front(p_6_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arvalid.bind(*p_6_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[8453].first = 3;
        (*_glb_hdl_sc_channel_map)[8453].second.push_front(p_6_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arready.bind(*p_6_S05_AXI_arready);
        p_6_S05_AXI_arready->set_sv_netview_offsetfromdp(7269968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S05_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S05_AXI_rdata.bind(*p_6_S05_AXI_rdata);
        p_6_S05_AXI_rdata->set_sv_netview_offsetfromdp(7270024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_rresp.bind(*p_6_S05_AXI_rresp);
        p_6_S05_AXI_rresp->set_sv_netview_offsetfromdp(7270080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rlast.bind(*p_6_S05_AXI_rlast);
        p_6_S05_AXI_rlast->set_sv_netview_offsetfromdp(7270136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rvalid.bind(*p_6_S05_AXI_rvalid);
        p_6_S05_AXI_rvalid->set_sv_netview_offsetfromdp(7270192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rready.bind(*p_6_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map)[8468].first = 3;
        (*_glb_hdl_sc_channel_map)[8468].second.push_front(p_6_S05_AXI_rready);
        xsim_sc_channel<0, bool > *p_6_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_6->ddr4_mem_calib_complete.bind(*p_6_ddr4_mem_calib_complete);
        p_6_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(7270304);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_awid.bind(*p_6_M00_AXI_awid);
        p_6_M00_AXI_awid->set_sv_netview_offsetfromdp(7270360);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_awaddr.bind(*p_6_M00_AXI_awaddr);
        p_6_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7270416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_awlen.bind(*p_6_M00_AXI_awlen);
        p_6_M00_AXI_awlen->set_sv_netview_offsetfromdp(7270472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awsize.bind(*p_6_M00_AXI_awsize);
        p_6_M00_AXI_awsize->set_sv_netview_offsetfromdp(7270528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_awburst.bind(*p_6_M00_AXI_awburst);
        p_6_M00_AXI_awburst->set_sv_netview_offsetfromdp(7270584);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_awlock.bind(*p_6_M00_AXI_awlock);
        p_6_M00_AXI_awlock->set_sv_netview_offsetfromdp(7270640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awcache.bind(*p_6_M00_AXI_awcache);
        p_6_M00_AXI_awcache->set_sv_netview_offsetfromdp(7270696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awprot.bind(*p_6_M00_AXI_awprot);
        p_6_M00_AXI_awprot->set_sv_netview_offsetfromdp(7270752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awqos.bind(*p_6_M00_AXI_awqos);
        p_6_M00_AXI_awqos->set_sv_netview_offsetfromdp(7270808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_awuser.bind(*p_6_M00_AXI_awuser);
        p_6_M00_AXI_awuser->set_sv_netview_offsetfromdp(7270864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awvalid.bind(*p_6_M00_AXI_awvalid);
        p_6_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7270920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awready.bind(*p_6_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map)[8113].first = 3;
        (*_glb_hdl_sc_channel_map)[8113].second.push_front(p_6_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_wdata.bind(*p_6_M00_AXI_wdata);
        p_6_M00_AXI_wdata->set_sv_netview_offsetfromdp(7271032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M00_AXI_wstrb.bind(*p_6_M00_AXI_wstrb);
        p_6_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7271088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wlast.bind(*p_6_M00_AXI_wlast);
        p_6_M00_AXI_wlast->set_sv_netview_offsetfromdp(7271144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wuser.bind(*p_6_M00_AXI_wuser);
        p_6_M00_AXI_wuser->set_sv_netview_offsetfromdp(7271200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wvalid.bind(*p_6_M00_AXI_wvalid);
        p_6_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7271256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wready.bind(*p_6_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map)[8131].first = 3;
        (*_glb_hdl_sc_channel_map)[8131].second.push_front(p_6_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_bid.bind(*p_6_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map)[8117].first = 3;
        (*_glb_hdl_sc_channel_map)[8117].second.push_front(p_6_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_bresp.bind(*p_6_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[8119].first = 3;
        (*_glb_hdl_sc_channel_map)[8119].second.push_front(p_6_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_buser.bind(*p_6_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map)[8120].first = 3;
        (*_glb_hdl_sc_channel_map)[8120].second.push_front(p_6_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bvalid.bind(*p_6_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[8121].first = 3;
        (*_glb_hdl_sc_channel_map)[8121].second.push_front(p_6_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bready.bind(*p_6_M00_AXI_bready);
        p_6_M00_AXI_bready->set_sv_netview_offsetfromdp(7271592);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_arid.bind(*p_6_M00_AXI_arid);
        p_6_M00_AXI_arid->set_sv_netview_offsetfromdp(7271648);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_araddr.bind(*p_6_M00_AXI_araddr);
        p_6_M00_AXI_araddr->set_sv_netview_offsetfromdp(7271704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_arlen.bind(*p_6_M00_AXI_arlen);
        p_6_M00_AXI_arlen->set_sv_netview_offsetfromdp(7271760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arsize.bind(*p_6_M00_AXI_arsize);
        p_6_M00_AXI_arsize->set_sv_netview_offsetfromdp(7271816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_arburst.bind(*p_6_M00_AXI_arburst);
        p_6_M00_AXI_arburst->set_sv_netview_offsetfromdp(7271872);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_arlock.bind(*p_6_M00_AXI_arlock);
        p_6_M00_AXI_arlock->set_sv_netview_offsetfromdp(7271928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arcache.bind(*p_6_M00_AXI_arcache);
        p_6_M00_AXI_arcache->set_sv_netview_offsetfromdp(7271984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arprot.bind(*p_6_M00_AXI_arprot);
        p_6_M00_AXI_arprot->set_sv_netview_offsetfromdp(7272040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arqos.bind(*p_6_M00_AXI_arqos);
        p_6_M00_AXI_arqos->set_sv_netview_offsetfromdp(7272096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_aruser.bind(*p_6_M00_AXI_aruser);
        p_6_M00_AXI_aruser->set_sv_netview_offsetfromdp(7272152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arvalid.bind(*p_6_M00_AXI_arvalid);
        p_6_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7272208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arready.bind(*p_6_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map)[8101].first = 3;
        (*_glb_hdl_sc_channel_map)[8101].second.push_front(p_6_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_rid.bind(*p_6_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map)[8123].first = 3;
        (*_glb_hdl_sc_channel_map)[8123].second.push_front(p_6_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_rdata.bind(*p_6_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[8122].first = 3;
        (*_glb_hdl_sc_channel_map)[8122].second.push_front(p_6_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_rresp.bind(*p_6_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[8126].first = 3;
        (*_glb_hdl_sc_channel_map)[8126].second.push_front(p_6_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rlast.bind(*p_6_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[8124].first = 3;
        (*_glb_hdl_sc_channel_map)[8124].second.push_front(p_6_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_ruser.bind(*p_6_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[8127].first = 3;
        (*_glb_hdl_sc_channel_map)[8127].second.push_front(p_6_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rvalid.bind(*p_6_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[8128].first = 3;
        (*_glb_hdl_sc_channel_map)[8128].second.push_front(p_6_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rready.bind(*p_6_M00_AXI_rready);
        p_6_M00_AXI_rready->set_sv_netview_offsetfromdp(7272656);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_awaddr.bind(*p_6_M01_AXI_awaddr);
        p_6_M01_AXI_awaddr->set_sv_netview_offsetfromdp(7272712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_awlen.bind(*p_6_M01_AXI_awlen);
        p_6_M01_AXI_awlen->set_sv_netview_offsetfromdp(7272768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awsize.bind(*p_6_M01_AXI_awsize);
        p_6_M01_AXI_awsize->set_sv_netview_offsetfromdp(7272824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_awburst.bind(*p_6_M01_AXI_awburst);
        p_6_M01_AXI_awburst->set_sv_netview_offsetfromdp(7272880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awprot.bind(*p_6_M01_AXI_awprot);
        p_6_M01_AXI_awprot->set_sv_netview_offsetfromdp(7272936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awvalid.bind(*p_6_M01_AXI_awvalid);
        p_6_M01_AXI_awvalid->set_sv_netview_offsetfromdp(7272992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awready.bind(*p_6_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map)[8146].first = 3;
        (*_glb_hdl_sc_channel_map)[8146].second.push_front(p_6_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_wdata.bind(*p_6_M01_AXI_wdata);
        p_6_M01_AXI_wdata->set_sv_netview_offsetfromdp(7273104);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M01_AXI_wstrb.bind(*p_6_M01_AXI_wstrb);
        p_6_M01_AXI_wstrb->set_sv_netview_offsetfromdp(7273160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wlast.bind(*p_6_M01_AXI_wlast);
        p_6_M01_AXI_wlast->set_sv_netview_offsetfromdp(7273216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wvalid.bind(*p_6_M01_AXI_wvalid);
        p_6_M01_AXI_wvalid->set_sv_netview_offsetfromdp(7273272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wready.bind(*p_6_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map)[8159].first = 3;
        (*_glb_hdl_sc_channel_map)[8159].second.push_front(p_6_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_bresp.bind(*p_6_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[8150].first = 3;
        (*_glb_hdl_sc_channel_map)[8150].second.push_front(p_6_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bvalid.bind(*p_6_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[8151].first = 3;
        (*_glb_hdl_sc_channel_map)[8151].second.push_front(p_6_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bready.bind(*p_6_M01_AXI_bready);
        p_6_M01_AXI_bready->set_sv_netview_offsetfromdp(7273496);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_araddr.bind(*p_6_M01_AXI_araddr);
        p_6_M01_AXI_araddr->set_sv_netview_offsetfromdp(7273552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_arlen.bind(*p_6_M01_AXI_arlen);
        p_6_M01_AXI_arlen->set_sv_netview_offsetfromdp(7273608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arsize.bind(*p_6_M01_AXI_arsize);
        p_6_M01_AXI_arsize->set_sv_netview_offsetfromdp(7273664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_arburst.bind(*p_6_M01_AXI_arburst);
        p_6_M01_AXI_arburst->set_sv_netview_offsetfromdp(7273720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arprot.bind(*p_6_M01_AXI_arprot);
        p_6_M01_AXI_arprot->set_sv_netview_offsetfromdp(7273776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arvalid.bind(*p_6_M01_AXI_arvalid);
        p_6_M01_AXI_arvalid->set_sv_netview_offsetfromdp(7273832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arready.bind(*p_6_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map)[8139].first = 3;
        (*_glb_hdl_sc_channel_map)[8139].second.push_front(p_6_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_rdata.bind(*p_6_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[8152].first = 3;
        (*_glb_hdl_sc_channel_map)[8152].second.push_front(p_6_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_rresp.bind(*p_6_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[8155].first = 3;
        (*_glb_hdl_sc_channel_map)[8155].second.push_front(p_6_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rlast.bind(*p_6_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[8153].first = 3;
        (*_glb_hdl_sc_channel_map)[8153].second.push_front(p_6_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rvalid.bind(*p_6_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[8156].first = 3;
        (*_glb_hdl_sc_channel_map)[8156].second.push_front(p_6_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rready.bind(*p_6_M01_AXI_rready);
        p_6_M01_AXI_rready->set_sv_netview_offsetfromdp(7274168);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_awid.bind(*p_6_M02_AXI_awid);
        p_6_M02_AXI_awid->set_sv_netview_offsetfromdp(7274224);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_awaddr.bind(*p_6_M02_AXI_awaddr);
        p_6_M02_AXI_awaddr->set_sv_netview_offsetfromdp(7274280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_awlen.bind(*p_6_M02_AXI_awlen);
        p_6_M02_AXI_awlen->set_sv_netview_offsetfromdp(7274336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awsize.bind(*p_6_M02_AXI_awsize);
        p_6_M02_AXI_awsize->set_sv_netview_offsetfromdp(7274392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_awburst.bind(*p_6_M02_AXI_awburst);
        p_6_M02_AXI_awburst->set_sv_netview_offsetfromdp(7274448);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_awlock.bind(*p_6_M02_AXI_awlock);
        p_6_M02_AXI_awlock->set_sv_netview_offsetfromdp(7274504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awcache.bind(*p_6_M02_AXI_awcache);
        p_6_M02_AXI_awcache->set_sv_netview_offsetfromdp(7274560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awprot.bind(*p_6_M02_AXI_awprot);
        p_6_M02_AXI_awprot->set_sv_netview_offsetfromdp(7274616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awqos.bind(*p_6_M02_AXI_awqos);
        p_6_M02_AXI_awqos->set_sv_netview_offsetfromdp(7274672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_awuser.bind(*p_6_M02_AXI_awuser);
        p_6_M02_AXI_awuser->set_sv_netview_offsetfromdp(7274728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awvalid.bind(*p_6_M02_AXI_awvalid);
        p_6_M02_AXI_awvalid->set_sv_netview_offsetfromdp(7274784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awready.bind(*p_6_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map)[8182].first = 3;
        (*_glb_hdl_sc_channel_map)[8182].second.push_front(p_6_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_wdata.bind(*p_6_M02_AXI_wdata);
        p_6_M02_AXI_wdata->set_sv_netview_offsetfromdp(7274896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M02_AXI_wstrb.bind(*p_6_M02_AXI_wstrb);
        p_6_M02_AXI_wstrb->set_sv_netview_offsetfromdp(7274952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wlast.bind(*p_6_M02_AXI_wlast);
        p_6_M02_AXI_wlast->set_sv_netview_offsetfromdp(7275008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wuser.bind(*p_6_M02_AXI_wuser);
        p_6_M02_AXI_wuser->set_sv_netview_offsetfromdp(7275064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wvalid.bind(*p_6_M02_AXI_wvalid);
        p_6_M02_AXI_wvalid->set_sv_netview_offsetfromdp(7275120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wready.bind(*p_6_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map)[8200].first = 3;
        (*_glb_hdl_sc_channel_map)[8200].second.push_front(p_6_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_bid.bind(*p_6_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map)[8186].first = 3;
        (*_glb_hdl_sc_channel_map)[8186].second.push_front(p_6_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_bresp.bind(*p_6_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[8188].first = 3;
        (*_glb_hdl_sc_channel_map)[8188].second.push_front(p_6_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_buser.bind(*p_6_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map)[8189].first = 3;
        (*_glb_hdl_sc_channel_map)[8189].second.push_front(p_6_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bvalid.bind(*p_6_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[8190].first = 3;
        (*_glb_hdl_sc_channel_map)[8190].second.push_front(p_6_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bready.bind(*p_6_M02_AXI_bready);
        p_6_M02_AXI_bready->set_sv_netview_offsetfromdp(7275456);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_arid.bind(*p_6_M02_AXI_arid);
        p_6_M02_AXI_arid->set_sv_netview_offsetfromdp(7275512);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_araddr.bind(*p_6_M02_AXI_araddr);
        p_6_M02_AXI_araddr->set_sv_netview_offsetfromdp(7275568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_arlen.bind(*p_6_M02_AXI_arlen);
        p_6_M02_AXI_arlen->set_sv_netview_offsetfromdp(7275624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arsize.bind(*p_6_M02_AXI_arsize);
        p_6_M02_AXI_arsize->set_sv_netview_offsetfromdp(7275680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_arburst.bind(*p_6_M02_AXI_arburst);
        p_6_M02_AXI_arburst->set_sv_netview_offsetfromdp(7275736);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_arlock.bind(*p_6_M02_AXI_arlock);
        p_6_M02_AXI_arlock->set_sv_netview_offsetfromdp(7275792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arcache.bind(*p_6_M02_AXI_arcache);
        p_6_M02_AXI_arcache->set_sv_netview_offsetfromdp(7275848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arprot.bind(*p_6_M02_AXI_arprot);
        p_6_M02_AXI_arprot->set_sv_netview_offsetfromdp(7275904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arqos.bind(*p_6_M02_AXI_arqos);
        p_6_M02_AXI_arqos->set_sv_netview_offsetfromdp(7275960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_aruser.bind(*p_6_M02_AXI_aruser);
        p_6_M02_AXI_aruser->set_sv_netview_offsetfromdp(7276016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arvalid.bind(*p_6_M02_AXI_arvalid);
        p_6_M02_AXI_arvalid->set_sv_netview_offsetfromdp(7276072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arready.bind(*p_6_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map)[8170].first = 3;
        (*_glb_hdl_sc_channel_map)[8170].second.push_front(p_6_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_rid.bind(*p_6_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map)[8192].first = 3;
        (*_glb_hdl_sc_channel_map)[8192].second.push_front(p_6_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_rdata.bind(*p_6_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[8191].first = 3;
        (*_glb_hdl_sc_channel_map)[8191].second.push_front(p_6_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_rresp.bind(*p_6_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[8195].first = 3;
        (*_glb_hdl_sc_channel_map)[8195].second.push_front(p_6_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rlast.bind(*p_6_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[8193].first = 3;
        (*_glb_hdl_sc_channel_map)[8193].second.push_front(p_6_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_ruser.bind(*p_6_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[8196].first = 3;
        (*_glb_hdl_sc_channel_map)[8196].second.push_front(p_6_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rvalid.bind(*p_6_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[8197].first = 3;
        (*_glb_hdl_sc_channel_map)[8197].second.push_front(p_6_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rready.bind(*p_6_M02_AXI_rready);
        p_6_M02_AXI_rready->set_sv_netview_offsetfromdp(7276520);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_awid.bind(*p_6_M03_AXI_awid);
        p_6_M03_AXI_awid->set_sv_netview_offsetfromdp(7276576);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_awaddr.bind(*p_6_M03_AXI_awaddr);
        p_6_M03_AXI_awaddr->set_sv_netview_offsetfromdp(7276632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_awlen.bind(*p_6_M03_AXI_awlen);
        p_6_M03_AXI_awlen->set_sv_netview_offsetfromdp(7276688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awsize.bind(*p_6_M03_AXI_awsize);
        p_6_M03_AXI_awsize->set_sv_netview_offsetfromdp(7276744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_awburst.bind(*p_6_M03_AXI_awburst);
        p_6_M03_AXI_awburst->set_sv_netview_offsetfromdp(7276800);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_awlock.bind(*p_6_M03_AXI_awlock);
        p_6_M03_AXI_awlock->set_sv_netview_offsetfromdp(7276856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awcache.bind(*p_6_M03_AXI_awcache);
        p_6_M03_AXI_awcache->set_sv_netview_offsetfromdp(7276912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awprot.bind(*p_6_M03_AXI_awprot);
        p_6_M03_AXI_awprot->set_sv_netview_offsetfromdp(7276968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awqos.bind(*p_6_M03_AXI_awqos);
        p_6_M03_AXI_awqos->set_sv_netview_offsetfromdp(7277024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_awuser.bind(*p_6_M03_AXI_awuser);
        p_6_M03_AXI_awuser->set_sv_netview_offsetfromdp(7277080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awvalid.bind(*p_6_M03_AXI_awvalid);
        p_6_M03_AXI_awvalid->set_sv_netview_offsetfromdp(7277136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awready.bind(*p_6_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map)[8224].first = 3;
        (*_glb_hdl_sc_channel_map)[8224].second.push_front(p_6_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_wdata.bind(*p_6_M03_AXI_wdata);
        p_6_M03_AXI_wdata->set_sv_netview_offsetfromdp(7277248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M03_AXI_wstrb.bind(*p_6_M03_AXI_wstrb);
        p_6_M03_AXI_wstrb->set_sv_netview_offsetfromdp(7277304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wlast.bind(*p_6_M03_AXI_wlast);
        p_6_M03_AXI_wlast->set_sv_netview_offsetfromdp(7277360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wuser.bind(*p_6_M03_AXI_wuser);
        p_6_M03_AXI_wuser->set_sv_netview_offsetfromdp(7277416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wvalid.bind(*p_6_M03_AXI_wvalid);
        p_6_M03_AXI_wvalid->set_sv_netview_offsetfromdp(7277472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wready.bind(*p_6_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map)[8242].first = 3;
        (*_glb_hdl_sc_channel_map)[8242].second.push_front(p_6_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_bid.bind(*p_6_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map)[8228].first = 3;
        (*_glb_hdl_sc_channel_map)[8228].second.push_front(p_6_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_bresp.bind(*p_6_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[8230].first = 3;
        (*_glb_hdl_sc_channel_map)[8230].second.push_front(p_6_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_buser.bind(*p_6_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map)[8231].first = 3;
        (*_glb_hdl_sc_channel_map)[8231].second.push_front(p_6_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bvalid.bind(*p_6_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[8232].first = 3;
        (*_glb_hdl_sc_channel_map)[8232].second.push_front(p_6_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bready.bind(*p_6_M03_AXI_bready);
        p_6_M03_AXI_bready->set_sv_netview_offsetfromdp(7277808);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_arid.bind(*p_6_M03_AXI_arid);
        p_6_M03_AXI_arid->set_sv_netview_offsetfromdp(7277864);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_araddr.bind(*p_6_M03_AXI_araddr);
        p_6_M03_AXI_araddr->set_sv_netview_offsetfromdp(7277920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_arlen.bind(*p_6_M03_AXI_arlen);
        p_6_M03_AXI_arlen->set_sv_netview_offsetfromdp(7277976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arsize.bind(*p_6_M03_AXI_arsize);
        p_6_M03_AXI_arsize->set_sv_netview_offsetfromdp(7278032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_arburst.bind(*p_6_M03_AXI_arburst);
        p_6_M03_AXI_arburst->set_sv_netview_offsetfromdp(7278088);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_arlock.bind(*p_6_M03_AXI_arlock);
        p_6_M03_AXI_arlock->set_sv_netview_offsetfromdp(7278144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arcache.bind(*p_6_M03_AXI_arcache);
        p_6_M03_AXI_arcache->set_sv_netview_offsetfromdp(7278200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arprot.bind(*p_6_M03_AXI_arprot);
        p_6_M03_AXI_arprot->set_sv_netview_offsetfromdp(7278256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arqos.bind(*p_6_M03_AXI_arqos);
        p_6_M03_AXI_arqos->set_sv_netview_offsetfromdp(7278312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_aruser.bind(*p_6_M03_AXI_aruser);
        p_6_M03_AXI_aruser->set_sv_netview_offsetfromdp(7278368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arvalid.bind(*p_6_M03_AXI_arvalid);
        p_6_M03_AXI_arvalid->set_sv_netview_offsetfromdp(7278424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arready.bind(*p_6_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map)[8212].first = 3;
        (*_glb_hdl_sc_channel_map)[8212].second.push_front(p_6_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_rid.bind(*p_6_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map)[8234].first = 3;
        (*_glb_hdl_sc_channel_map)[8234].second.push_front(p_6_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_rdata.bind(*p_6_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[8233].first = 3;
        (*_glb_hdl_sc_channel_map)[8233].second.push_front(p_6_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_rresp.bind(*p_6_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[8237].first = 3;
        (*_glb_hdl_sc_channel_map)[8237].second.push_front(p_6_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rlast.bind(*p_6_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[8235].first = 3;
        (*_glb_hdl_sc_channel_map)[8235].second.push_front(p_6_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_ruser.bind(*p_6_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[8238].first = 3;
        (*_glb_hdl_sc_channel_map)[8238].second.push_front(p_6_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rvalid.bind(*p_6_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[8239].first = 3;
        (*_glb_hdl_sc_channel_map)[8239].second.push_front(p_6_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rready.bind(*p_6_M03_AXI_rready);
        p_6_M03_AXI_rready->set_sv_netview_offsetfromdp(7278872);
        sc_inst_7 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_7->xsim_set_dbg_index(30);
        sc_inst_8 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_8->xsim_set_dbg_index(31);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[8524].first = 1;
        (*_glb_hdl_sc_channel_map)[8524].second.push_front(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[8497].first = 3;
        (*_glb_hdl_sc_channel_map)[8497].second.push_front(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[8494].first = 3;
        (*_glb_hdl_sc_channel_map)[8494].second.push_front(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[8498].first = 3;
        (*_glb_hdl_sc_channel_map)[8498].second.push_front(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[8503].first = 3;
        (*_glb_hdl_sc_channel_map)[8503].second.push_front(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[8495].first = 3;
        (*_glb_hdl_sc_channel_map)[8495].second.push_front(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[8499].first = 1;
        (*_glb_hdl_sc_channel_map)[8499].second.push_front(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[8496].first = 3;
        (*_glb_hdl_sc_channel_map)[8496].second.push_front(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[8500].first = 3;
        (*_glb_hdl_sc_channel_map)[8500].second.push_front(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1269].first = 3;
        (*_glb_hdl_sc_channel_map)[1269].second.push_front(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[8501].first = 3;
        (*_glb_hdl_sc_channel_map)[8501].second.push_front(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[8504].first = 3;
        (*_glb_hdl_sc_channel_map)[8504].second.push_front(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[8505].first = 1;
        (*_glb_hdl_sc_channel_map)[8505].second.push_front(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7279752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[8518].first = 3;
        (*_glb_hdl_sc_channel_map)[8518].second.push_front(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[8521].first = 3;
        (*_glb_hdl_sc_channel_map)[8521].second.push_front(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[8519].first = 1;
        (*_glb_hdl_sc_channel_map)[8519].second.push_front(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[8522].first = 3;
        (*_glb_hdl_sc_channel_map)[8522].second.push_front(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[8523].first = 1;
        (*_glb_hdl_sc_channel_map)[8523].second.push_front(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7280088);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7280144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7280200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7280256);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7280312);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[8507].first = 1;
        (*_glb_hdl_sc_channel_map)[8507].second.push_front(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[8485].first = 3;
        (*_glb_hdl_sc_channel_map)[8485].second.push_front(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[8481].first = 3;
        (*_glb_hdl_sc_channel_map)[8481].second.push_front(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[8486].first = 3;
        (*_glb_hdl_sc_channel_map)[8486].second.push_front(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[8491].first = 3;
        (*_glb_hdl_sc_channel_map)[8491].second.push_front(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[8482].first = 3;
        (*_glb_hdl_sc_channel_map)[8482].second.push_front(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[8487].first = 1;
        (*_glb_hdl_sc_channel_map)[8487].second.push_front(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[8483].first = 3;
        (*_glb_hdl_sc_channel_map)[8483].second.push_front(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[8488].first = 3;
        (*_glb_hdl_sc_channel_map)[8488].second.push_front(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1270].first = 3;
        (*_glb_hdl_sc_channel_map)[1270].second.push_front(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[8489].first = 3;
        (*_glb_hdl_sc_channel_map)[8489].second.push_front(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[8492].first = 3;
        (*_glb_hdl_sc_channel_map)[8492].second.push_front(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[8493].first = 1;
        (*_glb_hdl_sc_channel_map)[8493].second.push_front(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7281096);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7281152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7281208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7281264);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7281320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7281376);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7281432);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[8514].first = 1;
        (*_glb_hdl_sc_channel_map)[8514].second.push_front(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[8480].first = 1;
        (*_glb_hdl_sc_channel_map)[8480].second.push_front(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[8484].first = 1;
        (*_glb_hdl_sc_channel_map)[8484].second.push_front(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1253].first = 3;
        (*_glb_hdl_sc_channel_map)[1253].second.push_front(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1256].first = 3;
        (*_glb_hdl_sc_channel_map)[1256].second.push_front(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1252].first = 3;
        (*_glb_hdl_sc_channel_map)[1252].second.push_front(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1247].first = 3;
        (*_glb_hdl_sc_channel_map)[1247].second.push_front(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1255].first = 3;
        (*_glb_hdl_sc_channel_map)[1255].second.push_front(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1251].first = 1;
        (*_glb_hdl_sc_channel_map)[1251].second.push_front(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1254].first = 3;
        (*_glb_hdl_sc_channel_map)[1254].second.push_front(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1250].first = 3;
        (*_glb_hdl_sc_channel_map)[1250].second.push_front(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1248].first = 3;
        (*_glb_hdl_sc_channel_map)[1248].second.push_front(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1249].first = 3;
        (*_glb_hdl_sc_channel_map)[1249].second.push_front(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1246].first = 3;
        (*_glb_hdl_sc_channel_map)[1246].second.push_front(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1245].first = 1;
        (*_glb_hdl_sc_channel_map)[1245].second.push_front(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7282328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1242].first = 3;
        (*_glb_hdl_sc_channel_map)[1242].second.push_front(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1240].first = 3;
        (*_glb_hdl_sc_channel_map)[1240].second.push_front(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1241].first = 1;
        (*_glb_hdl_sc_channel_map)[1241].second.push_front(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1239].first = 3;
        (*_glb_hdl_sc_channel_map)[1239].second.push_front(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1238].first = 1;
        (*_glb_hdl_sc_channel_map)[1238].second.push_front(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7282664);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7282720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7282776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7282832);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7282888);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1244].first = 1;
        (*_glb_hdl_sc_channel_map)[1244].second.push_front(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1265].first = 3;
        (*_glb_hdl_sc_channel_map)[1265].second.push_front(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1268].first = 3;
        (*_glb_hdl_sc_channel_map)[1268].second.push_front(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1264].first = 3;
        (*_glb_hdl_sc_channel_map)[1264].second.push_front(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1259].first = 3;
        (*_glb_hdl_sc_channel_map)[1259].second.push_front(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1267].first = 3;
        (*_glb_hdl_sc_channel_map)[1267].second.push_front(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1263].first = 1;
        (*_glb_hdl_sc_channel_map)[1263].second.push_front(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1266].first = 3;
        (*_glb_hdl_sc_channel_map)[1266].second.push_front(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1262].first = 3;
        (*_glb_hdl_sc_channel_map)[1262].second.push_front(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1260].first = 3;
        (*_glb_hdl_sc_channel_map)[1260].second.push_front(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1261].first = 3;
        (*_glb_hdl_sc_channel_map)[1261].second.push_front(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1258].first = 3;
        (*_glb_hdl_sc_channel_map)[1258].second.push_front(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1257].first = 1;
        (*_glb_hdl_sc_channel_map)[1257].second.push_front(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7283672);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7283728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7283784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7283840);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7283896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7283952);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7284008);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1243].first = 1;
        (*_glb_hdl_sc_channel_map)[1243].second.push_front(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8525].first = 1;
        (*_glb_hdl_sc_channel_map)[8525].second.push_front(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8526].first = 1;
        (*_glb_hdl_sc_channel_map)[8526].second.push_front(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_9->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[8584].first = 1;
        (*_glb_hdl_sc_channel_map)[8584].second.push_front(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[8557].first = 3;
        (*_glb_hdl_sc_channel_map)[8557].second.push_front(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[8554].first = 3;
        (*_glb_hdl_sc_channel_map)[8554].second.push_front(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[8558].first = 3;
        (*_glb_hdl_sc_channel_map)[8558].second.push_front(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[8563].first = 3;
        (*_glb_hdl_sc_channel_map)[8563].second.push_front(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[8555].first = 3;
        (*_glb_hdl_sc_channel_map)[8555].second.push_front(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[8559].first = 1;
        (*_glb_hdl_sc_channel_map)[8559].second.push_front(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[8556].first = 3;
        (*_glb_hdl_sc_channel_map)[8556].second.push_front(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[8560].first = 3;
        (*_glb_hdl_sc_channel_map)[8560].second.push_front(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1236].first = 3;
        (*_glb_hdl_sc_channel_map)[1236].second.push_front(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[8561].first = 3;
        (*_glb_hdl_sc_channel_map)[8561].second.push_front(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[8564].first = 3;
        (*_glb_hdl_sc_channel_map)[8564].second.push_front(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[8565].first = 1;
        (*_glb_hdl_sc_channel_map)[8565].second.push_front(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7285008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[8578].first = 3;
        (*_glb_hdl_sc_channel_map)[8578].second.push_front(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[8581].first = 3;
        (*_glb_hdl_sc_channel_map)[8581].second.push_front(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[8579].first = 1;
        (*_glb_hdl_sc_channel_map)[8579].second.push_front(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[8582].first = 3;
        (*_glb_hdl_sc_channel_map)[8582].second.push_front(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[8583].first = 1;
        (*_glb_hdl_sc_channel_map)[8583].second.push_front(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7285344);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7285400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7285456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7285512);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7285568);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[8567].first = 1;
        (*_glb_hdl_sc_channel_map)[8567].second.push_front(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[8545].first = 3;
        (*_glb_hdl_sc_channel_map)[8545].second.push_front(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[8541].first = 3;
        (*_glb_hdl_sc_channel_map)[8541].second.push_front(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[8546].first = 3;
        (*_glb_hdl_sc_channel_map)[8546].second.push_front(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[8551].first = 3;
        (*_glb_hdl_sc_channel_map)[8551].second.push_front(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[8542].first = 3;
        (*_glb_hdl_sc_channel_map)[8542].second.push_front(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[8547].first = 1;
        (*_glb_hdl_sc_channel_map)[8547].second.push_front(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[8543].first = 3;
        (*_glb_hdl_sc_channel_map)[8543].second.push_front(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[8548].first = 3;
        (*_glb_hdl_sc_channel_map)[8548].second.push_front(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1237].first = 3;
        (*_glb_hdl_sc_channel_map)[1237].second.push_front(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[8549].first = 3;
        (*_glb_hdl_sc_channel_map)[8549].second.push_front(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[8552].first = 3;
        (*_glb_hdl_sc_channel_map)[8552].second.push_front(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[8553].first = 1;
        (*_glb_hdl_sc_channel_map)[8553].second.push_front(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7286352);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7286408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7286464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7286520);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7286576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7286632);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7286688);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[8574].first = 1;
        (*_glb_hdl_sc_channel_map)[8574].second.push_front(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[8540].first = 1;
        (*_glb_hdl_sc_channel_map)[8540].second.push_front(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[8544].first = 1;
        (*_glb_hdl_sc_channel_map)[8544].second.push_front(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1220].first = 3;
        (*_glb_hdl_sc_channel_map)[1220].second.push_front(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1223].first = 3;
        (*_glb_hdl_sc_channel_map)[1223].second.push_front(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1219].first = 3;
        (*_glb_hdl_sc_channel_map)[1219].second.push_front(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1214].first = 3;
        (*_glb_hdl_sc_channel_map)[1214].second.push_front(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1222].first = 3;
        (*_glb_hdl_sc_channel_map)[1222].second.push_front(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1218].first = 1;
        (*_glb_hdl_sc_channel_map)[1218].second.push_front(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1221].first = 3;
        (*_glb_hdl_sc_channel_map)[1221].second.push_front(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1217].first = 3;
        (*_glb_hdl_sc_channel_map)[1217].second.push_front(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1215].first = 3;
        (*_glb_hdl_sc_channel_map)[1215].second.push_front(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1216].first = 3;
        (*_glb_hdl_sc_channel_map)[1216].second.push_front(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1213].first = 3;
        (*_glb_hdl_sc_channel_map)[1213].second.push_front(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1212].first = 1;
        (*_glb_hdl_sc_channel_map)[1212].second.push_front(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7287584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1209].first = 3;
        (*_glb_hdl_sc_channel_map)[1209].second.push_front(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1207].first = 3;
        (*_glb_hdl_sc_channel_map)[1207].second.push_front(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1208].first = 1;
        (*_glb_hdl_sc_channel_map)[1208].second.push_front(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1206].first = 3;
        (*_glb_hdl_sc_channel_map)[1206].second.push_front(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1205].first = 1;
        (*_glb_hdl_sc_channel_map)[1205].second.push_front(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7287920);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7287976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7288032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7288088);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7288144);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1211].first = 1;
        (*_glb_hdl_sc_channel_map)[1211].second.push_front(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1232].first = 3;
        (*_glb_hdl_sc_channel_map)[1232].second.push_front(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1235].first = 3;
        (*_glb_hdl_sc_channel_map)[1235].second.push_front(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1231].first = 3;
        (*_glb_hdl_sc_channel_map)[1231].second.push_front(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1226].first = 3;
        (*_glb_hdl_sc_channel_map)[1226].second.push_front(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1234].first = 3;
        (*_glb_hdl_sc_channel_map)[1234].second.push_front(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1230].first = 1;
        (*_glb_hdl_sc_channel_map)[1230].second.push_front(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1233].first = 3;
        (*_glb_hdl_sc_channel_map)[1233].second.push_front(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1229].first = 3;
        (*_glb_hdl_sc_channel_map)[1229].second.push_front(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1227].first = 3;
        (*_glb_hdl_sc_channel_map)[1227].second.push_front(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1228].first = 3;
        (*_glb_hdl_sc_channel_map)[1228].second.push_front(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1225].first = 3;
        (*_glb_hdl_sc_channel_map)[1225].second.push_front(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1224].first = 1;
        (*_glb_hdl_sc_channel_map)[1224].second.push_front(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7288928);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7288984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7289040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7289096);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7289152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7289208);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7289264);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1210].first = 1;
        (*_glb_hdl_sc_channel_map)[1210].second.push_front(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8585].first = 1;
        (*_glb_hdl_sc_channel_map)[8585].second.push_front(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8586].first = 1;
        (*_glb_hdl_sc_channel_map)[8586].second.push_front(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_10->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_10_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ui_clk.bind(*p_10_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[8644].first = 1;
        (*_glb_hdl_sc_channel_map)[8644].second.push_front(p_10_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_awid.bind(*p_10_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[8617].first = 3;
        (*_glb_hdl_sc_channel_map)[8617].second.push_front(p_10_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_awaddr.bind(*p_10_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[8614].first = 3;
        (*_glb_hdl_sc_channel_map)[8614].second.push_front(p_10_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_awlen.bind(*p_10_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[8618].first = 3;
        (*_glb_hdl_sc_channel_map)[8618].second.push_front(p_10_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awsize.bind(*p_10_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[8623].first = 3;
        (*_glb_hdl_sc_channel_map)[8623].second.push_front(p_10_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_awburst.bind(*p_10_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[8615].first = 3;
        (*_glb_hdl_sc_channel_map)[8615].second.push_front(p_10_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awlock.bind(*p_10_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[8619].first = 1;
        (*_glb_hdl_sc_channel_map)[8619].second.push_front(p_10_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awcache.bind(*p_10_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[8616].first = 3;
        (*_glb_hdl_sc_channel_map)[8616].second.push_front(p_10_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awprot.bind(*p_10_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[8620].first = 3;
        (*_glb_hdl_sc_channel_map)[8620].second.push_front(p_10_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awregion.bind(*p_10_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1203].first = 3;
        (*_glb_hdl_sc_channel_map)[1203].second.push_front(p_10_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awqos.bind(*p_10_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[8621].first = 3;
        (*_glb_hdl_sc_channel_map)[8621].second.push_front(p_10_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_awuser.bind(*p_10_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[8624].first = 3;
        (*_glb_hdl_sc_channel_map)[8624].second.push_front(p_10_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awvalid.bind(*p_10_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[8625].first = 1;
        (*_glb_hdl_sc_channel_map)[8625].second.push_front(p_10_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awready.bind(*p_10_c0_ddr_saxi_awready);
        p_10_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7290264);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_wdata.bind(*p_10_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[8638].first = 3;
        (*_glb_hdl_sc_channel_map)[8638].second.push_front(p_10_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->c0_ddr_saxi_wstrb.bind(*p_10_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[8641].first = 3;
        (*_glb_hdl_sc_channel_map)[8641].second.push_front(p_10_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wlast.bind(*p_10_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[8639].first = 1;
        (*_glb_hdl_sc_channel_map)[8639].second.push_front(p_10_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_wuser.bind(*p_10_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[8642].first = 3;
        (*_glb_hdl_sc_channel_map)[8642].second.push_front(p_10_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wvalid.bind(*p_10_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[8643].first = 1;
        (*_glb_hdl_sc_channel_map)[8643].second.push_front(p_10_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wready.bind(*p_10_c0_ddr_saxi_wready);
        p_10_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7290600);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_bid.bind(*p_10_c0_ddr_saxi_bid);
        p_10_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7290656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_bresp.bind(*p_10_c0_ddr_saxi_bresp);
        p_10_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7290712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_buser.bind(*p_10_c0_ddr_saxi_buser);
        p_10_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7290768);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bvalid.bind(*p_10_c0_ddr_saxi_bvalid);
        p_10_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7290824);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bready.bind(*p_10_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[8627].first = 1;
        (*_glb_hdl_sc_channel_map)[8627].second.push_front(p_10_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_arid.bind(*p_10_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[8605].first = 3;
        (*_glb_hdl_sc_channel_map)[8605].second.push_front(p_10_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_araddr.bind(*p_10_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[8601].first = 3;
        (*_glb_hdl_sc_channel_map)[8601].second.push_front(p_10_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_arlen.bind(*p_10_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[8606].first = 3;
        (*_glb_hdl_sc_channel_map)[8606].second.push_front(p_10_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arsize.bind(*p_10_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[8611].first = 3;
        (*_glb_hdl_sc_channel_map)[8611].second.push_front(p_10_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_arburst.bind(*p_10_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[8602].first = 3;
        (*_glb_hdl_sc_channel_map)[8602].second.push_front(p_10_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arlock.bind(*p_10_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[8607].first = 1;
        (*_glb_hdl_sc_channel_map)[8607].second.push_front(p_10_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arcache.bind(*p_10_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[8603].first = 3;
        (*_glb_hdl_sc_channel_map)[8603].second.push_front(p_10_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arprot.bind(*p_10_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[8608].first = 3;
        (*_glb_hdl_sc_channel_map)[8608].second.push_front(p_10_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arregion.bind(*p_10_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1204].first = 3;
        (*_glb_hdl_sc_channel_map)[1204].second.push_front(p_10_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arqos.bind(*p_10_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[8609].first = 3;
        (*_glb_hdl_sc_channel_map)[8609].second.push_front(p_10_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_aruser.bind(*p_10_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[8612].first = 3;
        (*_glb_hdl_sc_channel_map)[8612].second.push_front(p_10_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arvalid.bind(*p_10_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[8613].first = 1;
        (*_glb_hdl_sc_channel_map)[8613].second.push_front(p_10_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arready.bind(*p_10_c0_ddr_saxi_arready);
        p_10_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7291608);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_rid.bind(*p_10_c0_ddr_saxi_rid);
        p_10_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7291664);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_rdata.bind(*p_10_c0_ddr_saxi_rdata);
        p_10_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7291720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_rresp.bind(*p_10_c0_ddr_saxi_rresp);
        p_10_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7291776);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rlast.bind(*p_10_c0_ddr_saxi_rlast);
        p_10_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7291832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_ruser.bind(*p_10_c0_ddr_saxi_ruser);
        p_10_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7291888);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rvalid.bind(*p_10_c0_ddr_saxi_rvalid);
        p_10_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7291944);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rready.bind(*p_10_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[8634].first = 1;
        (*_glb_hdl_sc_channel_map)[8634].second.push_front(p_10_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aclk.bind(*p_10_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[8600].first = 1;
        (*_glb_hdl_sc_channel_map)[8600].second.push_front(p_10_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aresetn.bind(*p_10_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[8604].first = 1;
        (*_glb_hdl_sc_channel_map)[8604].second.push_front(p_10_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_awid.bind(*p_10_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1187].first = 3;
        (*_glb_hdl_sc_channel_map)[1187].second.push_front(p_10_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awaddr.bind(*p_10_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1190].first = 3;
        (*_glb_hdl_sc_channel_map)[1190].second.push_front(p_10_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_awlen.bind(*p_10_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1186].first = 3;
        (*_glb_hdl_sc_channel_map)[1186].second.push_front(p_10_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awsize.bind(*p_10_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1181].first = 3;
        (*_glb_hdl_sc_channel_map)[1181].second.push_front(p_10_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_awburst.bind(*p_10_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1189].first = 3;
        (*_glb_hdl_sc_channel_map)[1189].second.push_front(p_10_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awlock.bind(*p_10_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1185].first = 1;
        (*_glb_hdl_sc_channel_map)[1185].second.push_front(p_10_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awcache.bind(*p_10_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1188].first = 3;
        (*_glb_hdl_sc_channel_map)[1188].second.push_front(p_10_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awprot.bind(*p_10_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1184].first = 3;
        (*_glb_hdl_sc_channel_map)[1184].second.push_front(p_10_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awregion.bind(*p_10_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1182].first = 3;
        (*_glb_hdl_sc_channel_map)[1182].second.push_front(p_10_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awqos.bind(*p_10_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1183].first = 3;
        (*_glb_hdl_sc_channel_map)[1183].second.push_front(p_10_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awuser.bind(*p_10_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1180].first = 3;
        (*_glb_hdl_sc_channel_map)[1180].second.push_front(p_10_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awvalid.bind(*p_10_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1179].first = 1;
        (*_glb_hdl_sc_channel_map)[1179].second.push_front(p_10_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awready.bind(*p_10_s_xdma_axi_awready);
        p_10_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7292840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_wdata.bind(*p_10_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1176].first = 3;
        (*_glb_hdl_sc_channel_map)[1176].second.push_front(p_10_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_wstrb.bind(*p_10_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1174].first = 3;
        (*_glb_hdl_sc_channel_map)[1174].second.push_front(p_10_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wlast.bind(*p_10_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1175].first = 1;
        (*_glb_hdl_sc_channel_map)[1175].second.push_front(p_10_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_wuser.bind(*p_10_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1173].first = 3;
        (*_glb_hdl_sc_channel_map)[1173].second.push_front(p_10_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wvalid.bind(*p_10_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1172].first = 1;
        (*_glb_hdl_sc_channel_map)[1172].second.push_front(p_10_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wready.bind(*p_10_s_xdma_axi_wready);
        p_10_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7293176);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_bid.bind(*p_10_s_xdma_axi_bid);
        p_10_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7293232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_bresp.bind(*p_10_s_xdma_axi_bresp);
        p_10_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7293288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_buser.bind(*p_10_s_xdma_axi_buser);
        p_10_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7293344);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bvalid.bind(*p_10_s_xdma_axi_bvalid);
        p_10_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7293400);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bready.bind(*p_10_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1178].first = 1;
        (*_glb_hdl_sc_channel_map)[1178].second.push_front(p_10_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_arid.bind(*p_10_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1199].first = 3;
        (*_glb_hdl_sc_channel_map)[1199].second.push_front(p_10_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_araddr.bind(*p_10_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1202].first = 3;
        (*_glb_hdl_sc_channel_map)[1202].second.push_front(p_10_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_arlen.bind(*p_10_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1198].first = 3;
        (*_glb_hdl_sc_channel_map)[1198].second.push_front(p_10_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arsize.bind(*p_10_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1193].first = 3;
        (*_glb_hdl_sc_channel_map)[1193].second.push_front(p_10_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_arburst.bind(*p_10_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1201].first = 3;
        (*_glb_hdl_sc_channel_map)[1201].second.push_front(p_10_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arlock.bind(*p_10_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1197].first = 1;
        (*_glb_hdl_sc_channel_map)[1197].second.push_front(p_10_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arcache.bind(*p_10_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1200].first = 3;
        (*_glb_hdl_sc_channel_map)[1200].second.push_front(p_10_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arprot.bind(*p_10_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1196].first = 3;
        (*_glb_hdl_sc_channel_map)[1196].second.push_front(p_10_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arregion.bind(*p_10_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1194].first = 3;
        (*_glb_hdl_sc_channel_map)[1194].second.push_front(p_10_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arqos.bind(*p_10_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1195].first = 3;
        (*_glb_hdl_sc_channel_map)[1195].second.push_front(p_10_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_aruser.bind(*p_10_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1192].first = 3;
        (*_glb_hdl_sc_channel_map)[1192].second.push_front(p_10_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arvalid.bind(*p_10_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1191].first = 1;
        (*_glb_hdl_sc_channel_map)[1191].second.push_front(p_10_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arready.bind(*p_10_s_xdma_axi_arready);
        p_10_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7294184);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_rid.bind(*p_10_s_xdma_axi_rid);
        p_10_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7294240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_rdata.bind(*p_10_s_xdma_axi_rdata);
        p_10_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7294296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_rresp.bind(*p_10_s_xdma_axi_rresp);
        p_10_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7294352);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rlast.bind(*p_10_s_xdma_axi_rlast);
        p_10_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7294408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_ruser.bind(*p_10_s_xdma_axi_ruser);
        p_10_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7294464);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rvalid.bind(*p_10_s_xdma_axi_rvalid);
        p_10_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7294520);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rready.bind(*p_10_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1177].first = 1;
        (*_glb_hdl_sc_channel_map)[1177].second.push_front(p_10_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aclk.bind(*p_10_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8645].first = 1;
        (*_glb_hdl_sc_channel_map)[8645].second.push_front(p_10_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aresetn.bind(*p_10_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8646].first = 1;
        (*_glb_hdl_sc_channel_map)[8646].second.push_front(p_10_s_xdma_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_11->xsim_set_dbg_index(688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[8856].first = 3;
        (*_glb_hdl_sc_channel_map)[8856].second.push_front(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[8794].first = 3;
        (*_glb_hdl_sc_channel_map)[8794].second.push_front(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[8857].first = 3;
        (*_glb_hdl_sc_channel_map)[8857].second.push_front(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[8862].first = 3;
        (*_glb_hdl_sc_channel_map)[8862].second.push_front(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[8854].first = 3;
        (*_glb_hdl_sc_channel_map)[8854].second.push_front(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[8858].first = 1;
        (*_glb_hdl_sc_channel_map)[8858].second.push_front(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[8855].first = 3;
        (*_glb_hdl_sc_channel_map)[8855].second.push_front(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[8859].first = 3;
        (*_glb_hdl_sc_channel_map)[8859].second.push_front(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[8793].first = 3;
        (*_glb_hdl_sc_channel_map)[8793].second.push_front(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[8860].first = 3;
        (*_glb_hdl_sc_channel_map)[8860].second.push_front(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[8863].first = 3;
        (*_glb_hdl_sc_channel_map)[8863].second.push_front(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[8864].first = 1;
        (*_glb_hdl_sc_channel_map)[8864].second.push_front(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(7355216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[8877].first = 3;
        (*_glb_hdl_sc_channel_map)[8877].second.push_front(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[8880].first = 3;
        (*_glb_hdl_sc_channel_map)[8880].second.push_front(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[8878].first = 1;
        (*_glb_hdl_sc_channel_map)[8878].second.push_front(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[8881].first = 3;
        (*_glb_hdl_sc_channel_map)[8881].second.push_front(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[8882].first = 1;
        (*_glb_hdl_sc_channel_map)[8882].second.push_front(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(7355552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(7355608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(7355664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(7355720);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(7355776);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[8866].first = 1;
        (*_glb_hdl_sc_channel_map)[8866].second.push_front(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[8845].first = 3;
        (*_glb_hdl_sc_channel_map)[8845].second.push_front(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[8796].first = 3;
        (*_glb_hdl_sc_channel_map)[8796].second.push_front(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[8846].first = 3;
        (*_glb_hdl_sc_channel_map)[8846].second.push_front(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[8851].first = 3;
        (*_glb_hdl_sc_channel_map)[8851].second.push_front(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[8842].first = 3;
        (*_glb_hdl_sc_channel_map)[8842].second.push_front(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[8847].first = 1;
        (*_glb_hdl_sc_channel_map)[8847].second.push_front(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[8843].first = 3;
        (*_glb_hdl_sc_channel_map)[8843].second.push_front(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[8848].first = 3;
        (*_glb_hdl_sc_channel_map)[8848].second.push_front(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[8795].first = 3;
        (*_glb_hdl_sc_channel_map)[8795].second.push_front(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[8849].first = 3;
        (*_glb_hdl_sc_channel_map)[8849].second.push_front(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[8852].first = 3;
        (*_glb_hdl_sc_channel_map)[8852].second.push_front(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[8853].first = 1;
        (*_glb_hdl_sc_channel_map)[8853].second.push_front(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(7356560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(7356616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(7356672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(7356728);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(7356784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(7356840);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(7356896);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[8873].first = 1;
        (*_glb_hdl_sc_channel_map)[8873].second.push_front(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8841].first = 1;
        (*_glb_hdl_sc_channel_map)[8841].second.push_front(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8844].first = 1;
        (*_glb_hdl_sc_channel_map)[8844].second.push_front(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(7357120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(7357176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(7357232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(7357288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(7357344);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(7357400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(7357456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(7357512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(7357568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(7357624);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(7357680);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[8819].first = 1;
        (*_glb_hdl_sc_channel_map)[8819].second.push_front(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(7357792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(7357848);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(7357904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(7357960);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(7358016);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[8837].first = 1;
        (*_glb_hdl_sc_channel_map)[8837].second.push_front(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[8823].first = 3;
        (*_glb_hdl_sc_channel_map)[8823].second.push_front(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[8825].first = 3;
        (*_glb_hdl_sc_channel_map)[8825].second.push_front(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[8826].first = 3;
        (*_glb_hdl_sc_channel_map)[8826].second.push_front(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[8827].first = 1;
        (*_glb_hdl_sc_channel_map)[8827].second.push_front(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(7358352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(7358408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(7358464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(7358520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(7358576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(7358632);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(7358688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(7358744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(7358800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(7358856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(7358912);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(7358968);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[8807].first = 1;
        (*_glb_hdl_sc_channel_map)[8807].second.push_front(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[8829].first = 3;
        (*_glb_hdl_sc_channel_map)[8829].second.push_front(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[8828].first = 3;
        (*_glb_hdl_sc_channel_map)[8828].second.push_front(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[8832].first = 3;
        (*_glb_hdl_sc_channel_map)[8832].second.push_front(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[8830].first = 1;
        (*_glb_hdl_sc_channel_map)[8830].second.push_front(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[8833].first = 3;
        (*_glb_hdl_sc_channel_map)[8833].second.push_front(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[8834].first = 1;
        (*_glb_hdl_sc_channel_map)[8834].second.push_front(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(7359416);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8797].first = 1;
        (*_glb_hdl_sc_channel_map)[8797].second.push_front(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8801].first = 1;
        (*_glb_hdl_sc_channel_map)[8801].second.push_front(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_12->xsim_set_dbg_index(802);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[11483].first = 3;
        (*_glb_hdl_sc_channel_map)[11483].second.push_front(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[11421].first = 3;
        (*_glb_hdl_sc_channel_map)[11421].second.push_front(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[11484].first = 3;
        (*_glb_hdl_sc_channel_map)[11484].second.push_front(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[11489].first = 3;
        (*_glb_hdl_sc_channel_map)[11489].second.push_front(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[11481].first = 3;
        (*_glb_hdl_sc_channel_map)[11481].second.push_front(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[11485].first = 1;
        (*_glb_hdl_sc_channel_map)[11485].second.push_front(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[11482].first = 3;
        (*_glb_hdl_sc_channel_map)[11482].second.push_front(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[11486].first = 3;
        (*_glb_hdl_sc_channel_map)[11486].second.push_front(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[11420].first = 3;
        (*_glb_hdl_sc_channel_map)[11420].second.push_front(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[11487].first = 3;
        (*_glb_hdl_sc_channel_map)[11487].second.push_front(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[11490].first = 3;
        (*_glb_hdl_sc_channel_map)[11490].second.push_front(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[11491].first = 1;
        (*_glb_hdl_sc_channel_map)[11491].second.push_front(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(8001472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[11504].first = 3;
        (*_glb_hdl_sc_channel_map)[11504].second.push_front(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[11507].first = 3;
        (*_glb_hdl_sc_channel_map)[11507].second.push_front(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[11505].first = 1;
        (*_glb_hdl_sc_channel_map)[11505].second.push_front(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[11508].first = 3;
        (*_glb_hdl_sc_channel_map)[11508].second.push_front(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[11509].first = 1;
        (*_glb_hdl_sc_channel_map)[11509].second.push_front(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(8001808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(8001864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(8001920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(8001976);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(8002032);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[11493].first = 1;
        (*_glb_hdl_sc_channel_map)[11493].second.push_front(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[11472].first = 3;
        (*_glb_hdl_sc_channel_map)[11472].second.push_front(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[11423].first = 3;
        (*_glb_hdl_sc_channel_map)[11423].second.push_front(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[11473].first = 3;
        (*_glb_hdl_sc_channel_map)[11473].second.push_front(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[11478].first = 3;
        (*_glb_hdl_sc_channel_map)[11478].second.push_front(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[11469].first = 3;
        (*_glb_hdl_sc_channel_map)[11469].second.push_front(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[11474].first = 1;
        (*_glb_hdl_sc_channel_map)[11474].second.push_front(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[11470].first = 3;
        (*_glb_hdl_sc_channel_map)[11470].second.push_front(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[11475].first = 3;
        (*_glb_hdl_sc_channel_map)[11475].second.push_front(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[11422].first = 3;
        (*_glb_hdl_sc_channel_map)[11422].second.push_front(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[11476].first = 3;
        (*_glb_hdl_sc_channel_map)[11476].second.push_front(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[11479].first = 3;
        (*_glb_hdl_sc_channel_map)[11479].second.push_front(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[11480].first = 1;
        (*_glb_hdl_sc_channel_map)[11480].second.push_front(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(8002816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(8002872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(8002928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(8002984);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(8003040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(8003096);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(8003152);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[11500].first = 1;
        (*_glb_hdl_sc_channel_map)[11500].second.push_front(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11468].first = 1;
        (*_glb_hdl_sc_channel_map)[11468].second.push_front(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11471].first = 1;
        (*_glb_hdl_sc_channel_map)[11471].second.push_front(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(8003376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(8003432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(8003488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(8003544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(8003600);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(8003656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(8003712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(8003768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(8003824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(8003880);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(8003936);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[11446].first = 1;
        (*_glb_hdl_sc_channel_map)[11446].second.push_front(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(8004048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(8004104);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(8004160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(8004216);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(8004272);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[11464].first = 1;
        (*_glb_hdl_sc_channel_map)[11464].second.push_front(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[11450].first = 3;
        (*_glb_hdl_sc_channel_map)[11450].second.push_front(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[11452].first = 3;
        (*_glb_hdl_sc_channel_map)[11452].second.push_front(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[11453].first = 3;
        (*_glb_hdl_sc_channel_map)[11453].second.push_front(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[11454].first = 1;
        (*_glb_hdl_sc_channel_map)[11454].second.push_front(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(8004608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(8004664);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(8004720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(8004776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(8004832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(8004888);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(8004944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(8005000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(8005056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(8005112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(8005168);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(8005224);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[11434].first = 1;
        (*_glb_hdl_sc_channel_map)[11434].second.push_front(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[11456].first = 3;
        (*_glb_hdl_sc_channel_map)[11456].second.push_front(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[11455].first = 3;
        (*_glb_hdl_sc_channel_map)[11455].second.push_front(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[11459].first = 3;
        (*_glb_hdl_sc_channel_map)[11459].second.push_front(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[11457].first = 1;
        (*_glb_hdl_sc_channel_map)[11457].second.push_front(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[11460].first = 3;
        (*_glb_hdl_sc_channel_map)[11460].second.push_front(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[11461].first = 1;
        (*_glb_hdl_sc_channel_map)[11461].second.push_front(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(8005672);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11424].first = 1;
        (*_glb_hdl_sc_channel_map)[11424].second.push_front(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11428].first = 1;
        (*_glb_hdl_sc_channel_map)[11428].second.push_front(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_13->xsim_set_dbg_index(803);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[11569].first = 3;
        (*_glb_hdl_sc_channel_map)[11569].second.push_front(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[11417].first = 3;
        (*_glb_hdl_sc_channel_map)[11417].second.push_front(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[11570].first = 3;
        (*_glb_hdl_sc_channel_map)[11570].second.push_front(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[11575].first = 3;
        (*_glb_hdl_sc_channel_map)[11575].second.push_front(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[11567].first = 3;
        (*_glb_hdl_sc_channel_map)[11567].second.push_front(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[11571].first = 1;
        (*_glb_hdl_sc_channel_map)[11571].second.push_front(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[11568].first = 3;
        (*_glb_hdl_sc_channel_map)[11568].second.push_front(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[11572].first = 3;
        (*_glb_hdl_sc_channel_map)[11572].second.push_front(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[11416].first = 3;
        (*_glb_hdl_sc_channel_map)[11416].second.push_front(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[11573].first = 3;
        (*_glb_hdl_sc_channel_map)[11573].second.push_front(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[11576].first = 3;
        (*_glb_hdl_sc_channel_map)[11576].second.push_front(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[11577].first = 1;
        (*_glb_hdl_sc_channel_map)[11577].second.push_front(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(8006560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[11590].first = 3;
        (*_glb_hdl_sc_channel_map)[11590].second.push_front(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[11593].first = 3;
        (*_glb_hdl_sc_channel_map)[11593].second.push_front(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[11591].first = 1;
        (*_glb_hdl_sc_channel_map)[11591].second.push_front(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[11594].first = 3;
        (*_glb_hdl_sc_channel_map)[11594].second.push_front(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[11595].first = 1;
        (*_glb_hdl_sc_channel_map)[11595].second.push_front(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(8006896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(8006952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(8007008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(8007064);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(8007120);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[11579].first = 1;
        (*_glb_hdl_sc_channel_map)[11579].second.push_front(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[11558].first = 3;
        (*_glb_hdl_sc_channel_map)[11558].second.push_front(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[11419].first = 3;
        (*_glb_hdl_sc_channel_map)[11419].second.push_front(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[11559].first = 3;
        (*_glb_hdl_sc_channel_map)[11559].second.push_front(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[11564].first = 3;
        (*_glb_hdl_sc_channel_map)[11564].second.push_front(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[11555].first = 3;
        (*_glb_hdl_sc_channel_map)[11555].second.push_front(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[11560].first = 1;
        (*_glb_hdl_sc_channel_map)[11560].second.push_front(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[11556].first = 3;
        (*_glb_hdl_sc_channel_map)[11556].second.push_front(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[11561].first = 3;
        (*_glb_hdl_sc_channel_map)[11561].second.push_front(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[11418].first = 3;
        (*_glb_hdl_sc_channel_map)[11418].second.push_front(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[11562].first = 3;
        (*_glb_hdl_sc_channel_map)[11562].second.push_front(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[11565].first = 3;
        (*_glb_hdl_sc_channel_map)[11565].second.push_front(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[11566].first = 1;
        (*_glb_hdl_sc_channel_map)[11566].second.push_front(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(8007904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(8007960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(8008016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(8008072);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(8008128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(8008184);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(8008240);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[11586].first = 1;
        (*_glb_hdl_sc_channel_map)[11586].second.push_front(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11554].first = 1;
        (*_glb_hdl_sc_channel_map)[11554].second.push_front(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11557].first = 1;
        (*_glb_hdl_sc_channel_map)[11557].second.push_front(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(8008464);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(8008520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(8008576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(8008632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(8008688);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(8008744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(8008800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(8008856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(8008912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(8008968);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(8009024);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[11532].first = 1;
        (*_glb_hdl_sc_channel_map)[11532].second.push_front(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(8009136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(8009192);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(8009248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(8009304);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(8009360);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[11550].first = 1;
        (*_glb_hdl_sc_channel_map)[11550].second.push_front(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[11536].first = 3;
        (*_glb_hdl_sc_channel_map)[11536].second.push_front(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[11538].first = 3;
        (*_glb_hdl_sc_channel_map)[11538].second.push_front(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[11539].first = 3;
        (*_glb_hdl_sc_channel_map)[11539].second.push_front(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[11540].first = 1;
        (*_glb_hdl_sc_channel_map)[11540].second.push_front(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(8009696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(8009752);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(8009808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(8009864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(8009920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(8009976);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(8010032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(8010088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(8010144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(8010200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(8010256);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(8010312);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[11520].first = 1;
        (*_glb_hdl_sc_channel_map)[11520].second.push_front(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[11542].first = 3;
        (*_glb_hdl_sc_channel_map)[11542].second.push_front(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[11541].first = 3;
        (*_glb_hdl_sc_channel_map)[11541].second.push_front(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[11545].first = 3;
        (*_glb_hdl_sc_channel_map)[11545].second.push_front(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[11543].first = 1;
        (*_glb_hdl_sc_channel_map)[11543].second.push_front(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[11546].first = 3;
        (*_glb_hdl_sc_channel_map)[11546].second.push_front(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[11547].first = 1;
        (*_glb_hdl_sc_channel_map)[11547].second.push_front(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(8010760);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11510].first = 1;
        (*_glb_hdl_sc_channel_map)[11510].second.push_front(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11514].first = 1;
        (*_glb_hdl_sc_channel_map)[11514].second.push_front(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_14->xsim_set_dbg_index(1060);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[14177].first = 3;
        (*_glb_hdl_sc_channel_map)[14177].second.push_front(p_14_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[14115].first = 3;
        (*_glb_hdl_sc_channel_map)[14115].second.push_front(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[14178].first = 3;
        (*_glb_hdl_sc_channel_map)[14178].second.push_front(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[14183].first = 3;
        (*_glb_hdl_sc_channel_map)[14183].second.push_front(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[14175].first = 3;
        (*_glb_hdl_sc_channel_map)[14175].second.push_front(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[14179].first = 1;
        (*_glb_hdl_sc_channel_map)[14179].second.push_front(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[14176].first = 3;
        (*_glb_hdl_sc_channel_map)[14176].second.push_front(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[14180].first = 3;
        (*_glb_hdl_sc_channel_map)[14180].second.push_front(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[14114].first = 3;
        (*_glb_hdl_sc_channel_map)[14114].second.push_front(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[14181].first = 3;
        (*_glb_hdl_sc_channel_map)[14181].second.push_front(p_14_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awuser.bind(*p_14_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[14184].first = 3;
        (*_glb_hdl_sc_channel_map)[14184].second.push_front(p_14_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[14185].first = 1;
        (*_glb_hdl_sc_channel_map)[14185].second.push_front(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(8810024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[14198].first = 3;
        (*_glb_hdl_sc_channel_map)[14198].second.push_front(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[14201].first = 3;
        (*_glb_hdl_sc_channel_map)[14201].second.push_front(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[14199].first = 1;
        (*_glb_hdl_sc_channel_map)[14199].second.push_front(p_14_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_wuser.bind(*p_14_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[14202].first = 3;
        (*_glb_hdl_sc_channel_map)[14202].second.push_front(p_14_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[14203].first = 1;
        (*_glb_hdl_sc_channel_map)[14203].second.push_front(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(8810360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(8810416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(8810472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_buser.bind(*p_14_s00_axi_buser);
        p_14_s00_axi_buser->set_sv_netview_offsetfromdp(8810528);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(8810584);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[14187].first = 1;
        (*_glb_hdl_sc_channel_map)[14187].second.push_front(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[14166].first = 3;
        (*_glb_hdl_sc_channel_map)[14166].second.push_front(p_14_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[14117].first = 3;
        (*_glb_hdl_sc_channel_map)[14117].second.push_front(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[14167].first = 3;
        (*_glb_hdl_sc_channel_map)[14167].second.push_front(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[14172].first = 3;
        (*_glb_hdl_sc_channel_map)[14172].second.push_front(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[14163].first = 3;
        (*_glb_hdl_sc_channel_map)[14163].second.push_front(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[14168].first = 1;
        (*_glb_hdl_sc_channel_map)[14168].second.push_front(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[14164].first = 3;
        (*_glb_hdl_sc_channel_map)[14164].second.push_front(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[14169].first = 3;
        (*_glb_hdl_sc_channel_map)[14169].second.push_front(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[14116].first = 3;
        (*_glb_hdl_sc_channel_map)[14116].second.push_front(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[14170].first = 3;
        (*_glb_hdl_sc_channel_map)[14170].second.push_front(p_14_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_aruser.bind(*p_14_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[14173].first = 3;
        (*_glb_hdl_sc_channel_map)[14173].second.push_front(p_14_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[14174].first = 1;
        (*_glb_hdl_sc_channel_map)[14174].second.push_front(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(8811368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(8811424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(8811480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(8811536);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(8811592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_ruser.bind(*p_14_s00_axi_ruser);
        p_14_s00_axi_ruser->set_sv_netview_offsetfromdp(8811648);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(8811704);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[14194].first = 1;
        (*_glb_hdl_sc_channel_map)[14194].second.push_front(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[14162].first = 1;
        (*_glb_hdl_sc_channel_map)[14162].second.push_front(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[14165].first = 1;
        (*_glb_hdl_sc_channel_map)[14165].second.push_front(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(8811928);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(8811984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(8812040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(8812096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(8812152);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(8812208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(8812264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(8812320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(8812376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(8812432);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(8812488);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[14140].first = 1;
        (*_glb_hdl_sc_channel_map)[14140].second.push_front(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(8812600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(8812656);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(8812712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(8812768);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(8812824);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[14158].first = 1;
        (*_glb_hdl_sc_channel_map)[14158].second.push_front(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[14144].first = 3;
        (*_glb_hdl_sc_channel_map)[14144].second.push_front(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[14146].first = 3;
        (*_glb_hdl_sc_channel_map)[14146].second.push_front(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[14147].first = 3;
        (*_glb_hdl_sc_channel_map)[14147].second.push_front(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[14148].first = 1;
        (*_glb_hdl_sc_channel_map)[14148].second.push_front(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(8813160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(8813216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(8813272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(8813328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(8813384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(8813440);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(8813496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(8813552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(8813608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(8813664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(8813720);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(8813776);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[14128].first = 1;
        (*_glb_hdl_sc_channel_map)[14128].second.push_front(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[14150].first = 3;
        (*_glb_hdl_sc_channel_map)[14150].second.push_front(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[14149].first = 3;
        (*_glb_hdl_sc_channel_map)[14149].second.push_front(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[14153].first = 3;
        (*_glb_hdl_sc_channel_map)[14153].second.push_front(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[14151].first = 1;
        (*_glb_hdl_sc_channel_map)[14151].second.push_front(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[14154].first = 3;
        (*_glb_hdl_sc_channel_map)[14154].second.push_front(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[14155].first = 1;
        (*_glb_hdl_sc_channel_map)[14155].second.push_front(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(8814224);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[14118].first = 1;
        (*_glb_hdl_sc_channel_map)[14118].second.push_front(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[14122].first = 1;
        (*_glb_hdl_sc_channel_map)[14122].second.push_front(p_14_m00_axi_aresetn);
        sc_inst_15 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_15->xsim_set_dbg_index(38);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awid.bind(*p_15_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[17317].first = 3;
        (*_glb_hdl_sc_channel_map)[17317].second.push_front(p_15_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17314].first = 3;
        (*_glb_hdl_sc_channel_map)[17314].second.push_front(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17318].first = 3;
        (*_glb_hdl_sc_channel_map)[17318].second.push_front(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17324].first = 3;
        (*_glb_hdl_sc_channel_map)[17324].second.push_front(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17315].first = 3;
        (*_glb_hdl_sc_channel_map)[17315].second.push_front(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17319].first = 1;
        (*_glb_hdl_sc_channel_map)[17319].second.push_front(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17316].first = 3;
        (*_glb_hdl_sc_channel_map)[17316].second.push_front(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17320].first = 3;
        (*_glb_hdl_sc_channel_map)[17320].second.push_front(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17323].first = 3;
        (*_glb_hdl_sc_channel_map)[17323].second.push_front(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17321].first = 3;
        (*_glb_hdl_sc_channel_map)[17321].second.push_front(p_15_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17325].first = 1;
        (*_glb_hdl_sc_channel_map)[17325].second.push_front(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(9565280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17336].first = 3;
        (*_glb_hdl_sc_channel_map)[17336].second.push_front(p_15_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17339].first = 3;
        (*_glb_hdl_sc_channel_map)[17339].second.push_front(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17337].first = 1;
        (*_glb_hdl_sc_channel_map)[17337].second.push_front(p_15_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17340].first = 1;
        (*_glb_hdl_sc_channel_map)[17340].second.push_front(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(9565560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_bid.bind(*p_15_s00_axi_bid);
        p_15_s00_axi_bid->set_sv_netview_offsetfromdp(9565616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(9565672);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(9565728);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[17327].first = 1;
        (*_glb_hdl_sc_channel_map)[17327].second.push_front(p_15_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_arid.bind(*p_15_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[17305].first = 3;
        (*_glb_hdl_sc_channel_map)[17305].second.push_front(p_15_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17301].first = 3;
        (*_glb_hdl_sc_channel_map)[17301].second.push_front(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17306].first = 3;
        (*_glb_hdl_sc_channel_map)[17306].second.push_front(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17312].first = 3;
        (*_glb_hdl_sc_channel_map)[17312].second.push_front(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17302].first = 3;
        (*_glb_hdl_sc_channel_map)[17302].second.push_front(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17307].first = 1;
        (*_glb_hdl_sc_channel_map)[17307].second.push_front(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17303].first = 3;
        (*_glb_hdl_sc_channel_map)[17303].second.push_front(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17308].first = 3;
        (*_glb_hdl_sc_channel_map)[17308].second.push_front(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17311].first = 3;
        (*_glb_hdl_sc_channel_map)[17311].second.push_front(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17309].first = 3;
        (*_glb_hdl_sc_channel_map)[17309].second.push_front(p_15_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17313].first = 1;
        (*_glb_hdl_sc_channel_map)[17313].second.push_front(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(9566456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_rid.bind(*p_15_s00_axi_rid);
        p_15_s00_axi_rid->set_sv_netview_offsetfromdp(9566512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(9566568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(9566624);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(9566680);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(9566736);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[17333].first = 1;
        (*_glb_hdl_sc_channel_map)[17333].second.push_front(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17300].first = 1;
        (*_glb_hdl_sc_channel_map)[17300].second.push_front(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17304].first = 1;
        (*_glb_hdl_sc_channel_map)[17304].second.push_front(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(9566960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(9567016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(9567072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(9567128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(9567184);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(9567240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(9567296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(9567352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(9567408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(9567464);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(9567520);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[17115].first = 1;
        (*_glb_hdl_sc_channel_map)[17115].second.push_front(p_15_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(9567632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(9567688);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(9567744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(9567800);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(9567856);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[17133].first = 1;
        (*_glb_hdl_sc_channel_map)[17133].second.push_front(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[17119].first = 3;
        (*_glb_hdl_sc_channel_map)[17119].second.push_front(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17121].first = 3;
        (*_glb_hdl_sc_channel_map)[17121].second.push_front(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[17122].first = 3;
        (*_glb_hdl_sc_channel_map)[17122].second.push_front(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17123].first = 1;
        (*_glb_hdl_sc_channel_map)[17123].second.push_front(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(9568192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(9568248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(9568304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(9568360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(9568416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(9568472);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(9568528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(9568584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(9568640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(9568696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(9568752);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(9568808);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[17103].first = 1;
        (*_glb_hdl_sc_channel_map)[17103].second.push_front(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[17125].first = 3;
        (*_glb_hdl_sc_channel_map)[17125].second.push_front(p_15_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17124].first = 3;
        (*_glb_hdl_sc_channel_map)[17124].second.push_front(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17128].first = 3;
        (*_glb_hdl_sc_channel_map)[17128].second.push_front(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17126].first = 1;
        (*_glb_hdl_sc_channel_map)[17126].second.push_front(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17129].first = 3;
        (*_glb_hdl_sc_channel_map)[17129].second.push_front(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17130].first = 1;
        (*_glb_hdl_sc_channel_map)[17130].second.push_front(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(9569256);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17093].first = 1;
        (*_glb_hdl_sc_channel_map)[17093].second.push_front(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17097].first = 1;
        (*_glb_hdl_sc_channel_map)[17097].second.push_front(p_15_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awid.bind(*p_15_m02_axi_awid);
        p_15_m02_axi_awid->set_sv_netview_offsetfromdp(9569424);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_awaddr.bind(*p_15_m02_axi_awaddr);
        p_15_m02_axi_awaddr->set_sv_netview_offsetfromdp(9569480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_awlen.bind(*p_15_m02_axi_awlen);
        p_15_m02_axi_awlen->set_sv_netview_offsetfromdp(9569536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awsize.bind(*p_15_m02_axi_awsize);
        p_15_m02_axi_awsize->set_sv_netview_offsetfromdp(9569592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_awburst.bind(*p_15_m02_axi_awburst);
        p_15_m02_axi_awburst->set_sv_netview_offsetfromdp(9569648);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awlock.bind(*p_15_m02_axi_awlock);
        p_15_m02_axi_awlock->set_sv_netview_offsetfromdp(9569704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awcache.bind(*p_15_m02_axi_awcache);
        p_15_m02_axi_awcache->set_sv_netview_offsetfromdp(9569760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awprot.bind(*p_15_m02_axi_awprot);
        p_15_m02_axi_awprot->set_sv_netview_offsetfromdp(9569816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awqos.bind(*p_15_m02_axi_awqos);
        p_15_m02_axi_awqos->set_sv_netview_offsetfromdp(9569872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awuser.bind(*p_15_m02_axi_awuser);
        p_15_m02_axi_awuser->set_sv_netview_offsetfromdp(9569928);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awvalid.bind(*p_15_m02_axi_awvalid);
        p_15_m02_axi_awvalid->set_sv_netview_offsetfromdp(9569984);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awready.bind(*p_15_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[17203].first = 1;
        (*_glb_hdl_sc_channel_map)[17203].second.push_front(p_15_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_wdata.bind(*p_15_m02_axi_wdata);
        p_15_m02_axi_wdata->set_sv_netview_offsetfromdp(9570096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_wstrb.bind(*p_15_m02_axi_wstrb);
        p_15_m02_axi_wstrb->set_sv_netview_offsetfromdp(9570152);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wlast.bind(*p_15_m02_axi_wlast);
        p_15_m02_axi_wlast->set_sv_netview_offsetfromdp(9570208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_wuser.bind(*p_15_m02_axi_wuser);
        p_15_m02_axi_wuser->set_sv_netview_offsetfromdp(9570264);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wvalid.bind(*p_15_m02_axi_wvalid);
        p_15_m02_axi_wvalid->set_sv_netview_offsetfromdp(9570320);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wready.bind(*p_15_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[17221].first = 1;
        (*_glb_hdl_sc_channel_map)[17221].second.push_front(p_15_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_bid.bind(*p_15_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[17207].first = 3;
        (*_glb_hdl_sc_channel_map)[17207].second.push_front(p_15_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_bresp.bind(*p_15_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17209].first = 3;
        (*_glb_hdl_sc_channel_map)[17209].second.push_front(p_15_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_buser.bind(*p_15_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[17210].first = 3;
        (*_glb_hdl_sc_channel_map)[17210].second.push_front(p_15_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bvalid.bind(*p_15_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17211].first = 1;
        (*_glb_hdl_sc_channel_map)[17211].second.push_front(p_15_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bready.bind(*p_15_m02_axi_bready);
        p_15_m02_axi_bready->set_sv_netview_offsetfromdp(9570656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_arid.bind(*p_15_m02_axi_arid);
        p_15_m02_axi_arid->set_sv_netview_offsetfromdp(9570712);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_araddr.bind(*p_15_m02_axi_araddr);
        p_15_m02_axi_araddr->set_sv_netview_offsetfromdp(9570768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_arlen.bind(*p_15_m02_axi_arlen);
        p_15_m02_axi_arlen->set_sv_netview_offsetfromdp(9570824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arsize.bind(*p_15_m02_axi_arsize);
        p_15_m02_axi_arsize->set_sv_netview_offsetfromdp(9570880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_arburst.bind(*p_15_m02_axi_arburst);
        p_15_m02_axi_arburst->set_sv_netview_offsetfromdp(9570936);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arlock.bind(*p_15_m02_axi_arlock);
        p_15_m02_axi_arlock->set_sv_netview_offsetfromdp(9570992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arcache.bind(*p_15_m02_axi_arcache);
        p_15_m02_axi_arcache->set_sv_netview_offsetfromdp(9571048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arprot.bind(*p_15_m02_axi_arprot);
        p_15_m02_axi_arprot->set_sv_netview_offsetfromdp(9571104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arqos.bind(*p_15_m02_axi_arqos);
        p_15_m02_axi_arqos->set_sv_netview_offsetfromdp(9571160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_aruser.bind(*p_15_m02_axi_aruser);
        p_15_m02_axi_aruser->set_sv_netview_offsetfromdp(9571216);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arvalid.bind(*p_15_m02_axi_arvalid);
        p_15_m02_axi_arvalid->set_sv_netview_offsetfromdp(9571272);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arready.bind(*p_15_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[17191].first = 1;
        (*_glb_hdl_sc_channel_map)[17191].second.push_front(p_15_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_rid.bind(*p_15_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[17213].first = 3;
        (*_glb_hdl_sc_channel_map)[17213].second.push_front(p_15_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_rdata.bind(*p_15_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17212].first = 3;
        (*_glb_hdl_sc_channel_map)[17212].second.push_front(p_15_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_rresp.bind(*p_15_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17216].first = 3;
        (*_glb_hdl_sc_channel_map)[17216].second.push_front(p_15_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rlast.bind(*p_15_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17214].first = 1;
        (*_glb_hdl_sc_channel_map)[17214].second.push_front(p_15_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_ruser.bind(*p_15_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17217].first = 3;
        (*_glb_hdl_sc_channel_map)[17217].second.push_front(p_15_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rvalid.bind(*p_15_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17218].first = 1;
        (*_glb_hdl_sc_channel_map)[17218].second.push_front(p_15_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rready.bind(*p_15_m02_axi_rready);
        p_15_m02_axi_rready->set_sv_netview_offsetfromdp(9571720);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aclk.bind(*p_15_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17181].first = 1;
        (*_glb_hdl_sc_channel_map)[17181].second.push_front(p_15_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aresetn.bind(*p_15_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17185].first = 1;
        (*_glb_hdl_sc_channel_map)[17185].second.push_front(p_15_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awid.bind(*p_15_m03_axi_awid);
        p_15_m03_axi_awid->set_sv_netview_offsetfromdp(9571888);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_awaddr.bind(*p_15_m03_axi_awaddr);
        p_15_m03_axi_awaddr->set_sv_netview_offsetfromdp(9571944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_awlen.bind(*p_15_m03_axi_awlen);
        p_15_m03_axi_awlen->set_sv_netview_offsetfromdp(9572000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awsize.bind(*p_15_m03_axi_awsize);
        p_15_m03_axi_awsize->set_sv_netview_offsetfromdp(9572056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_awburst.bind(*p_15_m03_axi_awburst);
        p_15_m03_axi_awburst->set_sv_netview_offsetfromdp(9572112);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awlock.bind(*p_15_m03_axi_awlock);
        p_15_m03_axi_awlock->set_sv_netview_offsetfromdp(9572168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awcache.bind(*p_15_m03_axi_awcache);
        p_15_m03_axi_awcache->set_sv_netview_offsetfromdp(9572224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awprot.bind(*p_15_m03_axi_awprot);
        p_15_m03_axi_awprot->set_sv_netview_offsetfromdp(9572280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awqos.bind(*p_15_m03_axi_awqos);
        p_15_m03_axi_awqos->set_sv_netview_offsetfromdp(9572336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awuser.bind(*p_15_m03_axi_awuser);
        p_15_m03_axi_awuser->set_sv_netview_offsetfromdp(9572392);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awvalid.bind(*p_15_m03_axi_awvalid);
        p_15_m03_axi_awvalid->set_sv_netview_offsetfromdp(9572448);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awready.bind(*p_15_m03_axi_awready);
        (*_glb_hdl_sc_channel_map)[17247].first = 1;
        (*_glb_hdl_sc_channel_map)[17247].second.push_front(p_15_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_wdata.bind(*p_15_m03_axi_wdata);
        p_15_m03_axi_wdata->set_sv_netview_offsetfromdp(9572560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_wstrb.bind(*p_15_m03_axi_wstrb);
        p_15_m03_axi_wstrb->set_sv_netview_offsetfromdp(9572616);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wlast.bind(*p_15_m03_axi_wlast);
        p_15_m03_axi_wlast->set_sv_netview_offsetfromdp(9572672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_wuser.bind(*p_15_m03_axi_wuser);
        p_15_m03_axi_wuser->set_sv_netview_offsetfromdp(9572728);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wvalid.bind(*p_15_m03_axi_wvalid);
        p_15_m03_axi_wvalid->set_sv_netview_offsetfromdp(9572784);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wready.bind(*p_15_m03_axi_wready);
        (*_glb_hdl_sc_channel_map)[17265].first = 1;
        (*_glb_hdl_sc_channel_map)[17265].second.push_front(p_15_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_bid.bind(*p_15_m03_axi_bid);
        (*_glb_hdl_sc_channel_map)[17251].first = 3;
        (*_glb_hdl_sc_channel_map)[17251].second.push_front(p_15_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_bresp.bind(*p_15_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17253].first = 3;
        (*_glb_hdl_sc_channel_map)[17253].second.push_front(p_15_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_buser.bind(*p_15_m03_axi_buser);
        (*_glb_hdl_sc_channel_map)[17254].first = 3;
        (*_glb_hdl_sc_channel_map)[17254].second.push_front(p_15_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bvalid.bind(*p_15_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17255].first = 1;
        (*_glb_hdl_sc_channel_map)[17255].second.push_front(p_15_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bready.bind(*p_15_m03_axi_bready);
        p_15_m03_axi_bready->set_sv_netview_offsetfromdp(9573120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_arid.bind(*p_15_m03_axi_arid);
        p_15_m03_axi_arid->set_sv_netview_offsetfromdp(9573176);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_araddr.bind(*p_15_m03_axi_araddr);
        p_15_m03_axi_araddr->set_sv_netview_offsetfromdp(9573232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_arlen.bind(*p_15_m03_axi_arlen);
        p_15_m03_axi_arlen->set_sv_netview_offsetfromdp(9573288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arsize.bind(*p_15_m03_axi_arsize);
        p_15_m03_axi_arsize->set_sv_netview_offsetfromdp(9573344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_arburst.bind(*p_15_m03_axi_arburst);
        p_15_m03_axi_arburst->set_sv_netview_offsetfromdp(9573400);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arlock.bind(*p_15_m03_axi_arlock);
        p_15_m03_axi_arlock->set_sv_netview_offsetfromdp(9573456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arcache.bind(*p_15_m03_axi_arcache);
        p_15_m03_axi_arcache->set_sv_netview_offsetfromdp(9573512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arprot.bind(*p_15_m03_axi_arprot);
        p_15_m03_axi_arprot->set_sv_netview_offsetfromdp(9573568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arqos.bind(*p_15_m03_axi_arqos);
        p_15_m03_axi_arqos->set_sv_netview_offsetfromdp(9573624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_aruser.bind(*p_15_m03_axi_aruser);
        p_15_m03_axi_aruser->set_sv_netview_offsetfromdp(9573680);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arvalid.bind(*p_15_m03_axi_arvalid);
        p_15_m03_axi_arvalid->set_sv_netview_offsetfromdp(9573736);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arready.bind(*p_15_m03_axi_arready);
        (*_glb_hdl_sc_channel_map)[17235].first = 1;
        (*_glb_hdl_sc_channel_map)[17235].second.push_front(p_15_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_rid.bind(*p_15_m03_axi_rid);
        (*_glb_hdl_sc_channel_map)[17257].first = 3;
        (*_glb_hdl_sc_channel_map)[17257].second.push_front(p_15_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_rdata.bind(*p_15_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17256].first = 3;
        (*_glb_hdl_sc_channel_map)[17256].second.push_front(p_15_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_rresp.bind(*p_15_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17260].first = 3;
        (*_glb_hdl_sc_channel_map)[17260].second.push_front(p_15_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rlast.bind(*p_15_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17258].first = 1;
        (*_glb_hdl_sc_channel_map)[17258].second.push_front(p_15_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_ruser.bind(*p_15_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17261].first = 3;
        (*_glb_hdl_sc_channel_map)[17261].second.push_front(p_15_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rvalid.bind(*p_15_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17262].first = 1;
        (*_glb_hdl_sc_channel_map)[17262].second.push_front(p_15_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rready.bind(*p_15_m03_axi_rready);
        p_15_m03_axi_rready->set_sv_netview_offsetfromdp(9574184);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aclk.bind(*p_15_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17225].first = 1;
        (*_glb_hdl_sc_channel_map)[17225].second.push_front(p_15_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aresetn.bind(*p_15_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17229].first = 1;
        (*_glb_hdl_sc_channel_map)[17229].second.push_front(p_15_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awid.bind(*p_15_m04_axi_awid);
        p_15_m04_axi_awid->set_sv_netview_offsetfromdp(9574352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_awaddr.bind(*p_15_m04_axi_awaddr);
        p_15_m04_axi_awaddr->set_sv_netview_offsetfromdp(9574408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_awlen.bind(*p_15_m04_axi_awlen);
        p_15_m04_axi_awlen->set_sv_netview_offsetfromdp(9574464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awsize.bind(*p_15_m04_axi_awsize);
        p_15_m04_axi_awsize->set_sv_netview_offsetfromdp(9574520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_awburst.bind(*p_15_m04_axi_awburst);
        p_15_m04_axi_awburst->set_sv_netview_offsetfromdp(9574576);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awlock.bind(*p_15_m04_axi_awlock);
        p_15_m04_axi_awlock->set_sv_netview_offsetfromdp(9574632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awcache.bind(*p_15_m04_axi_awcache);
        p_15_m04_axi_awcache->set_sv_netview_offsetfromdp(9574688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awprot.bind(*p_15_m04_axi_awprot);
        p_15_m04_axi_awprot->set_sv_netview_offsetfromdp(9574744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awqos.bind(*p_15_m04_axi_awqos);
        p_15_m04_axi_awqos->set_sv_netview_offsetfromdp(9574800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awuser.bind(*p_15_m04_axi_awuser);
        p_15_m04_axi_awuser->set_sv_netview_offsetfromdp(9574856);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awvalid.bind(*p_15_m04_axi_awvalid);
        p_15_m04_axi_awvalid->set_sv_netview_offsetfromdp(9574912);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awready.bind(*p_15_m04_axi_awready);
        (*_glb_hdl_sc_channel_map)[17282].first = 1;
        (*_glb_hdl_sc_channel_map)[17282].second.push_front(p_15_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_wdata.bind(*p_15_m04_axi_wdata);
        p_15_m04_axi_wdata->set_sv_netview_offsetfromdp(9575024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_wstrb.bind(*p_15_m04_axi_wstrb);
        p_15_m04_axi_wstrb->set_sv_netview_offsetfromdp(9575080);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wlast.bind(*p_15_m04_axi_wlast);
        p_15_m04_axi_wlast->set_sv_netview_offsetfromdp(9575136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_wuser.bind(*p_15_m04_axi_wuser);
        p_15_m04_axi_wuser->set_sv_netview_offsetfromdp(9575192);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wvalid.bind(*p_15_m04_axi_wvalid);
        p_15_m04_axi_wvalid->set_sv_netview_offsetfromdp(9575248);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wready.bind(*p_15_m04_axi_wready);
        (*_glb_hdl_sc_channel_map)[17297].first = 1;
        (*_glb_hdl_sc_channel_map)[17297].second.push_front(p_15_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_bid.bind(*p_15_m04_axi_bid);
        (*_glb_hdl_sc_channel_map)[17285].first = 3;
        (*_glb_hdl_sc_channel_map)[17285].second.push_front(p_15_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_bresp.bind(*p_15_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17287].first = 3;
        (*_glb_hdl_sc_channel_map)[17287].second.push_front(p_15_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_buser.bind(*p_15_m04_axi_buser);
        (*_glb_hdl_sc_channel_map)[1171].first = 3;
        (*_glb_hdl_sc_channel_map)[1171].second.push_front(p_15_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bvalid.bind(*p_15_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17288].first = 1;
        (*_glb_hdl_sc_channel_map)[17288].second.push_front(p_15_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bready.bind(*p_15_m04_axi_bready);
        p_15_m04_axi_bready->set_sv_netview_offsetfromdp(9575584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_arid.bind(*p_15_m04_axi_arid);
        p_15_m04_axi_arid->set_sv_netview_offsetfromdp(9575640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_araddr.bind(*p_15_m04_axi_araddr);
        p_15_m04_axi_araddr->set_sv_netview_offsetfromdp(9575696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_arlen.bind(*p_15_m04_axi_arlen);
        p_15_m04_axi_arlen->set_sv_netview_offsetfromdp(9575752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arsize.bind(*p_15_m04_axi_arsize);
        p_15_m04_axi_arsize->set_sv_netview_offsetfromdp(9575808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_arburst.bind(*p_15_m04_axi_arburst);
        p_15_m04_axi_arburst->set_sv_netview_offsetfromdp(9575864);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arlock.bind(*p_15_m04_axi_arlock);
        p_15_m04_axi_arlock->set_sv_netview_offsetfromdp(9575920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arcache.bind(*p_15_m04_axi_arcache);
        p_15_m04_axi_arcache->set_sv_netview_offsetfromdp(9575976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arprot.bind(*p_15_m04_axi_arprot);
        p_15_m04_axi_arprot->set_sv_netview_offsetfromdp(9576032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arqos.bind(*p_15_m04_axi_arqos);
        p_15_m04_axi_arqos->set_sv_netview_offsetfromdp(9576088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_aruser.bind(*p_15_m04_axi_aruser);
        p_15_m04_axi_aruser->set_sv_netview_offsetfromdp(9576144);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arvalid.bind(*p_15_m04_axi_arvalid);
        p_15_m04_axi_arvalid->set_sv_netview_offsetfromdp(9576200);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arready.bind(*p_15_m04_axi_arready);
        (*_glb_hdl_sc_channel_map)[17275].first = 1;
        (*_glb_hdl_sc_channel_map)[17275].second.push_front(p_15_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_rid.bind(*p_15_m04_axi_rid);
        (*_glb_hdl_sc_channel_map)[17290].first = 3;
        (*_glb_hdl_sc_channel_map)[17290].second.push_front(p_15_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_rdata.bind(*p_15_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17289].first = 3;
        (*_glb_hdl_sc_channel_map)[17289].second.push_front(p_15_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_rresp.bind(*p_15_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17293].first = 3;
        (*_glb_hdl_sc_channel_map)[17293].second.push_front(p_15_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rlast.bind(*p_15_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17291].first = 1;
        (*_glb_hdl_sc_channel_map)[17291].second.push_front(p_15_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_ruser.bind(*p_15_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map)[1170].first = 3;
        (*_glb_hdl_sc_channel_map)[1170].second.push_front(p_15_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rvalid.bind(*p_15_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17294].first = 1;
        (*_glb_hdl_sc_channel_map)[17294].second.push_front(p_15_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rready.bind(*p_15_m04_axi_rready);
        p_15_m04_axi_rready->set_sv_netview_offsetfromdp(9576648);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aclk.bind(*p_15_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17269].first = 1;
        (*_glb_hdl_sc_channel_map)[17269].second.push_front(p_15_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aresetn.bind(*p_15_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17272].first = 1;
        (*_glb_hdl_sc_channel_map)[17272].second.push_front(p_15_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awid.bind(*p_15_m01_axi_awid);
        p_15_m01_axi_awid->set_sv_netview_offsetfromdp(9576816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_awaddr.bind(*p_15_m01_axi_awaddr);
        p_15_m01_axi_awaddr->set_sv_netview_offsetfromdp(9576872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_awlen.bind(*p_15_m01_axi_awlen);
        p_15_m01_axi_awlen->set_sv_netview_offsetfromdp(9576928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awsize.bind(*p_15_m01_axi_awsize);
        p_15_m01_axi_awsize->set_sv_netview_offsetfromdp(9576984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_awburst.bind(*p_15_m01_axi_awburst);
        p_15_m01_axi_awburst->set_sv_netview_offsetfromdp(9577040);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awlock.bind(*p_15_m01_axi_awlock);
        p_15_m01_axi_awlock->set_sv_netview_offsetfromdp(9577096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awcache.bind(*p_15_m01_axi_awcache);
        p_15_m01_axi_awcache->set_sv_netview_offsetfromdp(9577152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awprot.bind(*p_15_m01_axi_awprot);
        p_15_m01_axi_awprot->set_sv_netview_offsetfromdp(9577208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awqos.bind(*p_15_m01_axi_awqos);
        p_15_m01_axi_awqos->set_sv_netview_offsetfromdp(9577264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awuser.bind(*p_15_m01_axi_awuser);
        p_15_m01_axi_awuser->set_sv_netview_offsetfromdp(9577320);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awvalid.bind(*p_15_m01_axi_awvalid);
        p_15_m01_axi_awvalid->set_sv_netview_offsetfromdp(9577376);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awready.bind(*p_15_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[17159].first = 1;
        (*_glb_hdl_sc_channel_map)[17159].second.push_front(p_15_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_wdata.bind(*p_15_m01_axi_wdata);
        p_15_m01_axi_wdata->set_sv_netview_offsetfromdp(9577488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_wstrb.bind(*p_15_m01_axi_wstrb);
        p_15_m01_axi_wstrb->set_sv_netview_offsetfromdp(9577544);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wlast.bind(*p_15_m01_axi_wlast);
        p_15_m01_axi_wlast->set_sv_netview_offsetfromdp(9577600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_wuser.bind(*p_15_m01_axi_wuser);
        p_15_m01_axi_wuser->set_sv_netview_offsetfromdp(9577656);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wvalid.bind(*p_15_m01_axi_wvalid);
        p_15_m01_axi_wvalid->set_sv_netview_offsetfromdp(9577712);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wready.bind(*p_15_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[17177].first = 1;
        (*_glb_hdl_sc_channel_map)[17177].second.push_front(p_15_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_bid.bind(*p_15_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[17163].first = 3;
        (*_glb_hdl_sc_channel_map)[17163].second.push_front(p_15_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_bresp.bind(*p_15_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17165].first = 3;
        (*_glb_hdl_sc_channel_map)[17165].second.push_front(p_15_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_buser.bind(*p_15_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[17166].first = 3;
        (*_glb_hdl_sc_channel_map)[17166].second.push_front(p_15_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bvalid.bind(*p_15_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17167].first = 1;
        (*_glb_hdl_sc_channel_map)[17167].second.push_front(p_15_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bready.bind(*p_15_m01_axi_bready);
        p_15_m01_axi_bready->set_sv_netview_offsetfromdp(9578048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_arid.bind(*p_15_m01_axi_arid);
        p_15_m01_axi_arid->set_sv_netview_offsetfromdp(9578104);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_araddr.bind(*p_15_m01_axi_araddr);
        p_15_m01_axi_araddr->set_sv_netview_offsetfromdp(9578160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_arlen.bind(*p_15_m01_axi_arlen);
        p_15_m01_axi_arlen->set_sv_netview_offsetfromdp(9578216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arsize.bind(*p_15_m01_axi_arsize);
        p_15_m01_axi_arsize->set_sv_netview_offsetfromdp(9578272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_arburst.bind(*p_15_m01_axi_arburst);
        p_15_m01_axi_arburst->set_sv_netview_offsetfromdp(9578328);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arlock.bind(*p_15_m01_axi_arlock);
        p_15_m01_axi_arlock->set_sv_netview_offsetfromdp(9578384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arcache.bind(*p_15_m01_axi_arcache);
        p_15_m01_axi_arcache->set_sv_netview_offsetfromdp(9578440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arprot.bind(*p_15_m01_axi_arprot);
        p_15_m01_axi_arprot->set_sv_netview_offsetfromdp(9578496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arqos.bind(*p_15_m01_axi_arqos);
        p_15_m01_axi_arqos->set_sv_netview_offsetfromdp(9578552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_aruser.bind(*p_15_m01_axi_aruser);
        p_15_m01_axi_aruser->set_sv_netview_offsetfromdp(9578608);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arvalid.bind(*p_15_m01_axi_arvalid);
        p_15_m01_axi_arvalid->set_sv_netview_offsetfromdp(9578664);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arready.bind(*p_15_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[17147].first = 1;
        (*_glb_hdl_sc_channel_map)[17147].second.push_front(p_15_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_rid.bind(*p_15_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[17169].first = 3;
        (*_glb_hdl_sc_channel_map)[17169].second.push_front(p_15_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_rdata.bind(*p_15_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17168].first = 3;
        (*_glb_hdl_sc_channel_map)[17168].second.push_front(p_15_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_rresp.bind(*p_15_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17172].first = 3;
        (*_glb_hdl_sc_channel_map)[17172].second.push_front(p_15_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rlast.bind(*p_15_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17170].first = 1;
        (*_glb_hdl_sc_channel_map)[17170].second.push_front(p_15_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_ruser.bind(*p_15_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17173].first = 3;
        (*_glb_hdl_sc_channel_map)[17173].second.push_front(p_15_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rvalid.bind(*p_15_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17174].first = 1;
        (*_glb_hdl_sc_channel_map)[17174].second.push_front(p_15_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rready.bind(*p_15_m01_axi_rready);
        p_15_m01_axi_rready->set_sv_netview_offsetfromdp(9579112);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aclk.bind(*p_15_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17137].first = 1;
        (*_glb_hdl_sc_channel_map)[17137].second.push_front(p_15_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aresetn.bind(*p_15_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17141].first = 1;
        (*_glb_hdl_sc_channel_map)[17141].second.push_front(p_15_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_awid.bind(*p_15_s03_axi_awid);
        (*_glb_hdl_sc_channel_map)[17440].first = 3;
        (*_glb_hdl_sc_channel_map)[17440].second.push_front(p_15_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_awaddr.bind(*p_15_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17437].first = 3;
        (*_glb_hdl_sc_channel_map)[17437].second.push_front(p_15_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_awlen.bind(*p_15_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17441].first = 3;
        (*_glb_hdl_sc_channel_map)[17441].second.push_front(p_15_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awsize.bind(*p_15_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17447].first = 3;
        (*_glb_hdl_sc_channel_map)[17447].second.push_front(p_15_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_awburst.bind(*p_15_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17438].first = 3;
        (*_glb_hdl_sc_channel_map)[17438].second.push_front(p_15_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awlock.bind(*p_15_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17442].first = 1;
        (*_glb_hdl_sc_channel_map)[17442].second.push_front(p_15_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awcache.bind(*p_15_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17439].first = 3;
        (*_glb_hdl_sc_channel_map)[17439].second.push_front(p_15_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awprot.bind(*p_15_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17443].first = 3;
        (*_glb_hdl_sc_channel_map)[17443].second.push_front(p_15_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awregion.bind(*p_15_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17446].first = 3;
        (*_glb_hdl_sc_channel_map)[17446].second.push_front(p_15_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awqos.bind(*p_15_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17444].first = 3;
        (*_glb_hdl_sc_channel_map)[17444].second.push_front(p_15_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awvalid.bind(*p_15_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17448].first = 1;
        (*_glb_hdl_sc_channel_map)[17448].second.push_front(p_15_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awready.bind(*p_15_s03_axi_awready);
        p_15_s03_axi_awready->set_sv_netview_offsetfromdp(9579896);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_wdata.bind(*p_15_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17459].first = 3;
        (*_glb_hdl_sc_channel_map)[17459].second.push_front(p_15_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_wstrb.bind(*p_15_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17462].first = 3;
        (*_glb_hdl_sc_channel_map)[17462].second.push_front(p_15_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wlast.bind(*p_15_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17460].first = 1;
        (*_glb_hdl_sc_channel_map)[17460].second.push_front(p_15_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wvalid.bind(*p_15_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17463].first = 1;
        (*_glb_hdl_sc_channel_map)[17463].second.push_front(p_15_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wready.bind(*p_15_s03_axi_wready);
        p_15_s03_axi_wready->set_sv_netview_offsetfromdp(9580176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_bid.bind(*p_15_s03_axi_bid);
        p_15_s03_axi_bid->set_sv_netview_offsetfromdp(9580232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_bresp.bind(*p_15_s03_axi_bresp);
        p_15_s03_axi_bresp->set_sv_netview_offsetfromdp(9580288);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bvalid.bind(*p_15_s03_axi_bvalid);
        p_15_s03_axi_bvalid->set_sv_netview_offsetfromdp(9580344);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bready.bind(*p_15_s03_axi_bready);
        (*_glb_hdl_sc_channel_map)[17450].first = 1;
        (*_glb_hdl_sc_channel_map)[17450].second.push_front(p_15_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_arid.bind(*p_15_s03_axi_arid);
        (*_glb_hdl_sc_channel_map)[17428].first = 3;
        (*_glb_hdl_sc_channel_map)[17428].second.push_front(p_15_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_araddr.bind(*p_15_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17424].first = 3;
        (*_glb_hdl_sc_channel_map)[17424].second.push_front(p_15_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_arlen.bind(*p_15_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17429].first = 3;
        (*_glb_hdl_sc_channel_map)[17429].second.push_front(p_15_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arsize.bind(*p_15_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17435].first = 3;
        (*_glb_hdl_sc_channel_map)[17435].second.push_front(p_15_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_arburst.bind(*p_15_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17425].first = 3;
        (*_glb_hdl_sc_channel_map)[17425].second.push_front(p_15_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arlock.bind(*p_15_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17430].first = 1;
        (*_glb_hdl_sc_channel_map)[17430].second.push_front(p_15_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arcache.bind(*p_15_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17426].first = 3;
        (*_glb_hdl_sc_channel_map)[17426].second.push_front(p_15_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arprot.bind(*p_15_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17431].first = 3;
        (*_glb_hdl_sc_channel_map)[17431].second.push_front(p_15_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arregion.bind(*p_15_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17434].first = 3;
        (*_glb_hdl_sc_channel_map)[17434].second.push_front(p_15_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arqos.bind(*p_15_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17432].first = 3;
        (*_glb_hdl_sc_channel_map)[17432].second.push_front(p_15_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arvalid.bind(*p_15_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17436].first = 1;
        (*_glb_hdl_sc_channel_map)[17436].second.push_front(p_15_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arready.bind(*p_15_s03_axi_arready);
        p_15_s03_axi_arready->set_sv_netview_offsetfromdp(9581072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_rid.bind(*p_15_s03_axi_rid);
        p_15_s03_axi_rid->set_sv_netview_offsetfromdp(9581128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_rdata.bind(*p_15_s03_axi_rdata);
        p_15_s03_axi_rdata->set_sv_netview_offsetfromdp(9581184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_rresp.bind(*p_15_s03_axi_rresp);
        p_15_s03_axi_rresp->set_sv_netview_offsetfromdp(9581240);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rlast.bind(*p_15_s03_axi_rlast);
        p_15_s03_axi_rlast->set_sv_netview_offsetfromdp(9581296);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rvalid.bind(*p_15_s03_axi_rvalid);
        p_15_s03_axi_rvalid->set_sv_netview_offsetfromdp(9581352);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rready.bind(*p_15_s03_axi_rready);
        (*_glb_hdl_sc_channel_map)[17456].first = 1;
        (*_glb_hdl_sc_channel_map)[17456].second.push_front(p_15_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aclk.bind(*p_15_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17423].first = 1;
        (*_glb_hdl_sc_channel_map)[17423].second.push_front(p_15_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aresetn.bind(*p_15_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17427].first = 1;
        (*_glb_hdl_sc_channel_map)[17427].second.push_front(p_15_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_awid.bind(*p_15_s01_axi_awid);
        (*_glb_hdl_sc_channel_map)[17358].first = 3;
        (*_glb_hdl_sc_channel_map)[17358].second.push_front(p_15_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_awaddr.bind(*p_15_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17355].first = 3;
        (*_glb_hdl_sc_channel_map)[17355].second.push_front(p_15_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_awlen.bind(*p_15_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17359].first = 3;
        (*_glb_hdl_sc_channel_map)[17359].second.push_front(p_15_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awsize.bind(*p_15_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17365].first = 3;
        (*_glb_hdl_sc_channel_map)[17365].second.push_front(p_15_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_awburst.bind(*p_15_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17356].first = 3;
        (*_glb_hdl_sc_channel_map)[17356].second.push_front(p_15_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awlock.bind(*p_15_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17360].first = 1;
        (*_glb_hdl_sc_channel_map)[17360].second.push_front(p_15_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awcache.bind(*p_15_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17357].first = 3;
        (*_glb_hdl_sc_channel_map)[17357].second.push_front(p_15_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awprot.bind(*p_15_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17361].first = 3;
        (*_glb_hdl_sc_channel_map)[17361].second.push_front(p_15_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awregion.bind(*p_15_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17364].first = 3;
        (*_glb_hdl_sc_channel_map)[17364].second.push_front(p_15_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awqos.bind(*p_15_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17362].first = 3;
        (*_glb_hdl_sc_channel_map)[17362].second.push_front(p_15_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awvalid.bind(*p_15_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17366].first = 1;
        (*_glb_hdl_sc_channel_map)[17366].second.push_front(p_15_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awready.bind(*p_15_s01_axi_awready);
        p_15_s01_axi_awready->set_sv_netview_offsetfromdp(9582192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_wdata.bind(*p_15_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17377].first = 3;
        (*_glb_hdl_sc_channel_map)[17377].second.push_front(p_15_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_wstrb.bind(*p_15_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17380].first = 3;
        (*_glb_hdl_sc_channel_map)[17380].second.push_front(p_15_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wlast.bind(*p_15_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17378].first = 1;
        (*_glb_hdl_sc_channel_map)[17378].second.push_front(p_15_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wvalid.bind(*p_15_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17381].first = 1;
        (*_glb_hdl_sc_channel_map)[17381].second.push_front(p_15_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wready.bind(*p_15_s01_axi_wready);
        p_15_s01_axi_wready->set_sv_netview_offsetfromdp(9582472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_bid.bind(*p_15_s01_axi_bid);
        p_15_s01_axi_bid->set_sv_netview_offsetfromdp(9582528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_bresp.bind(*p_15_s01_axi_bresp);
        p_15_s01_axi_bresp->set_sv_netview_offsetfromdp(9582584);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bvalid.bind(*p_15_s01_axi_bvalid);
        p_15_s01_axi_bvalid->set_sv_netview_offsetfromdp(9582640);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bready.bind(*p_15_s01_axi_bready);
        (*_glb_hdl_sc_channel_map)[17368].first = 1;
        (*_glb_hdl_sc_channel_map)[17368].second.push_front(p_15_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_arid.bind(*p_15_s01_axi_arid);
        (*_glb_hdl_sc_channel_map)[17346].first = 3;
        (*_glb_hdl_sc_channel_map)[17346].second.push_front(p_15_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_araddr.bind(*p_15_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17342].first = 3;
        (*_glb_hdl_sc_channel_map)[17342].second.push_front(p_15_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_arlen.bind(*p_15_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17347].first = 3;
        (*_glb_hdl_sc_channel_map)[17347].second.push_front(p_15_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arsize.bind(*p_15_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17353].first = 3;
        (*_glb_hdl_sc_channel_map)[17353].second.push_front(p_15_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_arburst.bind(*p_15_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17343].first = 3;
        (*_glb_hdl_sc_channel_map)[17343].second.push_front(p_15_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arlock.bind(*p_15_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17348].first = 1;
        (*_glb_hdl_sc_channel_map)[17348].second.push_front(p_15_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arcache.bind(*p_15_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17344].first = 3;
        (*_glb_hdl_sc_channel_map)[17344].second.push_front(p_15_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arprot.bind(*p_15_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17349].first = 3;
        (*_glb_hdl_sc_channel_map)[17349].second.push_front(p_15_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arregion.bind(*p_15_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17352].first = 3;
        (*_glb_hdl_sc_channel_map)[17352].second.push_front(p_15_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arqos.bind(*p_15_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17350].first = 3;
        (*_glb_hdl_sc_channel_map)[17350].second.push_front(p_15_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arvalid.bind(*p_15_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17354].first = 1;
        (*_glb_hdl_sc_channel_map)[17354].second.push_front(p_15_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arready.bind(*p_15_s01_axi_arready);
        p_15_s01_axi_arready->set_sv_netview_offsetfromdp(9583368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_rid.bind(*p_15_s01_axi_rid);
        p_15_s01_axi_rid->set_sv_netview_offsetfromdp(9583424);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_rdata.bind(*p_15_s01_axi_rdata);
        p_15_s01_axi_rdata->set_sv_netview_offsetfromdp(9583480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_rresp.bind(*p_15_s01_axi_rresp);
        p_15_s01_axi_rresp->set_sv_netview_offsetfromdp(9583536);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rlast.bind(*p_15_s01_axi_rlast);
        p_15_s01_axi_rlast->set_sv_netview_offsetfromdp(9583592);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rvalid.bind(*p_15_s01_axi_rvalid);
        p_15_s01_axi_rvalid->set_sv_netview_offsetfromdp(9583648);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rready.bind(*p_15_s01_axi_rready);
        (*_glb_hdl_sc_channel_map)[17374].first = 1;
        (*_glb_hdl_sc_channel_map)[17374].second.push_front(p_15_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aclk.bind(*p_15_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17341].first = 1;
        (*_glb_hdl_sc_channel_map)[17341].second.push_front(p_15_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aresetn.bind(*p_15_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17345].first = 1;
        (*_glb_hdl_sc_channel_map)[17345].second.push_front(p_15_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_awid.bind(*p_15_s02_axi_awid);
        (*_glb_hdl_sc_channel_map)[17399].first = 3;
        (*_glb_hdl_sc_channel_map)[17399].second.push_front(p_15_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_awaddr.bind(*p_15_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17396].first = 3;
        (*_glb_hdl_sc_channel_map)[17396].second.push_front(p_15_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_awlen.bind(*p_15_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17400].first = 3;
        (*_glb_hdl_sc_channel_map)[17400].second.push_front(p_15_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awsize.bind(*p_15_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17406].first = 3;
        (*_glb_hdl_sc_channel_map)[17406].second.push_front(p_15_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_awburst.bind(*p_15_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17397].first = 3;
        (*_glb_hdl_sc_channel_map)[17397].second.push_front(p_15_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awlock.bind(*p_15_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17401].first = 1;
        (*_glb_hdl_sc_channel_map)[17401].second.push_front(p_15_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awcache.bind(*p_15_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17398].first = 3;
        (*_glb_hdl_sc_channel_map)[17398].second.push_front(p_15_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awprot.bind(*p_15_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17402].first = 3;
        (*_glb_hdl_sc_channel_map)[17402].second.push_front(p_15_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awregion.bind(*p_15_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17405].first = 3;
        (*_glb_hdl_sc_channel_map)[17405].second.push_front(p_15_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awqos.bind(*p_15_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17403].first = 3;
        (*_glb_hdl_sc_channel_map)[17403].second.push_front(p_15_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awvalid.bind(*p_15_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17407].first = 1;
        (*_glb_hdl_sc_channel_map)[17407].second.push_front(p_15_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awready.bind(*p_15_s02_axi_awready);
        p_15_s02_axi_awready->set_sv_netview_offsetfromdp(9584488);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_wdata.bind(*p_15_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17418].first = 3;
        (*_glb_hdl_sc_channel_map)[17418].second.push_front(p_15_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_wstrb.bind(*p_15_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17421].first = 3;
        (*_glb_hdl_sc_channel_map)[17421].second.push_front(p_15_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wlast.bind(*p_15_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17419].first = 1;
        (*_glb_hdl_sc_channel_map)[17419].second.push_front(p_15_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wvalid.bind(*p_15_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17422].first = 1;
        (*_glb_hdl_sc_channel_map)[17422].second.push_front(p_15_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wready.bind(*p_15_s02_axi_wready);
        p_15_s02_axi_wready->set_sv_netview_offsetfromdp(9584768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_bid.bind(*p_15_s02_axi_bid);
        p_15_s02_axi_bid->set_sv_netview_offsetfromdp(9584824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_bresp.bind(*p_15_s02_axi_bresp);
        p_15_s02_axi_bresp->set_sv_netview_offsetfromdp(9584880);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bvalid.bind(*p_15_s02_axi_bvalid);
        p_15_s02_axi_bvalid->set_sv_netview_offsetfromdp(9584936);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bready.bind(*p_15_s02_axi_bready);
        (*_glb_hdl_sc_channel_map)[17409].first = 1;
        (*_glb_hdl_sc_channel_map)[17409].second.push_front(p_15_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_arid.bind(*p_15_s02_axi_arid);
        (*_glb_hdl_sc_channel_map)[17387].first = 3;
        (*_glb_hdl_sc_channel_map)[17387].second.push_front(p_15_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_araddr.bind(*p_15_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17383].first = 3;
        (*_glb_hdl_sc_channel_map)[17383].second.push_front(p_15_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_arlen.bind(*p_15_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17388].first = 3;
        (*_glb_hdl_sc_channel_map)[17388].second.push_front(p_15_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arsize.bind(*p_15_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17394].first = 3;
        (*_glb_hdl_sc_channel_map)[17394].second.push_front(p_15_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_arburst.bind(*p_15_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17384].first = 3;
        (*_glb_hdl_sc_channel_map)[17384].second.push_front(p_15_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arlock.bind(*p_15_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17389].first = 1;
        (*_glb_hdl_sc_channel_map)[17389].second.push_front(p_15_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arcache.bind(*p_15_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17385].first = 3;
        (*_glb_hdl_sc_channel_map)[17385].second.push_front(p_15_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arprot.bind(*p_15_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17390].first = 3;
        (*_glb_hdl_sc_channel_map)[17390].second.push_front(p_15_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arregion.bind(*p_15_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17393].first = 3;
        (*_glb_hdl_sc_channel_map)[17393].second.push_front(p_15_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arqos.bind(*p_15_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17391].first = 3;
        (*_glb_hdl_sc_channel_map)[17391].second.push_front(p_15_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arvalid.bind(*p_15_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17395].first = 1;
        (*_glb_hdl_sc_channel_map)[17395].second.push_front(p_15_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arready.bind(*p_15_s02_axi_arready);
        p_15_s02_axi_arready->set_sv_netview_offsetfromdp(9585664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_rid.bind(*p_15_s02_axi_rid);
        p_15_s02_axi_rid->set_sv_netview_offsetfromdp(9585720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_rdata.bind(*p_15_s02_axi_rdata);
        p_15_s02_axi_rdata->set_sv_netview_offsetfromdp(9585776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_rresp.bind(*p_15_s02_axi_rresp);
        p_15_s02_axi_rresp->set_sv_netview_offsetfromdp(9585832);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rlast.bind(*p_15_s02_axi_rlast);
        p_15_s02_axi_rlast->set_sv_netview_offsetfromdp(9585888);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rvalid.bind(*p_15_s02_axi_rvalid);
        p_15_s02_axi_rvalid->set_sv_netview_offsetfromdp(9585944);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rready.bind(*p_15_s02_axi_rready);
        (*_glb_hdl_sc_channel_map)[17415].first = 1;
        (*_glb_hdl_sc_channel_map)[17415].second.push_front(p_15_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aclk.bind(*p_15_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17382].first = 1;
        (*_glb_hdl_sc_channel_map)[17382].second.push_front(p_15_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aresetn.bind(*p_15_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17386].first = 1;
        (*_glb_hdl_sc_channel_map)[17386].second.push_front(p_15_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_awid.bind(*p_15_s04_axi_awid);
        (*_glb_hdl_sc_channel_map)[17481].first = 3;
        (*_glb_hdl_sc_channel_map)[17481].second.push_front(p_15_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_awaddr.bind(*p_15_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17478].first = 3;
        (*_glb_hdl_sc_channel_map)[17478].second.push_front(p_15_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_awlen.bind(*p_15_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17482].first = 3;
        (*_glb_hdl_sc_channel_map)[17482].second.push_front(p_15_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awsize.bind(*p_15_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17488].first = 3;
        (*_glb_hdl_sc_channel_map)[17488].second.push_front(p_15_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_awburst.bind(*p_15_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17479].first = 3;
        (*_glb_hdl_sc_channel_map)[17479].second.push_front(p_15_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awlock.bind(*p_15_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17483].first = 1;
        (*_glb_hdl_sc_channel_map)[17483].second.push_front(p_15_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awcache.bind(*p_15_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17480].first = 3;
        (*_glb_hdl_sc_channel_map)[17480].second.push_front(p_15_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awprot.bind(*p_15_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17484].first = 3;
        (*_glb_hdl_sc_channel_map)[17484].second.push_front(p_15_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awregion.bind(*p_15_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17487].first = 3;
        (*_glb_hdl_sc_channel_map)[17487].second.push_front(p_15_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awqos.bind(*p_15_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17485].first = 3;
        (*_glb_hdl_sc_channel_map)[17485].second.push_front(p_15_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awvalid.bind(*p_15_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17489].first = 1;
        (*_glb_hdl_sc_channel_map)[17489].second.push_front(p_15_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awready.bind(*p_15_s04_axi_awready);
        p_15_s04_axi_awready->set_sv_netview_offsetfromdp(9586784);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_wdata.bind(*p_15_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17500].first = 3;
        (*_glb_hdl_sc_channel_map)[17500].second.push_front(p_15_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_wstrb.bind(*p_15_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17503].first = 3;
        (*_glb_hdl_sc_channel_map)[17503].second.push_front(p_15_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wlast.bind(*p_15_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17501].first = 1;
        (*_glb_hdl_sc_channel_map)[17501].second.push_front(p_15_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wvalid.bind(*p_15_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17504].first = 1;
        (*_glb_hdl_sc_channel_map)[17504].second.push_front(p_15_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wready.bind(*p_15_s04_axi_wready);
        p_15_s04_axi_wready->set_sv_netview_offsetfromdp(9587064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_bid.bind(*p_15_s04_axi_bid);
        p_15_s04_axi_bid->set_sv_netview_offsetfromdp(9587120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_bresp.bind(*p_15_s04_axi_bresp);
        p_15_s04_axi_bresp->set_sv_netview_offsetfromdp(9587176);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bvalid.bind(*p_15_s04_axi_bvalid);
        p_15_s04_axi_bvalid->set_sv_netview_offsetfromdp(9587232);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bready.bind(*p_15_s04_axi_bready);
        (*_glb_hdl_sc_channel_map)[17491].first = 1;
        (*_glb_hdl_sc_channel_map)[17491].second.push_front(p_15_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_arid.bind(*p_15_s04_axi_arid);
        (*_glb_hdl_sc_channel_map)[17469].first = 3;
        (*_glb_hdl_sc_channel_map)[17469].second.push_front(p_15_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_araddr.bind(*p_15_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17465].first = 3;
        (*_glb_hdl_sc_channel_map)[17465].second.push_front(p_15_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_arlen.bind(*p_15_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17470].first = 3;
        (*_glb_hdl_sc_channel_map)[17470].second.push_front(p_15_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arsize.bind(*p_15_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17476].first = 3;
        (*_glb_hdl_sc_channel_map)[17476].second.push_front(p_15_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_arburst.bind(*p_15_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17466].first = 3;
        (*_glb_hdl_sc_channel_map)[17466].second.push_front(p_15_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arlock.bind(*p_15_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17471].first = 1;
        (*_glb_hdl_sc_channel_map)[17471].second.push_front(p_15_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arcache.bind(*p_15_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17467].first = 3;
        (*_glb_hdl_sc_channel_map)[17467].second.push_front(p_15_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arprot.bind(*p_15_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17472].first = 3;
        (*_glb_hdl_sc_channel_map)[17472].second.push_front(p_15_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arregion.bind(*p_15_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17475].first = 3;
        (*_glb_hdl_sc_channel_map)[17475].second.push_front(p_15_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arqos.bind(*p_15_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17473].first = 3;
        (*_glb_hdl_sc_channel_map)[17473].second.push_front(p_15_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arvalid.bind(*p_15_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17477].first = 1;
        (*_glb_hdl_sc_channel_map)[17477].second.push_front(p_15_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arready.bind(*p_15_s04_axi_arready);
        p_15_s04_axi_arready->set_sv_netview_offsetfromdp(9587960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_rid.bind(*p_15_s04_axi_rid);
        p_15_s04_axi_rid->set_sv_netview_offsetfromdp(9588016);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_rdata.bind(*p_15_s04_axi_rdata);
        p_15_s04_axi_rdata->set_sv_netview_offsetfromdp(9588072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_rresp.bind(*p_15_s04_axi_rresp);
        p_15_s04_axi_rresp->set_sv_netview_offsetfromdp(9588128);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rlast.bind(*p_15_s04_axi_rlast);
        p_15_s04_axi_rlast->set_sv_netview_offsetfromdp(9588184);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rvalid.bind(*p_15_s04_axi_rvalid);
        p_15_s04_axi_rvalid->set_sv_netview_offsetfromdp(9588240);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rready.bind(*p_15_s04_axi_rready);
        (*_glb_hdl_sc_channel_map)[17497].first = 1;
        (*_glb_hdl_sc_channel_map)[17497].second.push_front(p_15_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aclk.bind(*p_15_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17464].first = 1;
        (*_glb_hdl_sc_channel_map)[17464].second.push_front(p_15_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aresetn.bind(*p_15_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17468].first = 1;
        (*_glb_hdl_sc_channel_map)[17468].second.push_front(p_15_s04_axi_aresetn);
        sc_inst_16 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_16->xsim_set_dbg_index(21);
        sc_inst_17 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_17->xsim_set_dbg_index(1611);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_awaddr.bind(*p_17_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[23649].first = 3;
        (*_glb_hdl_sc_channel_map)[23649].second.push_front(p_17_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_awprot.bind(*p_17_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[23650].first = 3;
        (*_glb_hdl_sc_channel_map)[23650].second.push_front(p_17_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awvalid.bind(*p_17_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[23652].first = 1;
        (*_glb_hdl_sc_channel_map)[23652].second.push_front(p_17_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awready.bind(*p_17_saxi_lite_cq_awready);
        p_17_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(11753632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_wdata.bind(*p_17_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[23660].first = 3;
        (*_glb_hdl_sc_channel_map)[23660].second.push_front(p_17_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->saxi_lite_cq_wstrb.bind(*p_17_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[23662].first = 3;
        (*_glb_hdl_sc_channel_map)[23662].second.push_front(p_17_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wvalid.bind(*p_17_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[23663].first = 1;
        (*_glb_hdl_sc_channel_map)[23663].second.push_front(p_17_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wready.bind(*p_17_saxi_lite_cq_wready);
        p_17_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(11753856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_bresp.bind(*p_17_saxi_lite_cq_bresp);
        p_17_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(11753912);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bvalid.bind(*p_17_saxi_lite_cq_bvalid);
        p_17_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(11753968);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bready.bind(*p_17_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[23653].first = 1;
        (*_glb_hdl_sc_channel_map)[23653].second.push_front(p_17_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_araddr.bind(*p_17_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[23644].first = 3;
        (*_glb_hdl_sc_channel_map)[23644].second.push_front(p_17_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_arprot.bind(*p_17_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[23646].first = 3;
        (*_glb_hdl_sc_channel_map)[23646].second.push_front(p_17_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arvalid.bind(*p_17_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[23648].first = 1;
        (*_glb_hdl_sc_channel_map)[23648].second.push_front(p_17_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arready.bind(*p_17_saxi_lite_cq_arready);
        p_17_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(11754248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_rdata.bind(*p_17_saxi_lite_cq_rdata);
        p_17_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(11754304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_rresp.bind(*p_17_saxi_lite_cq_rresp);
        p_17_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(11754360);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rvalid.bind(*p_17_saxi_lite_cq_rvalid);
        p_17_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(11754416);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rready.bind(*p_17_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[23657].first = 1;
        (*_glb_hdl_sc_channel_map)[23657].second.push_front(p_17_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aclk.bind(*p_17_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[23643].first = 1;
        (*_glb_hdl_sc_channel_map)[23643].second.push_front(p_17_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aresetn.bind(*p_17_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[23645].first = 1;
        (*_glb_hdl_sc_channel_map)[23645].second.push_front(p_17_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_awaddr.bind(*p_17_maxi_lite_mb_awaddr);
        p_17_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(11754640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_awprot.bind(*p_17_maxi_lite_mb_awprot);
        p_17_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(11754696);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awvalid.bind(*p_17_maxi_lite_mb_awvalid);
        p_17_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(11754752);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awready.bind(*p_17_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[23630].first = 1;
        (*_glb_hdl_sc_channel_map)[23630].second.push_front(p_17_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_wdata.bind(*p_17_maxi_lite_mb_wdata);
        p_17_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(11754864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->maxi_lite_mb_wstrb.bind(*p_17_maxi_lite_mb_wstrb);
        p_17_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(11754920);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wvalid.bind(*p_17_maxi_lite_mb_wvalid);
        p_17_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(11754976);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wready.bind(*p_17_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[23640].first = 1;
        (*_glb_hdl_sc_channel_map)[23640].second.push_front(p_17_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_bresp.bind(*p_17_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[23633].first = 3;
        (*_glb_hdl_sc_channel_map)[23633].second.push_front(p_17_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bvalid.bind(*p_17_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[23634].first = 1;
        (*_glb_hdl_sc_channel_map)[23634].second.push_front(p_17_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bready.bind(*p_17_maxi_lite_mb_bready);
        p_17_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(11755200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_araddr.bind(*p_17_maxi_lite_mb_araddr);
        p_17_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(11755256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_arprot.bind(*p_17_maxi_lite_mb_arprot);
        p_17_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(11755312);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arvalid.bind(*p_17_maxi_lite_mb_arvalid);
        p_17_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(11755368);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arready.bind(*p_17_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[23626].first = 1;
        (*_glb_hdl_sc_channel_map)[23626].second.push_front(p_17_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_rdata.bind(*p_17_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[23635].first = 3;
        (*_glb_hdl_sc_channel_map)[23635].second.push_front(p_17_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_rresp.bind(*p_17_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[23637].first = 3;
        (*_glb_hdl_sc_channel_map)[23637].second.push_front(p_17_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rvalid.bind(*p_17_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[23638].first = 1;
        (*_glb_hdl_sc_channel_map)[23638].second.push_front(p_17_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rready.bind(*p_17_maxi_lite_mb_rready);
        p_17_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(11755648);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aclk.bind(*p_17_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[23622].first = 1;
        (*_glb_hdl_sc_channel_map)[23622].second.push_front(p_17_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aresetn.bind(*p_17_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[23624].first = 1;
        (*_glb_hdl_sc_channel_map)[23624].second.push_front(p_17_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_17_irq = new xsim_sc_channel<0, bool >();
        sc_inst_17->irq.bind(*p_17_irq);
        (*_glb_hdl_sc_channel_map)[23621].first = 1;
        (*_glb_hdl_sc_channel_map)[23621].second.push_front(p_17_irq);
        sc_inst_18 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_18->xsim_set_dbg_index(290);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_awaddr.bind(*p_18_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[18123].first = 3;
        (*_glb_hdl_sc_channel_map)[18123].second.push_front(p_18_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_awlen.bind(*p_18_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[23746].first = 3;
        (*_glb_hdl_sc_channel_map)[23746].second.push_front(p_18_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awsize.bind(*p_18_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[23749].first = 3;
        (*_glb_hdl_sc_channel_map)[23749].second.push_front(p_18_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_awburst.bind(*p_18_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[23745].first = 3;
        (*_glb_hdl_sc_channel_map)[23745].second.push_front(p_18_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awlock.bind(*p_18_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[18121].first = 1;
        (*_glb_hdl_sc_channel_map)[18121].second.push_front(p_18_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awcache.bind(*p_18_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[18122].first = 3;
        (*_glb_hdl_sc_channel_map)[18122].second.push_front(p_18_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awprot.bind(*p_18_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[23747].first = 3;
        (*_glb_hdl_sc_channel_map)[23747].second.push_front(p_18_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awregion.bind(*p_18_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[18119].first = 3;
        (*_glb_hdl_sc_channel_map)[18119].second.push_front(p_18_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awqos.bind(*p_18_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[18120].first = 3;
        (*_glb_hdl_sc_channel_map)[18120].second.push_front(p_18_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awvalid.bind(*p_18_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[23750].first = 1;
        (*_glb_hdl_sc_channel_map)[23750].second.push_front(p_18_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awready.bind(*p_18_s00_axi_awready);
        p_18_s00_axi_awready->set_sv_netview_offsetfromdp(11766200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_wdata.bind(*p_18_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23759].first = 3;
        (*_glb_hdl_sc_channel_map)[23759].second.push_front(p_18_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_wstrb.bind(*p_18_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23762].first = 3;
        (*_glb_hdl_sc_channel_map)[23762].second.push_front(p_18_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wlast.bind(*p_18_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[23760].first = 1;
        (*_glb_hdl_sc_channel_map)[23760].second.push_front(p_18_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wvalid.bind(*p_18_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23763].first = 1;
        (*_glb_hdl_sc_channel_map)[23763].second.push_front(p_18_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wready.bind(*p_18_s00_axi_wready);
        p_18_s00_axi_wready->set_sv_netview_offsetfromdp(11766480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_bresp.bind(*p_18_s00_axi_bresp);
        p_18_s00_axi_bresp->set_sv_netview_offsetfromdp(11766536);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bvalid.bind(*p_18_s00_axi_bvalid);
        p_18_s00_axi_bvalid->set_sv_netview_offsetfromdp(11766592);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bready.bind(*p_18_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[23751].first = 1;
        (*_glb_hdl_sc_channel_map)[23751].second.push_front(p_18_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_araddr.bind(*p_18_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[18128].first = 3;
        (*_glb_hdl_sc_channel_map)[18128].second.push_front(p_18_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_arlen.bind(*p_18_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[23740].first = 3;
        (*_glb_hdl_sc_channel_map)[23740].second.push_front(p_18_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arsize.bind(*p_18_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[23743].first = 3;
        (*_glb_hdl_sc_channel_map)[23743].second.push_front(p_18_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_arburst.bind(*p_18_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[23738].first = 3;
        (*_glb_hdl_sc_channel_map)[23738].second.push_front(p_18_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arlock.bind(*p_18_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[18126].first = 1;
        (*_glb_hdl_sc_channel_map)[18126].second.push_front(p_18_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arcache.bind(*p_18_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[18127].first = 3;
        (*_glb_hdl_sc_channel_map)[18127].second.push_front(p_18_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arprot.bind(*p_18_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[23741].first = 3;
        (*_glb_hdl_sc_channel_map)[23741].second.push_front(p_18_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arregion.bind(*p_18_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[18124].first = 3;
        (*_glb_hdl_sc_channel_map)[18124].second.push_front(p_18_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arqos.bind(*p_18_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[18125].first = 3;
        (*_glb_hdl_sc_channel_map)[18125].second.push_front(p_18_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arvalid.bind(*p_18_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[23744].first = 1;
        (*_glb_hdl_sc_channel_map)[23744].second.push_front(p_18_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arready.bind(*p_18_s00_axi_arready);
        p_18_s00_axi_arready->set_sv_netview_offsetfromdp(11767264);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_rdata.bind(*p_18_s00_axi_rdata);
        p_18_s00_axi_rdata->set_sv_netview_offsetfromdp(11767320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_rresp.bind(*p_18_s00_axi_rresp);
        p_18_s00_axi_rresp->set_sv_netview_offsetfromdp(11767376);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rlast.bind(*p_18_s00_axi_rlast);
        p_18_s00_axi_rlast->set_sv_netview_offsetfromdp(11767432);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rvalid.bind(*p_18_s00_axi_rvalid);
        p_18_s00_axi_rvalid->set_sv_netview_offsetfromdp(11767488);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rready.bind(*p_18_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[23756].first = 1;
        (*_glb_hdl_sc_channel_map)[23756].second.push_front(p_18_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aclk.bind(*p_18_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23737].first = 1;
        (*_glb_hdl_sc_channel_map)[23737].second.push_front(p_18_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aresetn.bind(*p_18_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23739].first = 1;
        (*_glb_hdl_sc_channel_map)[23739].second.push_front(p_18_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awid.bind(*p_18_m00_axi_awid);
        p_18_m00_axi_awid->set_sv_netview_offsetfromdp(11767712);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_awaddr.bind(*p_18_m00_axi_awaddr);
        p_18_m00_axi_awaddr->set_sv_netview_offsetfromdp(11767768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_awlen.bind(*p_18_m00_axi_awlen);
        p_18_m00_axi_awlen->set_sv_netview_offsetfromdp(11767824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awsize.bind(*p_18_m00_axi_awsize);
        p_18_m00_axi_awsize->set_sv_netview_offsetfromdp(11767880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_awburst.bind(*p_18_m00_axi_awburst);
        p_18_m00_axi_awburst->set_sv_netview_offsetfromdp(11767936);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awlock.bind(*p_18_m00_axi_awlock);
        p_18_m00_axi_awlock->set_sv_netview_offsetfromdp(11767992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awcache.bind(*p_18_m00_axi_awcache);
        p_18_m00_axi_awcache->set_sv_netview_offsetfromdp(11768048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awprot.bind(*p_18_m00_axi_awprot);
        p_18_m00_axi_awprot->set_sv_netview_offsetfromdp(11768104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awqos.bind(*p_18_m00_axi_awqos);
        p_18_m00_axi_awqos->set_sv_netview_offsetfromdp(11768160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awuser.bind(*p_18_m00_axi_awuser);
        p_18_m00_axi_awuser->set_sv_netview_offsetfromdp(11768216);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awvalid.bind(*p_18_m00_axi_awvalid);
        p_18_m00_axi_awvalid->set_sv_netview_offsetfromdp(11768272);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awready.bind(*p_18_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[23715].first = 1;
        (*_glb_hdl_sc_channel_map)[23715].second.push_front(p_18_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_wdata.bind(*p_18_m00_axi_wdata);
        p_18_m00_axi_wdata->set_sv_netview_offsetfromdp(11768384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m00_axi_wstrb.bind(*p_18_m00_axi_wstrb);
        p_18_m00_axi_wstrb->set_sv_netview_offsetfromdp(11768440);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wlast.bind(*p_18_m00_axi_wlast);
        p_18_m00_axi_wlast->set_sv_netview_offsetfromdp(11768496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_wuser.bind(*p_18_m00_axi_wuser);
        p_18_m00_axi_wuser->set_sv_netview_offsetfromdp(11768552);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wvalid.bind(*p_18_m00_axi_wvalid);
        p_18_m00_axi_wvalid->set_sv_netview_offsetfromdp(11768608);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wready.bind(*p_18_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[23733].first = 1;
        (*_glb_hdl_sc_channel_map)[23733].second.push_front(p_18_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_bid.bind(*p_18_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[23719].first = 3;
        (*_glb_hdl_sc_channel_map)[23719].second.push_front(p_18_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_bresp.bind(*p_18_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[23721].first = 3;
        (*_glb_hdl_sc_channel_map)[23721].second.push_front(p_18_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_buser.bind(*p_18_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[23722].first = 3;
        (*_glb_hdl_sc_channel_map)[23722].second.push_front(p_18_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bvalid.bind(*p_18_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[23723].first = 1;
        (*_glb_hdl_sc_channel_map)[23723].second.push_front(p_18_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bready.bind(*p_18_m00_axi_bready);
        p_18_m00_axi_bready->set_sv_netview_offsetfromdp(11768944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_arid.bind(*p_18_m00_axi_arid);
        p_18_m00_axi_arid->set_sv_netview_offsetfromdp(11769000);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_araddr.bind(*p_18_m00_axi_araddr);
        p_18_m00_axi_araddr->set_sv_netview_offsetfromdp(11769056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_arlen.bind(*p_18_m00_axi_arlen);
        p_18_m00_axi_arlen->set_sv_netview_offsetfromdp(11769112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arsize.bind(*p_18_m00_axi_arsize);
        p_18_m00_axi_arsize->set_sv_netview_offsetfromdp(11769168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_arburst.bind(*p_18_m00_axi_arburst);
        p_18_m00_axi_arburst->set_sv_netview_offsetfromdp(11769224);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arlock.bind(*p_18_m00_axi_arlock);
        p_18_m00_axi_arlock->set_sv_netview_offsetfromdp(11769280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arcache.bind(*p_18_m00_axi_arcache);
        p_18_m00_axi_arcache->set_sv_netview_offsetfromdp(11769336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arprot.bind(*p_18_m00_axi_arprot);
        p_18_m00_axi_arprot->set_sv_netview_offsetfromdp(11769392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arqos.bind(*p_18_m00_axi_arqos);
        p_18_m00_axi_arqos->set_sv_netview_offsetfromdp(11769448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_aruser.bind(*p_18_m00_axi_aruser);
        p_18_m00_axi_aruser->set_sv_netview_offsetfromdp(11769504);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arvalid.bind(*p_18_m00_axi_arvalid);
        p_18_m00_axi_arvalid->set_sv_netview_offsetfromdp(11769560);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arready.bind(*p_18_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[23703].first = 1;
        (*_glb_hdl_sc_channel_map)[23703].second.push_front(p_18_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_rid.bind(*p_18_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[23725].first = 3;
        (*_glb_hdl_sc_channel_map)[23725].second.push_front(p_18_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_rdata.bind(*p_18_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[23724].first = 3;
        (*_glb_hdl_sc_channel_map)[23724].second.push_front(p_18_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_rresp.bind(*p_18_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[23728].first = 3;
        (*_glb_hdl_sc_channel_map)[23728].second.push_front(p_18_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rlast.bind(*p_18_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[23726].first = 1;
        (*_glb_hdl_sc_channel_map)[23726].second.push_front(p_18_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_ruser.bind(*p_18_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[23729].first = 3;
        (*_glb_hdl_sc_channel_map)[23729].second.push_front(p_18_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rvalid.bind(*p_18_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[23730].first = 1;
        (*_glb_hdl_sc_channel_map)[23730].second.push_front(p_18_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rready.bind(*p_18_m00_axi_rready);
        p_18_m00_axi_rready->set_sv_netview_offsetfromdp(11770008);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aclk.bind(*p_18_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23693].first = 1;
        (*_glb_hdl_sc_channel_map)[23693].second.push_front(p_18_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aresetn.bind(*p_18_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23697].first = 1;
        (*_glb_hdl_sc_channel_map)[23697].second.push_front(p_18_m00_axi_aresetn);
        sc_inst_19 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_19->xsim_set_dbg_index(292);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[18114].first = 3;
        (*_glb_hdl_sc_channel_map)[18114].second.push_front(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[24051].first = 1;
        (*_glb_hdl_sc_channel_map)[24051].second.push_front(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11816512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[24059].first = 3;
        (*_glb_hdl_sc_channel_map)[24059].second.push_front(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[24061].first = 3;
        (*_glb_hdl_sc_channel_map)[24061].second.push_front(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[24062].first = 1;
        (*_glb_hdl_sc_channel_map)[24062].second.push_front(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11816736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11816792);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11816848);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[24052].first = 1;
        (*_glb_hdl_sc_channel_map)[24052].second.push_front(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[18115].first = 3;
        (*_glb_hdl_sc_channel_map)[18115].second.push_front(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[24049].first = 1;
        (*_glb_hdl_sc_channel_map)[24049].second.push_front(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11817072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11817128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11817184);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11817240);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[24056].first = 1;
        (*_glb_hdl_sc_channel_map)[24056].second.push_front(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map)[24010].first = 1;
        (*_glb_hdl_sc_channel_map)[24010].second.push_front(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[24011].first = 1;
        (*_glb_hdl_sc_channel_map)[24011].second.push_front(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(11817464);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11817520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11817576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11817632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11817688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11817744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11817800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11817856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11817912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11817968);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11818024);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[24031].first = 1;
        (*_glb_hdl_sc_channel_map)[24031].second.push_front(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11818136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11818192);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11818248);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11818304);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[24045].first = 1;
        (*_glb_hdl_sc_channel_map)[24045].second.push_front(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[24036].first = 3;
        (*_glb_hdl_sc_channel_map)[24036].second.push_front(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[24037].first = 1;
        (*_glb_hdl_sc_channel_map)[24037].second.push_front(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11818528);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11818584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11818640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11818696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11818752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11818808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11818864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11818920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11818976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11819032);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11819088);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[24020].first = 1;
        (*_glb_hdl_sc_channel_map)[24020].second.push_front(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[24038].first = 3;
        (*_glb_hdl_sc_channel_map)[24038].second.push_front(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[24041].first = 3;
        (*_glb_hdl_sc_channel_map)[24041].second.push_front(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[24039].first = 1;
        (*_glb_hdl_sc_channel_map)[24039].second.push_front(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[24042].first = 1;
        (*_glb_hdl_sc_channel_map)[24042].second.push_front(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11819424);
        sc_inst_20 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_20->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[18112].first = 3;
        (*_glb_hdl_sc_channel_map)[18112].second.push_front(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[24103].first = 1;
        (*_glb_hdl_sc_channel_map)[24103].second.push_front(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11819640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[24111].first = 3;
        (*_glb_hdl_sc_channel_map)[24111].second.push_front(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[24113].first = 3;
        (*_glb_hdl_sc_channel_map)[24113].second.push_front(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[24114].first = 1;
        (*_glb_hdl_sc_channel_map)[24114].second.push_front(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11819864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11819920);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11819976);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[24104].first = 1;
        (*_glb_hdl_sc_channel_map)[24104].second.push_front(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[18113].first = 3;
        (*_glb_hdl_sc_channel_map)[18113].second.push_front(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[24101].first = 1;
        (*_glb_hdl_sc_channel_map)[24101].second.push_front(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11820200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11820256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11820312);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11820368);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[24108].first = 1;
        (*_glb_hdl_sc_channel_map)[24108].second.push_front(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map)[24063].first = 1;
        (*_glb_hdl_sc_channel_map)[24063].second.push_front(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[24064].first = 1;
        (*_glb_hdl_sc_channel_map)[24064].second.push_front(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(11820592);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11820648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11820704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11820760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11820816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11820872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11820928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11820984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11821040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11821096);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11821152);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[24083].first = 1;
        (*_glb_hdl_sc_channel_map)[24083].second.push_front(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11821264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11821320);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11821376);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11821432);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[24097].first = 1;
        (*_glb_hdl_sc_channel_map)[24097].second.push_front(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[24088].first = 3;
        (*_glb_hdl_sc_channel_map)[24088].second.push_front(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[24089].first = 1;
        (*_glb_hdl_sc_channel_map)[24089].second.push_front(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11821656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11821712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11821768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11821824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11821880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11821936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11821992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11822048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11822104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11822160);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11822216);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[24072].first = 1;
        (*_glb_hdl_sc_channel_map)[24072].second.push_front(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[24090].first = 3;
        (*_glb_hdl_sc_channel_map)[24090].second.push_front(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[24093].first = 3;
        (*_glb_hdl_sc_channel_map)[24093].second.push_front(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[24091].first = 1;
        (*_glb_hdl_sc_channel_map)[24091].second.push_front(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[24094].first = 1;
        (*_glb_hdl_sc_channel_map)[24094].second.push_front(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11822552);
        sc_inst_21 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_21->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[18110].first = 3;
        (*_glb_hdl_sc_channel_map)[18110].second.push_front(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[24156].first = 1;
        (*_glb_hdl_sc_channel_map)[24156].second.push_front(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11822768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[24164].first = 3;
        (*_glb_hdl_sc_channel_map)[24164].second.push_front(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[24166].first = 3;
        (*_glb_hdl_sc_channel_map)[24166].second.push_front(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[24167].first = 1;
        (*_glb_hdl_sc_channel_map)[24167].second.push_front(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11822992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11823048);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11823104);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[24157].first = 1;
        (*_glb_hdl_sc_channel_map)[24157].second.push_front(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[18111].first = 3;
        (*_glb_hdl_sc_channel_map)[18111].second.push_front(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[24154].first = 1;
        (*_glb_hdl_sc_channel_map)[24154].second.push_front(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11823328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11823384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11823440);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11823496);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[24161].first = 1;
        (*_glb_hdl_sc_channel_map)[24161].second.push_front(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map)[24116].first = 1;
        (*_glb_hdl_sc_channel_map)[24116].second.push_front(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[24117].first = 1;
        (*_glb_hdl_sc_channel_map)[24117].second.push_front(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(11823720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11823776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11823832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11823888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11823944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11824000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11824056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11824112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11824168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11824224);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11824280);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[24136].first = 1;
        (*_glb_hdl_sc_channel_map)[24136].second.push_front(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11824392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11824448);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11824504);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11824560);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[24150].first = 1;
        (*_glb_hdl_sc_channel_map)[24150].second.push_front(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[24141].first = 3;
        (*_glb_hdl_sc_channel_map)[24141].second.push_front(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[24142].first = 1;
        (*_glb_hdl_sc_channel_map)[24142].second.push_front(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11824784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11824840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11824896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11824952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11825008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11825064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11825120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11825176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11825232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11825288);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11825344);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[24125].first = 1;
        (*_glb_hdl_sc_channel_map)[24125].second.push_front(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[24143].first = 3;
        (*_glb_hdl_sc_channel_map)[24143].second.push_front(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[24146].first = 3;
        (*_glb_hdl_sc_channel_map)[24146].second.push_front(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[24144].first = 1;
        (*_glb_hdl_sc_channel_map)[24144].second.push_front(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[24147].first = 1;
        (*_glb_hdl_sc_channel_map)[24147].second.push_front(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11825680);
        sc_inst_22 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_22->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_AWADDR.bind(*p_22_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[18108].first = 3;
        (*_glb_hdl_sc_channel_map)[18108].second.push_front(p_22_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWVALID.bind(*p_22_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[24209].first = 1;
        (*_glb_hdl_sc_channel_map)[24209].second.push_front(p_22_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWREADY.bind(*p_22_s_axi_control_AWREADY);
        p_22_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11825896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_WDATA.bind(*p_22_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[24217].first = 3;
        (*_glb_hdl_sc_channel_map)[24217].second.push_front(p_22_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_control_WSTRB.bind(*p_22_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[24219].first = 3;
        (*_glb_hdl_sc_channel_map)[24219].second.push_front(p_22_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WVALID.bind(*p_22_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[24220].first = 1;
        (*_glb_hdl_sc_channel_map)[24220].second.push_front(p_22_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WREADY.bind(*p_22_s_axi_control_WREADY);
        p_22_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11826120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_BRESP.bind(*p_22_s_axi_control_BRESP);
        p_22_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11826176);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BVALID.bind(*p_22_s_axi_control_BVALID);
        p_22_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11826232);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BREADY.bind(*p_22_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[24210].first = 1;
        (*_glb_hdl_sc_channel_map)[24210].second.push_front(p_22_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_ARADDR.bind(*p_22_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[18109].first = 3;
        (*_glb_hdl_sc_channel_map)[18109].second.push_front(p_22_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARVALID.bind(*p_22_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[24207].first = 1;
        (*_glb_hdl_sc_channel_map)[24207].second.push_front(p_22_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARREADY.bind(*p_22_s_axi_control_ARREADY);
        p_22_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11826456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_RDATA.bind(*p_22_s_axi_control_RDATA);
        p_22_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11826512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_RRESP.bind(*p_22_s_axi_control_RRESP);
        p_22_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11826568);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RVALID.bind(*p_22_s_axi_control_RVALID);
        p_22_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11826624);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RREADY.bind(*p_22_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[24214].first = 1;
        (*_glb_hdl_sc_channel_map)[24214].second.push_front(p_22_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_22_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_clk.bind(*p_22_ap_clk);
        (*_glb_hdl_sc_channel_map)[24169].first = 1;
        (*_glb_hdl_sc_channel_map)[24169].second.push_front(p_22_ap_clk);
        xsim_sc_channel<0, bool > *p_22_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_rst_n.bind(*p_22_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[24170].first = 1;
        (*_glb_hdl_sc_channel_map)[24170].second.push_front(p_22_ap_rst_n);
        xsim_sc_channel<0, bool > *p_22_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_22->interrupt.bind(*p_22_interrupt);
        p_22_interrupt->set_sv_netview_offsetfromdp(11826848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_AWADDR.bind(*p_22_m_axi_gmem_AWADDR);
        p_22_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11826904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_AWLEN.bind(*p_22_m_axi_gmem_AWLEN);
        p_22_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11826960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWSIZE.bind(*p_22_m_axi_gmem_AWSIZE);
        p_22_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11827016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_AWBURST.bind(*p_22_m_axi_gmem_AWBURST);
        p_22_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11827072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_AWLOCK.bind(*p_22_m_axi_gmem_AWLOCK);
        p_22_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11827128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWREGION.bind(*p_22_m_axi_gmem_AWREGION);
        p_22_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11827184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWCACHE.bind(*p_22_m_axi_gmem_AWCACHE);
        p_22_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11827240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWPROT.bind(*p_22_m_axi_gmem_AWPROT);
        p_22_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11827296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWQOS.bind(*p_22_m_axi_gmem_AWQOS);
        p_22_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11827352);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWVALID.bind(*p_22_m_axi_gmem_AWVALID);
        p_22_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11827408);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWREADY.bind(*p_22_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[24189].first = 1;
        (*_glb_hdl_sc_channel_map)[24189].second.push_front(p_22_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_WDATA.bind(*p_22_m_axi_gmem_WDATA);
        p_22_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11827520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_WSTRB.bind(*p_22_m_axi_gmem_WSTRB);
        p_22_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11827576);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WLAST.bind(*p_22_m_axi_gmem_WLAST);
        p_22_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11827632);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WVALID.bind(*p_22_m_axi_gmem_WVALID);
        p_22_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11827688);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WREADY.bind(*p_22_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[24203].first = 1;
        (*_glb_hdl_sc_channel_map)[24203].second.push_front(p_22_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_BRESP.bind(*p_22_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[24194].first = 3;
        (*_glb_hdl_sc_channel_map)[24194].second.push_front(p_22_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BVALID.bind(*p_22_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[24195].first = 1;
        (*_glb_hdl_sc_channel_map)[24195].second.push_front(p_22_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BREADY.bind(*p_22_m_axi_gmem_BREADY);
        p_22_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11827912);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_ARADDR.bind(*p_22_m_axi_gmem_ARADDR);
        p_22_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11827968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_ARLEN.bind(*p_22_m_axi_gmem_ARLEN);
        p_22_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11828024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARSIZE.bind(*p_22_m_axi_gmem_ARSIZE);
        p_22_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11828080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_ARBURST.bind(*p_22_m_axi_gmem_ARBURST);
        p_22_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11828136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_ARLOCK.bind(*p_22_m_axi_gmem_ARLOCK);
        p_22_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11828192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARREGION.bind(*p_22_m_axi_gmem_ARREGION);
        p_22_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11828248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARCACHE.bind(*p_22_m_axi_gmem_ARCACHE);
        p_22_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11828304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARPROT.bind(*p_22_m_axi_gmem_ARPROT);
        p_22_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11828360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARQOS.bind(*p_22_m_axi_gmem_ARQOS);
        p_22_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11828416);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARVALID.bind(*p_22_m_axi_gmem_ARVALID);
        p_22_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11828472);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARREADY.bind(*p_22_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[24178].first = 1;
        (*_glb_hdl_sc_channel_map)[24178].second.push_front(p_22_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_RDATA.bind(*p_22_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[24196].first = 3;
        (*_glb_hdl_sc_channel_map)[24196].second.push_front(p_22_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_RRESP.bind(*p_22_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[24199].first = 3;
        (*_glb_hdl_sc_channel_map)[24199].second.push_front(p_22_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RLAST.bind(*p_22_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[24197].first = 1;
        (*_glb_hdl_sc_channel_map)[24197].second.push_front(p_22_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RVALID.bind(*p_22_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[24200].first = 1;
        (*_glb_hdl_sc_channel_map)[24200].second.push_front(p_22_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RREADY.bind(*p_22_m_axi_gmem_RREADY);
        p_22_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11828808);
        sc_inst_23 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_23->xsim_set_dbg_index(296);
        xsim_sc_channel<0, bool > *p_23_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ui_clk.bind(*p_23_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[24266].first = 1;
        (*_glb_hdl_sc_channel_map)[24266].second.push_front(p_23_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awid.bind(*p_23_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[24239].first = 3;
        (*_glb_hdl_sc_channel_map)[24239].second.push_front(p_23_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_awaddr.bind(*p_23_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[24236].first = 3;
        (*_glb_hdl_sc_channel_map)[24236].second.push_front(p_23_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_awlen.bind(*p_23_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[24240].first = 3;
        (*_glb_hdl_sc_channel_map)[24240].second.push_front(p_23_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awsize.bind(*p_23_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[24245].first = 3;
        (*_glb_hdl_sc_channel_map)[24245].second.push_front(p_23_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_awburst.bind(*p_23_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[24237].first = 3;
        (*_glb_hdl_sc_channel_map)[24237].second.push_front(p_23_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awlock.bind(*p_23_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[24241].first = 1;
        (*_glb_hdl_sc_channel_map)[24241].second.push_front(p_23_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awcache.bind(*p_23_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[24238].first = 3;
        (*_glb_hdl_sc_channel_map)[24238].second.push_front(p_23_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awprot.bind(*p_23_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[24242].first = 3;
        (*_glb_hdl_sc_channel_map)[24242].second.push_front(p_23_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awregion.bind(*p_23_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[18106].first = 3;
        (*_glb_hdl_sc_channel_map)[18106].second.push_front(p_23_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awqos.bind(*p_23_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[24243].first = 3;
        (*_glb_hdl_sc_channel_map)[24243].second.push_front(p_23_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awuser.bind(*p_23_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[24246].first = 3;
        (*_glb_hdl_sc_channel_map)[24246].second.push_front(p_23_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awvalid.bind(*p_23_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[24247].first = 1;
        (*_glb_hdl_sc_channel_map)[24247].second.push_front(p_23_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awready.bind(*p_23_c0_ddr_saxi_awready);
        p_23_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(11829640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_wdata.bind(*p_23_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[24260].first = 3;
        (*_glb_hdl_sc_channel_map)[24260].second.push_front(p_23_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->c0_ddr_saxi_wstrb.bind(*p_23_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[24263].first = 3;
        (*_glb_hdl_sc_channel_map)[24263].second.push_front(p_23_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wlast.bind(*p_23_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[24261].first = 1;
        (*_glb_hdl_sc_channel_map)[24261].second.push_front(p_23_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_wuser.bind(*p_23_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[24264].first = 3;
        (*_glb_hdl_sc_channel_map)[24264].second.push_front(p_23_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wvalid.bind(*p_23_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[24265].first = 1;
        (*_glb_hdl_sc_channel_map)[24265].second.push_front(p_23_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wready.bind(*p_23_c0_ddr_saxi_wready);
        p_23_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(11829976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_bid.bind(*p_23_c0_ddr_saxi_bid);
        p_23_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(11830032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_bresp.bind(*p_23_c0_ddr_saxi_bresp);
        p_23_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(11830088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_buser.bind(*p_23_c0_ddr_saxi_buser);
        p_23_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(11830144);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bvalid.bind(*p_23_c0_ddr_saxi_bvalid);
        p_23_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(11830200);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bready.bind(*p_23_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[24249].first = 1;
        (*_glb_hdl_sc_channel_map)[24249].second.push_front(p_23_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_arid.bind(*p_23_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[24227].first = 3;
        (*_glb_hdl_sc_channel_map)[24227].second.push_front(p_23_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_araddr.bind(*p_23_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[24223].first = 3;
        (*_glb_hdl_sc_channel_map)[24223].second.push_front(p_23_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_arlen.bind(*p_23_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[24228].first = 3;
        (*_glb_hdl_sc_channel_map)[24228].second.push_front(p_23_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arsize.bind(*p_23_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[24233].first = 3;
        (*_glb_hdl_sc_channel_map)[24233].second.push_front(p_23_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_arburst.bind(*p_23_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[24224].first = 3;
        (*_glb_hdl_sc_channel_map)[24224].second.push_front(p_23_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arlock.bind(*p_23_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[24229].first = 1;
        (*_glb_hdl_sc_channel_map)[24229].second.push_front(p_23_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arcache.bind(*p_23_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[24225].first = 3;
        (*_glb_hdl_sc_channel_map)[24225].second.push_front(p_23_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arprot.bind(*p_23_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[24230].first = 3;
        (*_glb_hdl_sc_channel_map)[24230].second.push_front(p_23_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arregion.bind(*p_23_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[18107].first = 3;
        (*_glb_hdl_sc_channel_map)[18107].second.push_front(p_23_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arqos.bind(*p_23_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[24231].first = 3;
        (*_glb_hdl_sc_channel_map)[24231].second.push_front(p_23_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_aruser.bind(*p_23_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[24234].first = 3;
        (*_glb_hdl_sc_channel_map)[24234].second.push_front(p_23_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arvalid.bind(*p_23_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[24235].first = 1;
        (*_glb_hdl_sc_channel_map)[24235].second.push_front(p_23_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arready.bind(*p_23_c0_ddr_saxi_arready);
        p_23_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(11830984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_rid.bind(*p_23_c0_ddr_saxi_rid);
        p_23_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(11831040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_rdata.bind(*p_23_c0_ddr_saxi_rdata);
        p_23_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(11831096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_rresp.bind(*p_23_c0_ddr_saxi_rresp);
        p_23_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(11831152);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rlast.bind(*p_23_c0_ddr_saxi_rlast);
        p_23_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(11831208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_ruser.bind(*p_23_c0_ddr_saxi_ruser);
        p_23_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(11831264);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rvalid.bind(*p_23_c0_ddr_saxi_rvalid);
        p_23_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(11831320);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rready.bind(*p_23_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[24256].first = 1;
        (*_glb_hdl_sc_channel_map)[24256].second.push_front(p_23_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aclk.bind(*p_23_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[24222].first = 1;
        (*_glb_hdl_sc_channel_map)[24222].second.push_front(p_23_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aresetn.bind(*p_23_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[24226].first = 1;
        (*_glb_hdl_sc_channel_map)[24226].second.push_front(p_23_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_awid.bind(*p_23_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[18090].first = 3;
        (*_glb_hdl_sc_channel_map)[18090].second.push_front(p_23_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awaddr.bind(*p_23_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[18093].first = 3;
        (*_glb_hdl_sc_channel_map)[18093].second.push_front(p_23_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_awlen.bind(*p_23_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[18089].first = 3;
        (*_glb_hdl_sc_channel_map)[18089].second.push_front(p_23_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awsize.bind(*p_23_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[18084].first = 3;
        (*_glb_hdl_sc_channel_map)[18084].second.push_front(p_23_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_awburst.bind(*p_23_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[18092].first = 3;
        (*_glb_hdl_sc_channel_map)[18092].second.push_front(p_23_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awlock.bind(*p_23_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[18088].first = 1;
        (*_glb_hdl_sc_channel_map)[18088].second.push_front(p_23_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awcache.bind(*p_23_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[18091].first = 3;
        (*_glb_hdl_sc_channel_map)[18091].second.push_front(p_23_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awprot.bind(*p_23_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[18087].first = 3;
        (*_glb_hdl_sc_channel_map)[18087].second.push_front(p_23_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awregion.bind(*p_23_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[18085].first = 3;
        (*_glb_hdl_sc_channel_map)[18085].second.push_front(p_23_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awqos.bind(*p_23_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[18086].first = 3;
        (*_glb_hdl_sc_channel_map)[18086].second.push_front(p_23_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awuser.bind(*p_23_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[18083].first = 3;
        (*_glb_hdl_sc_channel_map)[18083].second.push_front(p_23_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awvalid.bind(*p_23_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[18082].first = 1;
        (*_glb_hdl_sc_channel_map)[18082].second.push_front(p_23_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awready.bind(*p_23_s_xdma_axi_awready);
        p_23_s_xdma_axi_awready->set_sv_netview_offsetfromdp(11832216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_wdata.bind(*p_23_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[18079].first = 3;
        (*_glb_hdl_sc_channel_map)[18079].second.push_front(p_23_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_wstrb.bind(*p_23_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[18077].first = 3;
        (*_glb_hdl_sc_channel_map)[18077].second.push_front(p_23_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wlast.bind(*p_23_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[18078].first = 1;
        (*_glb_hdl_sc_channel_map)[18078].second.push_front(p_23_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_wuser.bind(*p_23_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[18076].first = 3;
        (*_glb_hdl_sc_channel_map)[18076].second.push_front(p_23_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wvalid.bind(*p_23_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[18075].first = 1;
        (*_glb_hdl_sc_channel_map)[18075].second.push_front(p_23_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wready.bind(*p_23_s_xdma_axi_wready);
        p_23_s_xdma_axi_wready->set_sv_netview_offsetfromdp(11832552);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_bid.bind(*p_23_s_xdma_axi_bid);
        p_23_s_xdma_axi_bid->set_sv_netview_offsetfromdp(11832608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_bresp.bind(*p_23_s_xdma_axi_bresp);
        p_23_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(11832664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_buser.bind(*p_23_s_xdma_axi_buser);
        p_23_s_xdma_axi_buser->set_sv_netview_offsetfromdp(11832720);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bvalid.bind(*p_23_s_xdma_axi_bvalid);
        p_23_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(11832776);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bready.bind(*p_23_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[18081].first = 1;
        (*_glb_hdl_sc_channel_map)[18081].second.push_front(p_23_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_arid.bind(*p_23_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[18102].first = 3;
        (*_glb_hdl_sc_channel_map)[18102].second.push_front(p_23_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_araddr.bind(*p_23_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[18105].first = 3;
        (*_glb_hdl_sc_channel_map)[18105].second.push_front(p_23_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_arlen.bind(*p_23_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[18101].first = 3;
        (*_glb_hdl_sc_channel_map)[18101].second.push_front(p_23_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arsize.bind(*p_23_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[18096].first = 3;
        (*_glb_hdl_sc_channel_map)[18096].second.push_front(p_23_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_arburst.bind(*p_23_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[18104].first = 3;
        (*_glb_hdl_sc_channel_map)[18104].second.push_front(p_23_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arlock.bind(*p_23_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[18100].first = 1;
        (*_glb_hdl_sc_channel_map)[18100].second.push_front(p_23_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arcache.bind(*p_23_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[18103].first = 3;
        (*_glb_hdl_sc_channel_map)[18103].second.push_front(p_23_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arprot.bind(*p_23_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[18099].first = 3;
        (*_glb_hdl_sc_channel_map)[18099].second.push_front(p_23_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arregion.bind(*p_23_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[18097].first = 3;
        (*_glb_hdl_sc_channel_map)[18097].second.push_front(p_23_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arqos.bind(*p_23_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[18098].first = 3;
        (*_glb_hdl_sc_channel_map)[18098].second.push_front(p_23_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_aruser.bind(*p_23_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[18095].first = 3;
        (*_glb_hdl_sc_channel_map)[18095].second.push_front(p_23_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arvalid.bind(*p_23_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[18094].first = 1;
        (*_glb_hdl_sc_channel_map)[18094].second.push_front(p_23_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arready.bind(*p_23_s_xdma_axi_arready);
        p_23_s_xdma_axi_arready->set_sv_netview_offsetfromdp(11833560);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_rid.bind(*p_23_s_xdma_axi_rid);
        p_23_s_xdma_axi_rid->set_sv_netview_offsetfromdp(11833616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_rdata.bind(*p_23_s_xdma_axi_rdata);
        p_23_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(11833672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_rresp.bind(*p_23_s_xdma_axi_rresp);
        p_23_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(11833728);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rlast.bind(*p_23_s_xdma_axi_rlast);
        p_23_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(11833784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_ruser.bind(*p_23_s_xdma_axi_ruser);
        p_23_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(11833840);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rvalid.bind(*p_23_s_xdma_axi_rvalid);
        p_23_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(11833896);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rready.bind(*p_23_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[18080].first = 1;
        (*_glb_hdl_sc_channel_map)[18080].second.push_front(p_23_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aclk.bind(*p_23_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[24267].first = 1;
        (*_glb_hdl_sc_channel_map)[24267].second.push_front(p_23_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aresetn.bind(*p_23_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[24268].first = 1;
        (*_glb_hdl_sc_channel_map)[24268].second.push_front(p_23_s_xdma_axi_aresetn);
        sc_inst_24 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_24->xsim_set_dbg_index(297);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_awid.bind(*p_24_m_aximm_awid);
        p_24_m_aximm_awid->set_sv_netview_offsetfromdp(11834168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_awaddr.bind(*p_24_m_aximm_awaddr);
        p_24_m_aximm_awaddr->set_sv_netview_offsetfromdp(11834224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_awlen.bind(*p_24_m_aximm_awlen);
        p_24_m_aximm_awlen->set_sv_netview_offsetfromdp(11834280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awsize.bind(*p_24_m_aximm_awsize);
        p_24_m_aximm_awsize->set_sv_netview_offsetfromdp(11834336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_awburst.bind(*p_24_m_aximm_awburst);
        p_24_m_aximm_awburst->set_sv_netview_offsetfromdp(11834392);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awlock.bind(*p_24_m_aximm_awlock);
        p_24_m_aximm_awlock->set_sv_netview_offsetfromdp(11834448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awcache.bind(*p_24_m_aximm_awcache);
        p_24_m_aximm_awcache->set_sv_netview_offsetfromdp(11834504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awprot.bind(*p_24_m_aximm_awprot);
        p_24_m_aximm_awprot->set_sv_netview_offsetfromdp(11834560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awqos.bind(*p_24_m_aximm_awqos);
        p_24_m_aximm_awqos->set_sv_netview_offsetfromdp(11834616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_awuser.bind(*p_24_m_aximm_awuser);
        p_24_m_aximm_awuser->set_sv_netview_offsetfromdp(11834672);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awvalid.bind(*p_24_m_aximm_awvalid);
        p_24_m_aximm_awvalid->set_sv_netview_offsetfromdp(11834728);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awready.bind(*p_24_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[24324].first = 1;
        (*_glb_hdl_sc_channel_map)[24324].second.push_front(p_24_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_wdata.bind(*p_24_m_aximm_wdata);
        p_24_m_aximm_wdata->set_sv_netview_offsetfromdp(11834840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_wstrb.bind(*p_24_m_aximm_wstrb);
        p_24_m_aximm_wstrb->set_sv_netview_offsetfromdp(11834896);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wlast.bind(*p_24_m_aximm_wlast);
        p_24_m_aximm_wlast->set_sv_netview_offsetfromdp(11834952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_wuser.bind(*p_24_m_aximm_wuser);
        p_24_m_aximm_wuser->set_sv_netview_offsetfromdp(11835008);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wvalid.bind(*p_24_m_aximm_wvalid);
        p_24_m_aximm_wvalid->set_sv_netview_offsetfromdp(11835064);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wready.bind(*p_24_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[24339].first = 1;
        (*_glb_hdl_sc_channel_map)[24339].second.push_front(p_24_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_bid.bind(*p_24_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[24327].first = 3;
        (*_glb_hdl_sc_channel_map)[24327].second.push_front(p_24_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_bresp.bind(*p_24_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[24329].first = 3;
        (*_glb_hdl_sc_channel_map)[24329].second.push_front(p_24_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_buser.bind(*p_24_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[18074].first = 3;
        (*_glb_hdl_sc_channel_map)[18074].second.push_front(p_24_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bvalid.bind(*p_24_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[24330].first = 1;
        (*_glb_hdl_sc_channel_map)[24330].second.push_front(p_24_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bready.bind(*p_24_m_aximm_bready);
        p_24_m_aximm_bready->set_sv_netview_offsetfromdp(11835400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_arid.bind(*p_24_m_aximm_arid);
        p_24_m_aximm_arid->set_sv_netview_offsetfromdp(11835456);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_araddr.bind(*p_24_m_aximm_araddr);
        p_24_m_aximm_araddr->set_sv_netview_offsetfromdp(11835512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_arlen.bind(*p_24_m_aximm_arlen);
        p_24_m_aximm_arlen->set_sv_netview_offsetfromdp(11835568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arsize.bind(*p_24_m_aximm_arsize);
        p_24_m_aximm_arsize->set_sv_netview_offsetfromdp(11835624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_arburst.bind(*p_24_m_aximm_arburst);
        p_24_m_aximm_arburst->set_sv_netview_offsetfromdp(11835680);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arlock.bind(*p_24_m_aximm_arlock);
        p_24_m_aximm_arlock->set_sv_netview_offsetfromdp(11835736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arcache.bind(*p_24_m_aximm_arcache);
        p_24_m_aximm_arcache->set_sv_netview_offsetfromdp(11835792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arprot.bind(*p_24_m_aximm_arprot);
        p_24_m_aximm_arprot->set_sv_netview_offsetfromdp(11835848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arqos.bind(*p_24_m_aximm_arqos);
        p_24_m_aximm_arqos->set_sv_netview_offsetfromdp(11835904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_aruser.bind(*p_24_m_aximm_aruser);
        p_24_m_aximm_aruser->set_sv_netview_offsetfromdp(11835960);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arvalid.bind(*p_24_m_aximm_arvalid);
        p_24_m_aximm_arvalid->set_sv_netview_offsetfromdp(11836016);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arready.bind(*p_24_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[24313].first = 1;
        (*_glb_hdl_sc_channel_map)[24313].second.push_front(p_24_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_rid.bind(*p_24_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[24332].first = 3;
        (*_glb_hdl_sc_channel_map)[24332].second.push_front(p_24_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_rdata.bind(*p_24_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[24331].first = 3;
        (*_glb_hdl_sc_channel_map)[24331].second.push_front(p_24_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_rresp.bind(*p_24_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[24335].first = 3;
        (*_glb_hdl_sc_channel_map)[24335].second.push_front(p_24_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rlast.bind(*p_24_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[24333].first = 1;
        (*_glb_hdl_sc_channel_map)[24333].second.push_front(p_24_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_ruser.bind(*p_24_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[18073].first = 3;
        (*_glb_hdl_sc_channel_map)[18073].second.push_front(p_24_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rvalid.bind(*p_24_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[24336].first = 1;
        (*_glb_hdl_sc_channel_map)[24336].second.push_front(p_24_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rready.bind(*p_24_m_aximm_rready);
        p_24_m_aximm_rready->set_sv_netview_offsetfromdp(11836464);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aclk.bind(*p_24_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[24303].first = 1;
        (*_glb_hdl_sc_channel_map)[24303].second.push_front(p_24_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aresetn.bind(*p_24_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[24307].first = 1;
        (*_glb_hdl_sc_channel_map)[24307].second.push_front(p_24_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_awaddr.bind(*p_24_m_axictrl_awaddr);
        p_24_m_axictrl_awaddr->set_sv_netview_offsetfromdp(11836632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_awprot.bind(*p_24_m_axictrl_awprot);
        p_24_m_axictrl_awprot->set_sv_netview_offsetfromdp(11836688);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awvalid.bind(*p_24_m_axictrl_awvalid);
        p_24_m_axictrl_awvalid->set_sv_netview_offsetfromdp(11836744);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awready.bind(*p_24_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[24290].first = 1;
        (*_glb_hdl_sc_channel_map)[24290].second.push_front(p_24_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_wdata.bind(*p_24_m_axictrl_wdata);
        p_24_m_axictrl_wdata->set_sv_netview_offsetfromdp(11836856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axictrl_wstrb.bind(*p_24_m_axictrl_wstrb);
        p_24_m_axictrl_wstrb->set_sv_netview_offsetfromdp(11836912);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wvalid.bind(*p_24_m_axictrl_wvalid);
        p_24_m_axictrl_wvalid->set_sv_netview_offsetfromdp(11836968);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wready.bind(*p_24_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[24300].first = 1;
        (*_glb_hdl_sc_channel_map)[24300].second.push_front(p_24_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_bresp.bind(*p_24_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[24293].first = 3;
        (*_glb_hdl_sc_channel_map)[24293].second.push_front(p_24_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bvalid.bind(*p_24_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[24294].first = 1;
        (*_glb_hdl_sc_channel_map)[24294].second.push_front(p_24_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bready.bind(*p_24_m_axictrl_bready);
        p_24_m_axictrl_bready->set_sv_netview_offsetfromdp(11837192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_araddr.bind(*p_24_m_axictrl_araddr);
        p_24_m_axictrl_araddr->set_sv_netview_offsetfromdp(11837248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_arprot.bind(*p_24_m_axictrl_arprot);
        p_24_m_axictrl_arprot->set_sv_netview_offsetfromdp(11837304);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arvalid.bind(*p_24_m_axictrl_arvalid);
        p_24_m_axictrl_arvalid->set_sv_netview_offsetfromdp(11837360);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arready.bind(*p_24_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[24286].first = 1;
        (*_glb_hdl_sc_channel_map)[24286].second.push_front(p_24_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_rdata.bind(*p_24_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[24295].first = 3;
        (*_glb_hdl_sc_channel_map)[24295].second.push_front(p_24_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_rresp.bind(*p_24_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[24297].first = 3;
        (*_glb_hdl_sc_channel_map)[24297].second.push_front(p_24_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rvalid.bind(*p_24_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[24298].first = 1;
        (*_glb_hdl_sc_channel_map)[24298].second.push_front(p_24_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rready.bind(*p_24_m_axictrl_rready);
        p_24_m_axictrl_rready->set_sv_netview_offsetfromdp(11837640);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aclk.bind(*p_24_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[24282].first = 1;
        (*_glb_hdl_sc_channel_map)[24282].second.push_front(p_24_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aresetn.bind(*p_24_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[24284].first = 1;
        (*_glb_hdl_sc_channel_map)[24284].second.push_front(p_24_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
    }
