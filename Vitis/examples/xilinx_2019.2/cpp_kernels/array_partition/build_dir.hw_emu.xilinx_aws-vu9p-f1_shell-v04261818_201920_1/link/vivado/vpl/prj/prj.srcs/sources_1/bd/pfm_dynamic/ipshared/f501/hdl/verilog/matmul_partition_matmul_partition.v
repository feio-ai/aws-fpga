// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_partition_matmul_partition,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.920000,HLS_SYN_LAT=1064,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=72,HLS_SYN_FF=9452,HLS_SYN_LUT=5320,HLS_VERSION=2019_2}" *)

module matmul_partition_matmul_partition (
        ap_clk,
        ap_rst_n,
        event_done,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        event_start,
        stall_start_ext,
        stall_done_ext,
        stall_start_str,
        stall_done_str,
        stall_start_int,
        stall_done_int
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_pp0_stage0 = 33'd4096;
parameter    ap_ST_fsm_state16 = 33'd8192;
parameter    ap_ST_fsm_state17 = 33'd16384;
parameter    ap_ST_fsm_state18 = 33'd32768;
parameter    ap_ST_fsm_state19 = 33'd65536;
parameter    ap_ST_fsm_state20 = 33'd131072;
parameter    ap_ST_fsm_state21 = 33'd262144;
parameter    ap_ST_fsm_state22 = 33'd524288;
parameter    ap_ST_fsm_pp1_stage0 = 33'd1048576;
parameter    ap_ST_fsm_state26 = 33'd2097152;
parameter    ap_ST_fsm_state27 = 33'd4194304;
parameter    ap_ST_fsm_state28 = 33'd8388608;
parameter    ap_ST_fsm_state29 = 33'd16777216;
parameter    ap_ST_fsm_pp2_stage0 = 33'd33554432;
parameter    ap_ST_fsm_state37 = 33'd67108864;
parameter    ap_ST_fsm_pp3_stage0 = 33'd134217728;
parameter    ap_ST_fsm_state41 = 33'd268435456;
parameter    ap_ST_fsm_state42 = 33'd536870912;
parameter    ap_ST_fsm_state43 = 33'd1073741824;
parameter    ap_ST_fsm_state44 = 33'd2147483648;
parameter    ap_ST_fsm_state45 = 33'd4294967296;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   event_done;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
output   event_start;
output   stall_start_ext;
output   stall_done_ext;
output   stall_start_str;
output   stall_done_str;
output   stall_start_int;
output   stall_done_int;

reg stall_start_ext;
reg stall_done_ext;
reg stall_start_str;
reg stall_done_str;
reg stall_start_int;
reg stall_done_int;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] in1;
wire   [63:0] in2;
wire   [63:0] out_r;
wire   [31:0] size;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state37;
reg    gmem_blk_n_W;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln114_reg_2549;
reg   [0:0] icmp_ln114_reg_2549_pp3_iter1_reg;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state45;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state16;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln82_reg_2077;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln70_reg_2048;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [31:0] j_0_reg_1010;
reg   [31:0] i_0_reg_1021;
reg   [30:0] itr_0_reg_1032;
reg   [31:0] j3_0_reg_1043;
reg   [31:0] i2_0_reg_1054;
reg   [30:0] itr1_0_reg_1065;
reg   [63:0] indvar_flatten_reg_1076;
reg   [30:0] row_0_reg_1087;
reg   [31:0] col_0_reg_1098;
reg   [30:0] itr5_0_reg_1109;
reg   [31:0] i6_0_reg_1120;
reg   [31:0] j7_0_reg_1131;
reg  signed [31:0] size_read_reg_2008;
reg   [63:0] gmem_addr_reg_2020;
reg   [63:0] gmem_addr_1_reg_2026;
reg   [63:0] gmem_addr_2_reg_2032;
wire   [31:0] grp_fu_1202_p2;
reg   [31:0] mul_ln70_reg_2038;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln70_fu_1210_p2;
wire    ap_block_state13_pp0_stage0_iter0;
reg    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_state15_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln70_reg_2048_pp0_iter1_reg;
wire   [30:0] itr_fu_1215_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] select_ln73_1_fu_1240_p3;
reg   [31:0] select_ln73_1_reg_2057;
wire   [9:0] add_ln77_fu_1264_p2;
reg   [9:0] add_ln77_reg_2062;
reg   [9:0] add_ln77_reg_2062_pp0_iter1_reg;
wire   [31:0] j_fu_1270_p2;
reg   [31:0] gmem_addr_2_read_reg_2072;
wire   [0:0] icmp_ln82_fu_1284_p2;
wire    ap_block_state23_pp1_stage0_iter0;
reg    ap_block_state24_pp1_stage0_iter1;
wire    ap_block_state25_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [30:0] itr_1_fu_1289_p2;
reg    ap_enable_reg_pp1_iter0;
wire  signed [31:0] select_ln85_1_fu_1314_p3;
reg  signed [31:0] select_ln85_1_reg_2086;
reg  signed [31:0] select_ln85_1_reg_2086_pp1_iter1_reg;
wire   [3:0] trunc_ln89_fu_1322_p1;
reg   [3:0] trunc_ln89_reg_2092;
reg   [3:0] trunc_ln89_reg_2092_pp1_iter1_reg;
wire   [31:0] j_1_fu_1326_p2;
reg   [31:0] gmem_addr_1_read_reg_2101;
wire   [63:0] zext_ln106_fu_1351_p1;
wire    ap_CS_fsm_state26;
wire   [31:0] add_ln106_fu_1360_p2;
reg   [31:0] add_ln106_reg_2223;
wire    ap_CS_fsm_state29;
wire   [63:0] grp_fu_1354_p2;
reg   [63:0] mul_ln106_reg_2228;
wire   [0:0] icmp_ln94_fu_1365_p2;
reg   [0:0] icmp_ln94_reg_2233;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state30_pp2_stage0_iter0;
wire    ap_block_state31_pp2_stage0_iter1;
wire    ap_block_state32_pp2_stage0_iter2;
wire    ap_block_state33_pp2_stage0_iter3;
wire    ap_block_state34_pp2_stage0_iter4;
wire    ap_block_state35_pp2_stage0_iter5;
wire    ap_block_state36_pp2_stage0_iter6;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln94_reg_2233_pp2_iter1_reg;
reg   [0:0] icmp_ln94_reg_2233_pp2_iter2_reg;
reg   [0:0] icmp_ln94_reg_2233_pp2_iter3_reg;
reg   [0:0] icmp_ln94_reg_2233_pp2_iter4_reg;
reg   [0:0] icmp_ln94_reg_2233_pp2_iter5_reg;
wire   [63:0] add_ln94_fu_1370_p2;
reg    ap_enable_reg_pp2_iter0;
wire  signed [31:0] select_ln94_fu_1387_p3;
reg  signed [31:0] select_ln94_reg_2242;
wire   [30:0] select_ln94_1_fu_1395_p3;
reg   [30:0] select_ln94_1_reg_2248;
reg   [30:0] select_ln94_1_reg_2248_pp2_iter1_reg;
reg   [30:0] select_ln94_1_reg_2248_pp2_iter2_reg;
reg   [30:0] select_ln94_1_reg_2248_pp2_iter3_reg;
reg   [30:0] select_ln94_1_reg_2248_pp2_iter4_reg;
reg   [30:0] select_ln94_1_reg_2248_pp2_iter5_reg;
wire   [0:0] icmp_ln106_fu_1430_p2;
reg   [0:0] icmp_ln106_reg_2259;
reg   [0:0] icmp_ln106_reg_2259_pp2_iter1_reg;
reg   [0:0] icmp_ln106_reg_2259_pp2_iter2_reg;
reg   [0:0] icmp_ln106_reg_2259_pp2_iter3_reg;
reg   [0:0] icmp_ln106_reg_2259_pp2_iter4_reg;
reg   [0:0] icmp_ln106_reg_2259_pp2_iter5_reg;
wire   [31:0] col_fu_1435_p2;
wire   [0:0] icmp_ln103_fu_1441_p2;
reg   [0:0] icmp_ln103_reg_2268;
reg   [0:0] icmp_ln103_reg_2268_pp2_iter2_reg;
reg   [0:0] icmp_ln103_reg_2268_pp2_iter3_reg;
reg   [0:0] icmp_ln103_reg_2268_pp2_iter4_reg;
wire   [31:0] A_q0;
reg  signed [31:0] A_load_reg_2288;
reg    ap_enable_reg_pp2_iter1;
wire  signed [31:0] B_0_q0;
reg    ap_enable_reg_pp2_iter2;
wire  signed [31:0] B_1_q0;
wire  signed [31:0] B_2_q0;
wire  signed [31:0] B_3_q0;
wire  signed [31:0] B_4_q0;
wire  signed [31:0] B_5_q0;
wire  signed [31:0] B_6_q0;
wire  signed [31:0] B_7_q0;
wire  signed [31:0] B_8_q0;
wire  signed [31:0] B_9_q0;
wire  signed [31:0] B_10_q0;
wire  signed [31:0] B_11_q0;
wire  signed [31:0] B_12_q0;
wire  signed [31:0] B_13_q0;
wire  signed [31:0] B_14_q0;
wire  signed [31:0] B_15_q0;
wire   [31:0] temp_sum_0_fu_1555_p2;
reg   [31:0] temp_sum_0_reg_2468;
wire   [31:0] temp_sum_1_fu_1571_p2;
reg   [31:0] temp_sum_1_reg_2474;
wire   [31:0] temp_sum_2_fu_1592_p2;
reg   [31:0] temp_sum_2_reg_2479;
wire   [31:0] temp_sum_3_fu_1613_p2;
reg   [31:0] temp_sum_3_reg_2484;
wire   [31:0] temp_sum_4_fu_1634_p2;
reg   [31:0] temp_sum_4_reg_2489;
wire   [31:0] temp_sum_5_fu_1655_p2;
reg   [31:0] temp_sum_5_reg_2494;
wire   [31:0] temp_sum_6_fu_1676_p2;
reg   [31:0] temp_sum_6_reg_2499;
wire   [31:0] temp_sum_7_fu_1697_p2;
reg   [31:0] temp_sum_7_reg_2504;
wire   [31:0] temp_sum_8_fu_1718_p2;
reg   [31:0] temp_sum_8_reg_2509;
wire   [31:0] temp_sum_9_fu_1739_p2;
reg   [31:0] temp_sum_9_reg_2514;
wire   [31:0] temp_sum_10_fu_1760_p2;
reg   [31:0] temp_sum_10_reg_2519;
wire   [31:0] temp_sum_11_fu_1781_p2;
reg   [31:0] temp_sum_11_reg_2524;
wire   [31:0] temp_sum_12_fu_1802_p2;
reg   [31:0] temp_sum_12_reg_2529;
wire   [31:0] temp_sum_13_fu_1823_p2;
reg   [31:0] temp_sum_13_reg_2534;
wire   [31:0] temp_sum_14_fu_1844_p2;
reg   [31:0] temp_sum_14_reg_2539;
wire   [31:0] temp_sum_15_fu_1865_p2;
reg   [31:0] temp_sum_15_reg_2544;
wire   [0:0] icmp_ln114_fu_1903_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state38_pp3_stage0_iter0;
wire    ap_block_state39_pp3_stage0_iter1;
wire    ap_block_state40_pp3_stage0_iter2;
reg    ap_block_state40_io;
reg    ap_block_pp3_stage0_11001;
wire   [30:0] itr_2_fu_1908_p2;
reg    ap_enable_reg_pp3_iter0;
wire  signed [31:0] select_ln117_fu_1925_p3;
reg  signed [31:0] select_ln117_reg_2558;
wire   [3:0] trunc_ln121_fu_1961_p1;
reg   [3:0] trunc_ln121_reg_2563;
wire   [31:0] j_2_fu_1965_p2;
wire   [31:0] tmp_4_fu_1971_p18;
reg   [31:0] tmp_4_reg_2653;
wire    ap_CS_fsm_state12;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state13;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state22;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state23;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state30;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state38;
reg    ap_enable_reg_pp3_iter1;
reg   [7:0] A_address0;
reg    A_ce0;
reg    A_we0;
reg   [3:0] B_0_address0;
reg    B_0_ce0;
reg    B_0_we0;
reg   [3:0] B_1_address0;
reg    B_1_ce0;
reg    B_1_we0;
reg   [3:0] B_2_address0;
reg    B_2_ce0;
reg    B_2_we0;
reg   [3:0] B_3_address0;
reg    B_3_ce0;
reg    B_3_we0;
reg   [3:0] B_4_address0;
reg    B_4_ce0;
reg    B_4_we0;
reg   [3:0] B_5_address0;
reg    B_5_ce0;
reg    B_5_we0;
reg   [3:0] B_6_address0;
reg    B_6_ce0;
reg    B_6_we0;
reg   [3:0] B_7_address0;
reg    B_7_ce0;
reg    B_7_we0;
reg   [3:0] B_8_address0;
reg    B_8_ce0;
reg    B_8_we0;
reg   [3:0] B_9_address0;
reg    B_9_ce0;
reg    B_9_we0;
reg   [3:0] B_10_address0;
reg    B_10_ce0;
reg    B_10_we0;
reg   [3:0] B_11_address0;
reg    B_11_ce0;
reg    B_11_we0;
reg   [3:0] B_12_address0;
reg    B_12_ce0;
reg    B_12_we0;
reg   [3:0] B_13_address0;
reg    B_13_ce0;
reg    B_13_we0;
reg   [3:0] B_14_address0;
reg    B_14_ce0;
reg    B_14_we0;
reg   [3:0] B_15_address0;
reg    B_15_ce0;
reg    B_15_we0;
reg   [3:0] C_0_address0;
reg    C_0_ce0;
reg    C_0_we0;
wire   [31:0] C_0_q0;
reg   [3:0] C_1_address0;
reg    C_1_ce0;
reg    C_1_we0;
wire   [31:0] C_1_q0;
reg   [3:0] C_2_address0;
reg    C_2_ce0;
reg    C_2_we0;
wire   [31:0] C_2_q0;
reg   [3:0] C_3_address0;
reg    C_3_ce0;
reg    C_3_we0;
wire   [31:0] C_3_q0;
reg   [3:0] C_4_address0;
reg    C_4_ce0;
reg    C_4_we0;
wire   [31:0] C_4_q0;
reg   [3:0] C_5_address0;
reg    C_5_ce0;
reg    C_5_we0;
wire   [31:0] C_5_q0;
reg   [3:0] C_6_address0;
reg    C_6_ce0;
reg    C_6_we0;
wire   [31:0] C_6_q0;
reg   [3:0] C_7_address0;
reg    C_7_ce0;
reg    C_7_we0;
wire   [31:0] C_7_q0;
reg   [3:0] C_8_address0;
reg    C_8_ce0;
reg    C_8_we0;
wire   [31:0] C_8_q0;
reg   [3:0] C_9_address0;
reg    C_9_ce0;
reg    C_9_we0;
wire   [31:0] C_9_q0;
reg   [3:0] C_10_address0;
reg    C_10_ce0;
reg    C_10_we0;
wire   [31:0] C_10_q0;
reg   [3:0] C_11_address0;
reg    C_11_ce0;
reg    C_11_we0;
wire   [31:0] C_11_q0;
reg   [3:0] C_12_address0;
reg    C_12_ce0;
reg    C_12_we0;
wire   [31:0] C_12_q0;
reg   [3:0] C_13_address0;
reg    C_13_ce0;
reg    C_13_we0;
wire   [31:0] C_13_q0;
reg   [3:0] C_14_address0;
reg    C_14_ce0;
reg    C_14_we0;
wire   [31:0] C_14_q0;
reg   [3:0] C_15_address0;
reg    C_15_ce0;
reg    C_15_we0;
wire   [31:0] C_15_q0;
reg   [31:0] ap_phi_mux_i_0_phi_fu_1025_p4;
reg   [31:0] ap_phi_mux_i2_0_phi_fu_1058_p4;
reg   [30:0] ap_phi_mux_row_0_phi_fu_1091_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_phi_mux_i6_0_phi_fu_1124_p4;
wire  signed [63:0] sext_ln77_fu_1276_p1;
wire  signed [63:0] sext_ln89_fu_1332_p1;
wire  signed [63:0] sext_ln104_1_fu_1425_p1;
wire  signed [63:0] sext_ln104_fu_1446_p1;
wire   [63:0] zext_ln94_fu_1876_p1;
wire  signed [63:0] sext_ln121_fu_1941_p1;
wire   [63:0] empty_fu_1152_p1;
wire   [63:0] empty_5_fu_1172_p1;
wire   [63:0] empty_6_fu_1192_p1;
wire    ap_block_pp3_stage0_01001;
reg   [31:0] temp_sum_0_1_fu_258;
reg   [31:0] ap_sig_allocacmp_temp_sum_0_1_load;
reg   [31:0] temp_sum_1_1_fu_262;
reg   [31:0] temp_sum_2_1_fu_266;
reg   [31:0] temp_sum_3_1_fu_270;
reg   [31:0] temp_sum_4_1_fu_274;
reg   [31:0] temp_sum_5_1_fu_278;
reg   [31:0] temp_sum_6_1_fu_282;
reg   [31:0] temp_sum_7_1_fu_286;
reg   [31:0] temp_sum_8_1_fu_290;
reg   [31:0] temp_sum_9_1_fu_294;
reg   [31:0] temp_sum_10_1_fu_298;
reg   [31:0] temp_sum_11_1_fu_302;
reg   [31:0] temp_sum_12_1_fu_306;
reg   [31:0] temp_sum_13_1_fu_310;
reg   [31:0] temp_sum_14_1_fu_314;
reg   [31:0] temp_sum_15_1_fu_318;
wire   [61:0] out_r5_fu_1142_p4;
wire   [61:0] in_fu_1162_p4;
wire   [61:0] in3_fu_1182_p4;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln70_fu_1206_p1;
wire   [0:0] icmp_ln73_fu_1221_p2;
wire   [31:0] i_fu_1226_p2;
wire   [31:0] select_ln73_fu_1232_p3;
wire   [5:0] trunc_ln77_1_fu_1252_p1;
wire   [9:0] sext_ln77_1_cast_fu_1256_p3;
wire   [9:0] trunc_ln77_fu_1248_p1;
wire   [31:0] zext_ln82_fu_1280_p1;
wire   [0:0] icmp_ln85_fu_1295_p2;
wire   [31:0] i_1_fu_1300_p2;
wire   [31:0] select_ln85_fu_1306_p3;
wire   [31:0] grp_fu_1354_p0;
wire   [31:0] grp_fu_1354_p1;
wire   [0:0] icmp_ln97_fu_1382_p2;
wire   [30:0] row_fu_1376_p2;
wire   [5:0] trunc_ln97_fu_1403_p1;
wire   [9:0] zext_ln104_cast_fu_1407_p3;
wire   [9:0] trunc_ln104_fu_1415_p1;
wire   [9:0] add_ln104_fu_1419_p2;
wire   [31:0] grp_fu_1465_p2;
wire   [31:0] select_ln103_fu_1548_p3;
wire   [31:0] select_ln103_1_fu_1564_p3;
wire   [31:0] grp_fu_1470_p2;
wire   [31:0] select_ln103_2_fu_1585_p3;
wire   [31:0] grp_fu_1475_p2;
wire   [31:0] select_ln103_3_fu_1606_p3;
wire   [31:0] grp_fu_1480_p2;
wire   [31:0] select_ln103_4_fu_1627_p3;
wire   [31:0] grp_fu_1485_p2;
wire   [31:0] select_ln103_5_fu_1648_p3;
wire   [31:0] grp_fu_1490_p2;
wire   [31:0] select_ln103_6_fu_1669_p3;
wire   [31:0] grp_fu_1495_p2;
wire   [31:0] select_ln103_7_fu_1690_p3;
wire   [31:0] grp_fu_1500_p2;
wire   [31:0] select_ln103_8_fu_1711_p3;
wire   [31:0] grp_fu_1505_p2;
wire   [31:0] select_ln103_9_fu_1732_p3;
wire   [31:0] grp_fu_1510_p2;
wire   [31:0] select_ln103_10_fu_1753_p3;
wire   [31:0] grp_fu_1515_p2;
wire   [31:0] select_ln103_11_fu_1774_p3;
wire   [31:0] grp_fu_1520_p2;
wire   [31:0] select_ln103_12_fu_1795_p3;
wire   [31:0] grp_fu_1525_p2;
wire   [31:0] select_ln103_13_fu_1816_p3;
wire   [31:0] grp_fu_1530_p2;
wire   [31:0] select_ln103_14_fu_1837_p3;
wire   [31:0] grp_fu_1535_p2;
wire   [31:0] select_ln103_15_fu_1858_p3;
wire   [31:0] grp_fu_1540_p2;
wire   [31:0] zext_ln114_fu_1899_p1;
wire   [0:0] icmp_ln117_fu_1914_p2;
wire   [31:0] i_2_fu_1919_p2;
wire   [31:0] select_ln117_1_fu_1933_p3;
reg   [32:0] ap_NS_fsm;
wire    ap_ext_blocking_cur_n;
wire    ap_ext_blocking_n;
wire    ap_str_blocking_n;
wire    ap_int_blocking_n;
reg    ap_ext_blocking_n_reg;
reg    ap_str_blocking_n_reg;
reg    ap_int_blocking_n_reg;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 33'd1;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
end

matmul_partition_matmul_partition_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
matmul_partition_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .event_start(event_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .in1(in1),
    .in2(in2),
    .out_r(out_r),
    .size(size)
);

matmul_partition_matmul_partition_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
matmul_partition_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(mul_ln70_reg_2038),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_reg_2020),
    .I_AWID(1'd0),
    .I_AWLEN(mul_ln70_reg_2038),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(tmp_4_reg_2653),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

matmul_partition_matmul_partition_A #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
A_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_address0),
    .ce0(A_ce0),
    .we0(A_we0),
    .d0(gmem_addr_2_read_reg_2072),
    .q0(A_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_0_address0),
    .ce0(B_0_ce0),
    .we0(B_0_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_0_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_1_address0),
    .ce0(B_1_ce0),
    .we0(B_1_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_1_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_2_address0),
    .ce0(B_2_ce0),
    .we0(B_2_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_2_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_3_address0),
    .ce0(B_3_ce0),
    .we0(B_3_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_3_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_4_address0),
    .ce0(B_4_ce0),
    .we0(B_4_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_4_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_5_address0),
    .ce0(B_5_ce0),
    .we0(B_5_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_5_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_6_address0),
    .ce0(B_6_ce0),
    .we0(B_6_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_6_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_7_address0),
    .ce0(B_7_ce0),
    .we0(B_7_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_7_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_8_address0),
    .ce0(B_8_ce0),
    .we0(B_8_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_8_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_9_address0),
    .ce0(B_9_ce0),
    .we0(B_9_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_9_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_10_address0),
    .ce0(B_10_ce0),
    .we0(B_10_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_10_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_11_address0),
    .ce0(B_11_ce0),
    .we0(B_11_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_11_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_12_address0),
    .ce0(B_12_ce0),
    .we0(B_12_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_12_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_13_address0),
    .ce0(B_13_ce0),
    .we0(B_13_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_13_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_14_address0),
    .ce0(B_14_ce0),
    .we0(B_14_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_14_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
B_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(B_15_address0),
    .ce0(B_15_ce0),
    .we0(B_15_we0),
    .d0(gmem_addr_1_read_reg_2101),
    .q0(B_15_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_0_address0),
    .ce0(C_0_ce0),
    .we0(C_0_we0),
    .d0(temp_sum_0_reg_2468),
    .q0(C_0_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_1_address0),
    .ce0(C_1_ce0),
    .we0(C_1_we0),
    .d0(temp_sum_1_reg_2474),
    .q0(C_1_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_2_address0),
    .ce0(C_2_ce0),
    .we0(C_2_we0),
    .d0(temp_sum_2_reg_2479),
    .q0(C_2_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_3_address0),
    .ce0(C_3_ce0),
    .we0(C_3_we0),
    .d0(temp_sum_3_reg_2484),
    .q0(C_3_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_4_address0),
    .ce0(C_4_ce0),
    .we0(C_4_we0),
    .d0(temp_sum_4_reg_2489),
    .q0(C_4_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_5_address0),
    .ce0(C_5_ce0),
    .we0(C_5_we0),
    .d0(temp_sum_5_reg_2494),
    .q0(C_5_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_6_address0),
    .ce0(C_6_ce0),
    .we0(C_6_we0),
    .d0(temp_sum_6_reg_2499),
    .q0(C_6_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_7_address0),
    .ce0(C_7_ce0),
    .we0(C_7_we0),
    .d0(temp_sum_7_reg_2504),
    .q0(C_7_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_8_address0),
    .ce0(C_8_ce0),
    .we0(C_8_we0),
    .d0(temp_sum_8_reg_2509),
    .q0(C_8_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_9_address0),
    .ce0(C_9_ce0),
    .we0(C_9_we0),
    .d0(temp_sum_9_reg_2514),
    .q0(C_9_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_10_address0),
    .ce0(C_10_ce0),
    .we0(C_10_we0),
    .d0(temp_sum_10_reg_2519),
    .q0(C_10_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_11_address0),
    .ce0(C_11_ce0),
    .we0(C_11_we0),
    .d0(temp_sum_11_reg_2524),
    .q0(C_11_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_12_address0),
    .ce0(C_12_ce0),
    .we0(C_12_we0),
    .d0(temp_sum_12_reg_2529),
    .q0(C_12_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_13_address0),
    .ce0(C_13_ce0),
    .we0(C_13_we0),
    .d0(temp_sum_13_reg_2534),
    .q0(C_13_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_14_address0),
    .ce0(C_14_ce0),
    .we0(C_14_we0),
    .d0(temp_sum_14_reg_2539),
    .q0(C_14_q0)
);

matmul_partition_matmul_partition_B_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
C_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(C_15_address0),
    .ce0(C_15_ce0),
    .we0(C_15_we0),
    .d0(temp_sum_15_reg_2544),
    .q0(C_15_q0)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(size_read_reg_2008),
    .din1(size_read_reg_2008),
    .ce(1'b1),
    .dout(grp_fu_1202_p2)
);

matmul_partition_matmul_partition_mul_32ns_32ns_64_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
matmul_partition_mul_32ns_32ns_64_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1354_p0),
    .din1(grp_fu_1354_p1),
    .ce(1'b1),
    .dout(grp_fu_1354_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(B_0_q0),
    .din1(A_load_reg_2288),
    .ce(1'b1),
    .dout(grp_fu_1465_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_1_q0),
    .ce(1'b1),
    .dout(grp_fu_1470_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_2_q0),
    .ce(1'b1),
    .dout(grp_fu_1475_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_3_q0),
    .ce(1'b1),
    .dout(grp_fu_1480_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_4_q0),
    .ce(1'b1),
    .dout(grp_fu_1485_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_5_q0),
    .ce(1'b1),
    .dout(grp_fu_1490_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_6_q0),
    .ce(1'b1),
    .dout(grp_fu_1495_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_7_q0),
    .ce(1'b1),
    .dout(grp_fu_1500_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_8_q0),
    .ce(1'b1),
    .dout(grp_fu_1505_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_9_q0),
    .ce(1'b1),
    .dout(grp_fu_1510_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_10_q0),
    .ce(1'b1),
    .dout(grp_fu_1515_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_11_q0),
    .ce(1'b1),
    .dout(grp_fu_1520_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_12_q0),
    .ce(1'b1),
    .dout(grp_fu_1525_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_13_q0),
    .ce(1'b1),
    .dout(grp_fu_1530_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_14_q0),
    .ce(1'b1),
    .dout(grp_fu_1535_p2)
);

matmul_partition_matmul_partition_mul_32s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_partition_mul_32s_32s_32_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(A_load_reg_2288),
    .din1(B_15_q0),
    .ce(1'b1),
    .dout(grp_fu_1540_p2)
);

matmul_partition_matmul_partition_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
matmul_partition_mux_164_32_1_1_U19(
    .din0(C_0_q0),
    .din1(C_1_q0),
    .din2(C_2_q0),
    .din3(C_3_q0),
    .din4(C_4_q0),
    .din5(C_5_q0),
    .din6(C_6_q0),
    .din7(C_7_q0),
    .din8(C_8_q0),
    .din9(C_9_q0),
    .din10(C_10_q0),
    .din11(C_11_q0),
    .din12(C_12_q0),
    .din13(C_13_q0),
    .din14(C_14_q0),
    .din15(C_15_q0),
    .din16(trunc_ln121_reg_2563),
    .dout(tmp_4_fu_1971_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state13)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state13);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state23)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state23);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state30)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state30);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state38) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state38)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state38);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_ext_blocking_n_reg <= ap_ext_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln94_fu_1365_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        col_0_reg_1098 <= col_fu_1435_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        col_0_reg_1098 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i2_0_reg_1054 <= 32'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln82_reg_2077 == 1'd1))) begin
        i2_0_reg_1054 <= select_ln85_1_reg_2086;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        i6_0_reg_1120 <= 32'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_reg_2549 == 1'd1))) begin
        i6_0_reg_1120 <= select_ln117_reg_2558;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_reg_2048 == 1'd1))) begin
        i_0_reg_1021 <= select_ln73_1_reg_2057;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_0_reg_1021 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln94_fu_1365_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten_reg_1076 <= add_ln94_fu_1370_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        indvar_flatten_reg_1076 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        itr1_0_reg_1065 <= 31'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln82_fu_1284_p2 == 1'd1))) begin
        itr1_0_reg_1065 <= itr_1_fu_1289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        itr5_0_reg_1109 <= 31'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_1903_p2 == 1'd1))) begin
        itr5_0_reg_1109 <= itr_2_fu_1908_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_1210_p2 == 1'd1))) begin
        itr_0_reg_1032 <= itr_fu_1215_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        itr_0_reg_1032 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j3_0_reg_1043 <= 32'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln82_fu_1284_p2 == 1'd1))) begin
        j3_0_reg_1043 <= j_1_fu_1326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        j7_0_reg_1131 <= 32'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_1903_p2 == 1'd1))) begin
        j7_0_reg_1131 <= j_2_fu_1965_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_1210_p2 == 1'd1))) begin
        j_0_reg_1010 <= j_fu_1270_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_reg_1010 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln94_reg_2233 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        row_0_reg_1087 <= select_ln94_1_reg_2248;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        row_0_reg_1087 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln94_reg_2233 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_load_reg_2288 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln106_reg_2223 <= add_ln106_fu_1360_p2;
        mul_ln106_reg_2228 <= grp_fu_1354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_1210_p2 == 1'd1))) begin
        add_ln77_reg_2062 <= add_ln77_fu_1264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln77_reg_2062_pp0_iter1_reg <= add_ln77_reg_2062;
        icmp_ln70_reg_2048 <= icmp_ln70_fu_1210_p2;
        icmp_ln70_reg_2048_pp0_iter1_reg <= icmp_ln70_reg_2048;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln82_reg_2077 == 1'd1))) begin
        gmem_addr_1_read_reg_2101 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem_addr_1_reg_2026[61 : 0] <= empty_5_fu_1172_p1[61 : 0];
        gmem_addr_2_reg_2032[61 : 0] <= empty_6_fu_1192_p1[61 : 0];
        gmem_addr_reg_2020[61 : 0] <= empty_fu_1152_p1[61 : 0];
        size_read_reg_2008 <= size;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_reg_2048 == 1'd1))) begin
        gmem_addr_2_read_reg_2072 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln94_reg_2233 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln103_reg_2268 <= icmp_ln103_fu_1441_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln103_reg_2268_pp2_iter2_reg <= icmp_ln103_reg_2268;
        icmp_ln103_reg_2268_pp2_iter3_reg <= icmp_ln103_reg_2268_pp2_iter2_reg;
        icmp_ln103_reg_2268_pp2_iter4_reg <= icmp_ln103_reg_2268_pp2_iter3_reg;
        icmp_ln106_reg_2259_pp2_iter2_reg <= icmp_ln106_reg_2259_pp2_iter1_reg;
        icmp_ln106_reg_2259_pp2_iter3_reg <= icmp_ln106_reg_2259_pp2_iter2_reg;
        icmp_ln106_reg_2259_pp2_iter4_reg <= icmp_ln106_reg_2259_pp2_iter3_reg;
        icmp_ln106_reg_2259_pp2_iter5_reg <= icmp_ln106_reg_2259_pp2_iter4_reg;
        icmp_ln94_reg_2233_pp2_iter2_reg <= icmp_ln94_reg_2233_pp2_iter1_reg;
        icmp_ln94_reg_2233_pp2_iter3_reg <= icmp_ln94_reg_2233_pp2_iter2_reg;
        icmp_ln94_reg_2233_pp2_iter4_reg <= icmp_ln94_reg_2233_pp2_iter3_reg;
        icmp_ln94_reg_2233_pp2_iter5_reg <= icmp_ln94_reg_2233_pp2_iter4_reg;
        select_ln94_1_reg_2248_pp2_iter2_reg <= select_ln94_1_reg_2248_pp2_iter1_reg;
        select_ln94_1_reg_2248_pp2_iter3_reg <= select_ln94_1_reg_2248_pp2_iter2_reg;
        select_ln94_1_reg_2248_pp2_iter4_reg <= select_ln94_1_reg_2248_pp2_iter3_reg;
        select_ln94_1_reg_2248_pp2_iter5_reg <= select_ln94_1_reg_2248_pp2_iter4_reg;
        temp_sum_10_reg_2519 <= temp_sum_10_fu_1760_p2;
        temp_sum_11_reg_2524 <= temp_sum_11_fu_1781_p2;
        temp_sum_12_reg_2529 <= temp_sum_12_fu_1802_p2;
        temp_sum_13_reg_2534 <= temp_sum_13_fu_1823_p2;
        temp_sum_14_reg_2539 <= temp_sum_14_fu_1844_p2;
        temp_sum_15_reg_2544 <= temp_sum_15_fu_1865_p2;
        temp_sum_1_reg_2474 <= temp_sum_1_fu_1571_p2;
        temp_sum_2_reg_2479 <= temp_sum_2_fu_1592_p2;
        temp_sum_3_reg_2484 <= temp_sum_3_fu_1613_p2;
        temp_sum_4_reg_2489 <= temp_sum_4_fu_1634_p2;
        temp_sum_5_reg_2494 <= temp_sum_5_fu_1655_p2;
        temp_sum_6_reg_2499 <= temp_sum_6_fu_1676_p2;
        temp_sum_7_reg_2504 <= temp_sum_7_fu_1697_p2;
        temp_sum_8_reg_2509 <= temp_sum_8_fu_1718_p2;
        temp_sum_9_reg_2514 <= temp_sum_9_fu_1739_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln94_fu_1365_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln106_reg_2259 <= icmp_ln106_fu_1430_p2;
        select_ln94_reg_2242 <= select_ln94_fu_1387_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln106_reg_2259_pp2_iter1_reg <= icmp_ln106_reg_2259;
        icmp_ln94_reg_2233 <= icmp_ln94_fu_1365_p2;
        icmp_ln94_reg_2233_pp2_iter1_reg <= icmp_ln94_reg_2233;
        select_ln94_1_reg_2248_pp2_iter1_reg <= select_ln94_1_reg_2248;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln114_reg_2549 <= icmp_ln114_fu_1903_p2;
        icmp_ln114_reg_2549_pp3_iter1_reg <= icmp_ln114_reg_2549;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln82_reg_2077 <= icmp_ln82_fu_1284_p2;
        select_ln85_1_reg_2086_pp1_iter1_reg <= select_ln85_1_reg_2086;
        trunc_ln89_reg_2092_pp1_iter1_reg <= trunc_ln89_reg_2092;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul_ln70_reg_2038 <= grp_fu_1202_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_1903_p2 == 1'd1))) begin
        select_ln117_reg_2558 <= select_ln117_fu_1925_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_1210_p2 == 1'd1))) begin
        select_ln73_1_reg_2057 <= select_ln73_1_fu_1240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln82_fu_1284_p2 == 1'd1))) begin
        select_ln85_1_reg_2086 <= select_ln85_1_fu_1314_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln94_fu_1365_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln94_1_reg_2248 <= select_ln94_1_fu_1395_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_reg_2233_pp2_iter5_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        temp_sum_0_1_fu_258 <= temp_sum_0_reg_2468;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_reg_2233_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        temp_sum_0_reg_2468 <= temp_sum_0_fu_1555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        temp_sum_10_1_fu_298 <= temp_sum_10_fu_1760_p2;
        temp_sum_11_1_fu_302 <= temp_sum_11_fu_1781_p2;
        temp_sum_12_1_fu_306 <= temp_sum_12_fu_1802_p2;
        temp_sum_13_1_fu_310 <= temp_sum_13_fu_1823_p2;
        temp_sum_14_1_fu_314 <= temp_sum_14_fu_1844_p2;
        temp_sum_15_1_fu_318 <= temp_sum_15_fu_1865_p2;
        temp_sum_1_1_fu_262 <= temp_sum_1_fu_1571_p2;
        temp_sum_2_1_fu_266 <= temp_sum_2_fu_1592_p2;
        temp_sum_3_1_fu_270 <= temp_sum_3_fu_1613_p2;
        temp_sum_4_1_fu_274 <= temp_sum_4_fu_1634_p2;
        temp_sum_5_1_fu_278 <= temp_sum_5_fu_1655_p2;
        temp_sum_6_1_fu_282 <= temp_sum_6_fu_1676_p2;
        temp_sum_7_1_fu_286 <= temp_sum_7_fu_1697_p2;
        temp_sum_8_1_fu_290 <= temp_sum_8_fu_1718_p2;
        temp_sum_9_1_fu_294 <= temp_sum_9_fu_1739_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_reg_2549 == 1'd1))) begin
        tmp_4_reg_2653 <= tmp_4_fu_1971_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_1903_p2 == 1'd1))) begin
        trunc_ln121_reg_2563 <= trunc_ln121_fu_1961_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln82_fu_1284_p2 == 1'd1))) begin
        trunc_ln89_reg_2092 <= trunc_ln89_fu_1322_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        A_address0 = sext_ln104_1_fu_1425_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        A_address0 = sext_ln77_fu_1276_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln70_reg_2048_pp0_iter1_reg == 1'd1))) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_0_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_0_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_0_ce0 = 1'b1;
    end else begin
        B_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_0_we0 = 1'b1;
    end else begin
        B_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_10_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_10_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_10_ce0 = 1'b1;
    end else begin
        B_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd10) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_10_we0 = 1'b1;
    end else begin
        B_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_11_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_11_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_11_ce0 = 1'b1;
    end else begin
        B_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd11) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_11_we0 = 1'b1;
    end else begin
        B_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_12_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_12_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_12_ce0 = 1'b1;
    end else begin
        B_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd12) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_12_we0 = 1'b1;
    end else begin
        B_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_13_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_13_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_13_ce0 = 1'b1;
    end else begin
        B_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd13) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_13_we0 = 1'b1;
    end else begin
        B_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_14_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_14_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_14_ce0 = 1'b1;
    end else begin
        B_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd14) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_14_we0 = 1'b1;
    end else begin
        B_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_15_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_15_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_15_ce0 = 1'b1;
    end else begin
        B_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd15) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_15_we0 = 1'b1;
    end else begin
        B_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_1_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_1_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_1_ce0 = 1'b1;
    end else begin
        B_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_1_we0 = 1'b1;
    end else begin
        B_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_2_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_2_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_2_ce0 = 1'b1;
    end else begin
        B_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_2_we0 = 1'b1;
    end else begin
        B_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_3_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_3_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_3_ce0 = 1'b1;
    end else begin
        B_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_3_we0 = 1'b1;
    end else begin
        B_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_4_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_4_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_4_ce0 = 1'b1;
    end else begin
        B_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_4_we0 = 1'b1;
    end else begin
        B_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_5_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_5_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_5_ce0 = 1'b1;
    end else begin
        B_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd5) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_5_we0 = 1'b1;
    end else begin
        B_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_6_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_6_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_6_ce0 = 1'b1;
    end else begin
        B_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_6_we0 = 1'b1;
    end else begin
        B_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_7_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_7_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_7_ce0 = 1'b1;
    end else begin
        B_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd7) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_7_we0 = 1'b1;
    end else begin
        B_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_8_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_8_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_8_ce0 = 1'b1;
    end else begin
        B_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd8) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_8_we0 = 1'b1;
    end else begin
        B_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        B_9_address0 = sext_ln104_fu_1446_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        B_9_address0 = sext_ln89_fu_1332_p1;
    end else begin
        B_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        B_9_ce0 = 1'b1;
    end else begin
        B_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln89_reg_2092_pp1_iter1_reg == 4'd9) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_9_we0 = 1'b1;
    end else begin
        B_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_0_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_0_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_0_ce0 = 1'b1;
    end else begin
        C_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_0_we0 = 1'b1;
    end else begin
        C_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_10_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_10_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_10_ce0 = 1'b1;
    end else begin
        C_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_10_we0 = 1'b1;
    end else begin
        C_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_11_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_11_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_11_ce0 = 1'b1;
    end else begin
        C_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_11_we0 = 1'b1;
    end else begin
        C_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_12_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_12_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_12_ce0 = 1'b1;
    end else begin
        C_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_12_we0 = 1'b1;
    end else begin
        C_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_13_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_13_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_13_ce0 = 1'b1;
    end else begin
        C_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_13_we0 = 1'b1;
    end else begin
        C_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_14_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_14_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_14_ce0 = 1'b1;
    end else begin
        C_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_14_we0 = 1'b1;
    end else begin
        C_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_15_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_15_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_15_ce0 = 1'b1;
    end else begin
        C_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_15_we0 = 1'b1;
    end else begin
        C_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_1_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_1_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_1_ce0 = 1'b1;
    end else begin
        C_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_1_we0 = 1'b1;
    end else begin
        C_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_2_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_2_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_2_ce0 = 1'b1;
    end else begin
        C_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_2_we0 = 1'b1;
    end else begin
        C_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_3_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_3_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_3_ce0 = 1'b1;
    end else begin
        C_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_3_we0 = 1'b1;
    end else begin
        C_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_4_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_4_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_4_ce0 = 1'b1;
    end else begin
        C_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_4_we0 = 1'b1;
    end else begin
        C_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_5_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_5_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_5_ce0 = 1'b1;
    end else begin
        C_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_5_we0 = 1'b1;
    end else begin
        C_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_6_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_6_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_6_ce0 = 1'b1;
    end else begin
        C_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_6_we0 = 1'b1;
    end else begin
        C_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_7_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_7_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_7_ce0 = 1'b1;
    end else begin
        C_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_7_we0 = 1'b1;
    end else begin
        C_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_8_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_8_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_8_ce0 = 1'b1;
    end else begin
        C_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_8_we0 = 1'b1;
    end else begin
        C_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        C_9_address0 = sext_ln121_fu_1941_p1;
    end else if (((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        C_9_address0 = zext_ln94_fu_1876_p1;
    end else begin
        C_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
        C_9_ce0 = 1'b1;
    end else begin
        C_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln106_reg_2259_pp2_iter5_reg == 1'd1))) begin
        C_9_we0 = 1'b1;
    end else begin
        C_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln70_fu_1210_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln82_fu_1284_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_fu_1365_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln114_fu_1903_p2 == 1'd0)) begin
        ap_condition_pp3_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln82_reg_2077 == 1'd1))) begin
        ap_phi_mux_i2_0_phi_fu_1058_p4 = select_ln85_1_reg_2086;
    end else begin
        ap_phi_mux_i2_0_phi_fu_1058_p4 = i2_0_reg_1054;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_reg_2549 == 1'd1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_i6_0_phi_fu_1124_p4 = select_ln117_reg_2558;
    end else begin
        ap_phi_mux_i6_0_phi_fu_1124_p4 = i6_0_reg_1120;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln70_reg_2048 == 1'd1))) begin
        ap_phi_mux_i_0_phi_fu_1025_p4 = select_ln73_1_reg_2057;
    end else begin
        ap_phi_mux_i_0_phi_fu_1025_p4 = i_0_reg_1021;
    end
end

always @ (*) begin
    if (((icmp_ln94_reg_2233 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_row_0_phi_fu_1091_p4 = select_ln94_1_reg_2248;
    end else begin
        ap_phi_mux_row_0_phi_fu_1091_p4 = row_0_reg_1087;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln94_reg_2233_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_temp_sum_0_1_load = temp_sum_0_reg_2468;
    end else begin
        ap_sig_allocacmp_temp_sum_0_1_load = temp_sum_0_1_fu_258;
    end
end

always @ (*) begin
    if ((gmem_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            gmem_ARADDR = gmem_addr_1_reg_2026;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            gmem_ARADDR = gmem_addr_2_reg_2032;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_reg_2048 == 1'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln82_reg_2077 == 1'd1)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln114_reg_2549_pp3_iter1_reg == 1'd1))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state16))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln70_reg_2048 == 1'd1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln82_reg_2077 == 1'd1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln114_reg_2549_pp3_iter1_reg == 1'd1) & (1'b0 == ap_block_pp3_stage0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b0) & (ap_ext_blocking_n == 1'b1))) begin
        stall_done_ext = 1'b1;
    end else begin
        stall_done_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b0) & (ap_int_blocking_n == 1'b1))) begin
        stall_done_int = 1'b1;
    end else begin
        stall_done_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b0) & (ap_str_blocking_n == 1'b1))) begin
        stall_done_str = 1'b1;
    end else begin
        stall_done_str = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n == 1'b0) & (ap_ext_blocking_n_reg == 1'b1))) begin
        stall_start_ext = 1'b1;
    end else begin
        stall_start_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n == 1'b0) & (ap_int_blocking_n_reg == 1'b1))) begin
        stall_start_int = 1'b1;
    end else begin
        stall_start_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n == 1'b0) & (ap_str_blocking_n_reg == 1'b1))) begin
        stall_start_str = 1'b1;
    end else begin
        stall_start_str = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln70_fu_1210_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln70_fu_1210_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln82_fu_1284_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln82_fu_1284_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln94_fu_1365_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter5 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter5 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln94_fu_1365_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln114_fu_1903_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln114_fu_1903_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((gmem_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_1419_p2 = (zext_ln104_cast_fu_1407_p3 + trunc_ln104_fu_1415_p1);

assign add_ln106_fu_1360_p2 = ($signed(size_read_reg_2008) + $signed(32'd4294967295));

assign add_ln77_fu_1264_p2 = (sext_ln77_1_cast_fu_1256_p3 + trunc_ln77_fu_1248_p1);

assign add_ln94_fu_1370_p2 = (indvar_flatten_reg_1076 + 64'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln70_reg_2048 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln70_reg_2048 == 1'd1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln82_reg_2077 == 1'd1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln82_reg_2077 == 1'd1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((1'b1 == ap_block_state40_io) & (ap_enable_reg_pp3_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((1'b1 == ap_block_state40_io) & (ap_enable_reg_pp3_iter2 == 1'b1));
end

assign ap_block_state13_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln70_reg_2048 == 1'd1));
end

assign ap_block_state15_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_pp1_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln82_reg_2077 == 1'd1));
end

assign ap_block_state25_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_io = ((gmem_WREADY == 1'b0) & (icmp_ln114_reg_2549_pp3_iter1_reg == 1'd1));
end

assign ap_block_state40_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_ext_blocking_cur_n = (gmem_blk_n_W & gmem_blk_n_R & gmem_blk_n_B & gmem_blk_n_AW & gmem_blk_n_AR);

assign ap_ext_blocking_n = (ap_ext_blocking_cur_n & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign col_fu_1435_p2 = ($signed(select_ln94_fu_1387_p3) + $signed(32'd1));

assign empty_5_fu_1172_p1 = in_fu_1162_p4;

assign empty_6_fu_1192_p1 = in3_fu_1182_p4;

assign empty_fu_1152_p1 = out_r5_fu_1142_p4;

assign event_done = ap_done;

assign grp_fu_1354_p0 = zext_ln106_fu_1351_p1;

assign grp_fu_1354_p1 = zext_ln106_fu_1351_p1;

assign i_1_fu_1300_p2 = (32'd1 + ap_phi_mux_i2_0_phi_fu_1058_p4);

assign i_2_fu_1919_p2 = (32'd1 + ap_phi_mux_i6_0_phi_fu_1124_p4);

assign i_fu_1226_p2 = (32'd1 + ap_phi_mux_i_0_phi_fu_1025_p4);

assign icmp_ln103_fu_1441_p2 = ((select_ln94_reg_2242 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_1430_p2 = ((select_ln94_fu_1387_p3 == add_ln106_reg_2223) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_1903_p2 = (($signed(zext_ln114_fu_1899_p1) < $signed(mul_ln70_reg_2038)) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_1914_p2 = ((j7_0_reg_1131 == size_read_reg_2008) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_1210_p2 = (($signed(zext_ln70_fu_1206_p1) < $signed(mul_ln70_reg_2038)) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_1221_p2 = ((j_0_reg_1010 == size_read_reg_2008) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1284_p2 = (($signed(zext_ln82_fu_1280_p1) < $signed(mul_ln70_reg_2038)) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_1295_p2 = ((j3_0_reg_1043 == size_read_reg_2008) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1365_p2 = ((indvar_flatten_reg_1076 == mul_ln106_reg_2228) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_1382_p2 = ((col_0_reg_1098 == size_read_reg_2008) ? 1'b1 : 1'b0);

assign in3_fu_1182_p4 = {{in1[63:2]}};

assign in_fu_1162_p4 = {{in2[63:2]}};

assign itr_1_fu_1289_p2 = (itr1_0_reg_1065 + 31'd1);

assign itr_2_fu_1908_p2 = (itr5_0_reg_1109 + 31'd1);

assign itr_fu_1215_p2 = (itr_0_reg_1032 + 31'd1);

assign j_1_fu_1326_p2 = (select_ln85_fu_1306_p3 + 32'd1);

assign j_2_fu_1965_p2 = (32'd1 + select_ln117_1_fu_1933_p3);

assign j_fu_1270_p2 = (32'd1 + select_ln73_fu_1232_p3);

assign out_r5_fu_1142_p4 = {{out_r[63:2]}};

assign row_fu_1376_p2 = (31'd1 + ap_phi_mux_row_0_phi_fu_1091_p4);

assign select_ln103_10_fu_1753_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_10_1_fu_298);

assign select_ln103_11_fu_1774_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_11_1_fu_302);

assign select_ln103_12_fu_1795_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_12_1_fu_306);

assign select_ln103_13_fu_1816_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_13_1_fu_310);

assign select_ln103_14_fu_1837_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_14_1_fu_314);

assign select_ln103_15_fu_1858_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_15_1_fu_318);

assign select_ln103_1_fu_1564_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_1_1_fu_262);

assign select_ln103_2_fu_1585_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_2_1_fu_266);

assign select_ln103_3_fu_1606_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_3_1_fu_270);

assign select_ln103_4_fu_1627_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_4_1_fu_274);

assign select_ln103_5_fu_1648_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_5_1_fu_278);

assign select_ln103_6_fu_1669_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_6_1_fu_282);

assign select_ln103_7_fu_1690_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_7_1_fu_286);

assign select_ln103_8_fu_1711_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_8_1_fu_290);

assign select_ln103_9_fu_1732_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : temp_sum_9_1_fu_294);

assign select_ln103_fu_1548_p3 = ((icmp_ln103_reg_2268_pp2_iter4_reg[0:0] === 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sum_0_1_load);

assign select_ln117_1_fu_1933_p3 = ((icmp_ln117_fu_1914_p2[0:0] === 1'b1) ? 32'd0 : j7_0_reg_1131);

assign select_ln117_fu_1925_p3 = ((icmp_ln117_fu_1914_p2[0:0] === 1'b1) ? i_2_fu_1919_p2 : ap_phi_mux_i6_0_phi_fu_1124_p4);

assign select_ln73_1_fu_1240_p3 = ((icmp_ln73_fu_1221_p2[0:0] === 1'b1) ? i_fu_1226_p2 : ap_phi_mux_i_0_phi_fu_1025_p4);

assign select_ln73_fu_1232_p3 = ((icmp_ln73_fu_1221_p2[0:0] === 1'b1) ? 32'd0 : j_0_reg_1010);

assign select_ln85_1_fu_1314_p3 = ((icmp_ln85_fu_1295_p2[0:0] === 1'b1) ? i_1_fu_1300_p2 : ap_phi_mux_i2_0_phi_fu_1058_p4);

assign select_ln85_fu_1306_p3 = ((icmp_ln85_fu_1295_p2[0:0] === 1'b1) ? 32'd0 : j3_0_reg_1043);

assign select_ln94_1_fu_1395_p3 = ((icmp_ln97_fu_1382_p2[0:0] === 1'b1) ? row_fu_1376_p2 : ap_phi_mux_row_0_phi_fu_1091_p4);

assign select_ln94_fu_1387_p3 = ((icmp_ln97_fu_1382_p2[0:0] === 1'b1) ? 32'd0 : col_0_reg_1098);

assign sext_ln104_1_fu_1425_p1 = $signed(add_ln104_fu_1419_p2);

assign sext_ln104_fu_1446_p1 = select_ln94_reg_2242;

assign sext_ln121_fu_1941_p1 = select_ln117_fu_1925_p3;

assign sext_ln77_1_cast_fu_1256_p3 = {{trunc_ln77_1_fu_1252_p1}, {4'd0}};

assign sext_ln77_fu_1276_p1 = $signed(add_ln77_reg_2062_pp0_iter1_reg);

assign sext_ln89_fu_1332_p1 = select_ln85_1_reg_2086_pp1_iter1_reg;

assign temp_sum_0_fu_1555_p2 = (grp_fu_1465_p2 + select_ln103_fu_1548_p3);

assign temp_sum_10_fu_1760_p2 = (select_ln103_10_fu_1753_p3 + grp_fu_1515_p2);

assign temp_sum_11_fu_1781_p2 = (select_ln103_11_fu_1774_p3 + grp_fu_1520_p2);

assign temp_sum_12_fu_1802_p2 = (select_ln103_12_fu_1795_p3 + grp_fu_1525_p2);

assign temp_sum_13_fu_1823_p2 = (select_ln103_13_fu_1816_p3 + grp_fu_1530_p2);

assign temp_sum_14_fu_1844_p2 = (select_ln103_14_fu_1837_p3 + grp_fu_1535_p2);

assign temp_sum_15_fu_1865_p2 = (select_ln103_15_fu_1858_p3 + grp_fu_1540_p2);

assign temp_sum_1_fu_1571_p2 = (select_ln103_1_fu_1564_p3 + grp_fu_1470_p2);

assign temp_sum_2_fu_1592_p2 = (select_ln103_2_fu_1585_p3 + grp_fu_1475_p2);

assign temp_sum_3_fu_1613_p2 = (select_ln103_3_fu_1606_p3 + grp_fu_1480_p2);

assign temp_sum_4_fu_1634_p2 = (select_ln103_4_fu_1627_p3 + grp_fu_1485_p2);

assign temp_sum_5_fu_1655_p2 = (select_ln103_5_fu_1648_p3 + grp_fu_1490_p2);

assign temp_sum_6_fu_1676_p2 = (select_ln103_6_fu_1669_p3 + grp_fu_1495_p2);

assign temp_sum_7_fu_1697_p2 = (select_ln103_7_fu_1690_p3 + grp_fu_1500_p2);

assign temp_sum_8_fu_1718_p2 = (select_ln103_8_fu_1711_p3 + grp_fu_1505_p2);

assign temp_sum_9_fu_1739_p2 = (select_ln103_9_fu_1732_p3 + grp_fu_1510_p2);

assign trunc_ln104_fu_1415_p1 = select_ln94_fu_1387_p3[9:0];

assign trunc_ln121_fu_1961_p1 = select_ln117_1_fu_1933_p3[3:0];

assign trunc_ln77_1_fu_1252_p1 = select_ln73_1_fu_1240_p3[5:0];

assign trunc_ln77_fu_1248_p1 = select_ln73_fu_1232_p3[9:0];

assign trunc_ln89_fu_1322_p1 = select_ln85_fu_1306_p3[3:0];

assign trunc_ln97_fu_1403_p1 = select_ln94_1_fu_1395_p3[5:0];

assign zext_ln104_cast_fu_1407_p3 = {{trunc_ln97_fu_1403_p1}, {4'd0}};

assign zext_ln106_fu_1351_p1 = $unsigned(size_read_reg_2008);

assign zext_ln114_fu_1899_p1 = itr5_0_reg_1109;

assign zext_ln70_fu_1206_p1 = itr_0_reg_1032;

assign zext_ln82_fu_1280_p1 = itr1_0_reg_1065;

assign zext_ln94_fu_1876_p1 = select_ln94_1_reg_2248_pp2_iter5_reg;

always @ (posedge ap_clk) begin
    gmem_addr_reg_2020[63:62] <= 2'b00;
    gmem_addr_1_reg_2026[63:62] <= 2'b00;
    gmem_addr_2_reg_2032[63:62] <= 2'b00;
    ap_str_blocking_n_reg <= 1'b1;
    ap_int_blocking_n_reg <= 1'b1;
end

endmodule //matmul_partition_matmul_partition
