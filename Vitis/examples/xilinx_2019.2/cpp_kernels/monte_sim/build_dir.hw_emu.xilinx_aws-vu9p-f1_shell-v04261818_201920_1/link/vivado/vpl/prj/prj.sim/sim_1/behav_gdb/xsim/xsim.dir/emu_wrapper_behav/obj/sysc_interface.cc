#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 5 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 34 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 35 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(524);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[5346].first = 1;
        (*_glb_hdl_sc_channel_map)[5346].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[5329].first = 1;
        (*_glb_hdl_sc_channel_map)[5329].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[5359].first = 1;
        (*_glb_hdl_sc_channel_map)[5359].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[5358].first = 1;
        (*_glb_hdl_sc_channel_map)[5358].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[5292].first = 1;
        (*_glb_hdl_sc_channel_map)[5292].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[5291].first = 1;
        (*_glb_hdl_sc_channel_map)[5291].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(9233904);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[5360].first = 3;
        (*_glb_hdl_sc_channel_map)[5360].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[5378].first = 1;
        (*_glb_hdl_sc_channel_map)[5378].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[5372].first = 3;
        (*_glb_hdl_sc_channel_map)[5372].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[5366].first = 3;
        (*_glb_hdl_sc_channel_map)[5366].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[5390].first = 1;
        (*_glb_hdl_sc_channel_map)[5390].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(9234240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(9234296);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[5379].first = 1;
        (*_glb_hdl_sc_channel_map)[5379].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[5373].first = 3;
        (*_glb_hdl_sc_channel_map)[5373].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[5367].first = 3;
        (*_glb_hdl_sc_channel_map)[5367].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[5391].first = 1;
        (*_glb_hdl_sc_channel_map)[5391].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[5362].first = 3;
        (*_glb_hdl_sc_channel_map)[5362].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(9234632);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[5380].first = 1;
        (*_glb_hdl_sc_channel_map)[5380].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[5374].first = 3;
        (*_glb_hdl_sc_channel_map)[5374].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[5368].first = 3;
        (*_glb_hdl_sc_channel_map)[5368].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[5392].first = 1;
        (*_glb_hdl_sc_channel_map)[5392].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map)[5363].first = 3;
        (*_glb_hdl_sc_channel_map)[5363].second.push_front(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(9234968);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map)[5381].first = 1;
        (*_glb_hdl_sc_channel_map)[5381].second.push_front(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map)[5375].first = 3;
        (*_glb_hdl_sc_channel_map)[5375].second.push_front(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map)[5369].first = 3;
        (*_glb_hdl_sc_channel_map)[5369].second.push_front(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map)[5393].first = 1;
        (*_glb_hdl_sc_channel_map)[5393].second.push_front(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map)[5364].first = 3;
        (*_glb_hdl_sc_channel_map)[5364].second.push_front(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(9235304);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map)[5382].first = 1;
        (*_glb_hdl_sc_channel_map)[5382].second.push_front(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map)[5376].first = 3;
        (*_glb_hdl_sc_channel_map)[5376].second.push_front(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map)[5370].first = 3;
        (*_glb_hdl_sc_channel_map)[5370].second.push_front(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map)[5394].first = 1;
        (*_glb_hdl_sc_channel_map)[5394].second.push_front(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map)[5365].first = 3;
        (*_glb_hdl_sc_channel_map)[5365].second.push_front(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(9235640);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map)[5383].first = 1;
        (*_glb_hdl_sc_channel_map)[5383].second.push_front(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map)[5377].first = 3;
        (*_glb_hdl_sc_channel_map)[5377].second.push_front(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map)[5371].first = 3;
        (*_glb_hdl_sc_channel_map)[5371].second.push_front(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map)[5395].first = 1;
        (*_glb_hdl_sc_channel_map)[5395].second.push_front(p_1_trace_tvalid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5296].first = 3;
        (*_glb_hdl_sc_channel_map)[5296].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5298].first = 1;
        (*_glb_hdl_sc_channel_map)[5298].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(9236032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5306].first = 3;
        (*_glb_hdl_sc_channel_map)[5306].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5308].first = 3;
        (*_glb_hdl_sc_channel_map)[5308].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5309].first = 1;
        (*_glb_hdl_sc_channel_map)[5309].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(9236256);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(9236312);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5299].first = 1;
        (*_glb_hdl_sc_channel_map)[5299].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(9236424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5293].first = 3;
        (*_glb_hdl_sc_channel_map)[5293].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5295].first = 1;
        (*_glb_hdl_sc_channel_map)[5295].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(9236592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(9236648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(9236704);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(9236760);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5303].first = 1;
        (*_glb_hdl_sc_channel_map)[5303].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[5313].first = 3;
        (*_glb_hdl_sc_channel_map)[5313].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[5315].first = 1;
        (*_glb_hdl_sc_channel_map)[5315].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(9236984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[5323].first = 3;
        (*_glb_hdl_sc_channel_map)[5323].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[5325].first = 3;
        (*_glb_hdl_sc_channel_map)[5325].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[5326].first = 1;
        (*_glb_hdl_sc_channel_map)[5326].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(9237208);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(9237264);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[5316].first = 1;
        (*_glb_hdl_sc_channel_map)[5316].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(9237376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[5310].first = 3;
        (*_glb_hdl_sc_channel_map)[5310].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[5312].first = 1;
        (*_glb_hdl_sc_channel_map)[5312].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(9237544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(9237600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(9237656);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(9237712);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[5320].first = 1;
        (*_glb_hdl_sc_channel_map)[5320].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[5335].first = 3;
        (*_glb_hdl_sc_channel_map)[5335].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[5341].first = 1;
        (*_glb_hdl_sc_channel_map)[5341].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(9237936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[5338].first = 3;
        (*_glb_hdl_sc_channel_map)[5338].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[5340].first = 3;
        (*_glb_hdl_sc_channel_map)[5340].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[5336].first = 3;
        (*_glb_hdl_sc_channel_map)[5336].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[5337].first = 3;
        (*_glb_hdl_sc_channel_map)[5337].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[5353].first = 3;
        (*_glb_hdl_sc_channel_map)[5353].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[5356].first = 3;
        (*_glb_hdl_sc_channel_map)[5356].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[5357].first = 1;
        (*_glb_hdl_sc_channel_map)[5357].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(9238384);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(9238440);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[5343].first = 1;
        (*_glb_hdl_sc_channel_map)[5343].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[5354].first = 1;
        (*_glb_hdl_sc_channel_map)[5354].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(9238608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(9238664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(9238720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[5327].first = 3;
        (*_glb_hdl_sc_channel_map)[5327].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[5334].first = 1;
        (*_glb_hdl_sc_channel_map)[5334].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(9238888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[5331].first = 3;
        (*_glb_hdl_sc_channel_map)[5331].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[5333].first = 3;
        (*_glb_hdl_sc_channel_map)[5333].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[5328].first = 3;
        (*_glb_hdl_sc_channel_map)[5328].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[5330].first = 3;
        (*_glb_hdl_sc_channel_map)[5330].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(9239168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(9239224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(9239280);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(9239336);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[5350].first = 1;
        (*_glb_hdl_sc_channel_map)[5350].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(525);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[5417].first = 1;
        (*_glb_hdl_sc_channel_map)[5417].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5418].first = 1;
        (*_glb_hdl_sc_channel_map)[5418].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[5438].first = 1;
        (*_glb_hdl_sc_channel_map)[5438].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[5439].first = 1;
        (*_glb_hdl_sc_channel_map)[5439].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5423].first = 3;
        (*_glb_hdl_sc_channel_map)[5423].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5424].first = 3;
        (*_glb_hdl_sc_channel_map)[5424].second.push_front(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5426].first = 1;
        (*_glb_hdl_sc_channel_map)[5426].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(9239888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5434].first = 3;
        (*_glb_hdl_sc_channel_map)[5434].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5436].first = 3;
        (*_glb_hdl_sc_channel_map)[5436].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5437].first = 1;
        (*_glb_hdl_sc_channel_map)[5437].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(9240112);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(9240168);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5427].first = 1;
        (*_glb_hdl_sc_channel_map)[5427].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(9240280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5419].first = 3;
        (*_glb_hdl_sc_channel_map)[5419].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5420].first = 3;
        (*_glb_hdl_sc_channel_map)[5420].second.push_front(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5422].first = 1;
        (*_glb_hdl_sc_channel_map)[5422].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(9240504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(9240560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(9240616);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(9240672);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5431].first = 1;
        (*_glb_hdl_sc_channel_map)[5431].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5405].first = 1;
        (*_glb_hdl_sc_channel_map)[5405].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5404].first = 1;
        (*_glb_hdl_sc_channel_map)[5404].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1575].first = 3;
        (*_glb_hdl_sc_channel_map)[1575].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5416].first = 1;
        (*_glb_hdl_sc_channel_map)[5416].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5414].first = 1;
        (*_glb_hdl_sc_channel_map)[5414].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5413].first = 3;
        (*_glb_hdl_sc_channel_map)[5413].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5415].first = 3;
        (*_glb_hdl_sc_channel_map)[5415].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5403].first = 1;
        (*_glb_hdl_sc_channel_map)[5403].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5402].first = 1;
        (*_glb_hdl_sc_channel_map)[5402].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1576].first = 3;
        (*_glb_hdl_sc_channel_map)[1576].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5412].first = 1;
        (*_glb_hdl_sc_channel_map)[5412].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5410].first = 1;
        (*_glb_hdl_sc_channel_map)[5410].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5409].first = 3;
        (*_glb_hdl_sc_channel_map)[5409].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5411].first = 3;
        (*_glb_hdl_sc_channel_map)[5411].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5408].first = 1;
        (*_glb_hdl_sc_channel_map)[5408].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5406].first = 1;
        (*_glb_hdl_sc_channel_map)[5406].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5407].first = 3;
        (*_glb_hdl_sc_channel_map)[5407].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[5400].first = 3;
        (*_glb_hdl_sc_channel_map)[5400].second.push_front(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(9241792);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(9241848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(9241904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(9241960);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(9242016);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(526);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[5477].first = 1;
        (*_glb_hdl_sc_channel_map)[5477].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5478].first = 1;
        (*_glb_hdl_sc_channel_map)[5478].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[5513].first = 1;
        (*_glb_hdl_sc_channel_map)[5513].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[5514].first = 1;
        (*_glb_hdl_sc_channel_map)[5514].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5485].first = 3;
        (*_glb_hdl_sc_channel_map)[5485].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5489].first = 1;
        (*_glb_hdl_sc_channel_map)[5489].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(9242456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5505].first = 3;
        (*_glb_hdl_sc_channel_map)[5505].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5509].first = 3;
        (*_glb_hdl_sc_channel_map)[5509].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5511].first = 1;
        (*_glb_hdl_sc_channel_map)[5511].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(9242680);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(9242736);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5491].first = 1;
        (*_glb_hdl_sc_channel_map)[5491].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(9242848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5479].first = 3;
        (*_glb_hdl_sc_channel_map)[5479].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5483].first = 1;
        (*_glb_hdl_sc_channel_map)[5483].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(9243016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(9243072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(9243128);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(9243184);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5499].first = 1;
        (*_glb_hdl_sc_channel_map)[5499].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5461].first = 1;
        (*_glb_hdl_sc_channel_map)[5461].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5459].first = 1;
        (*_glb_hdl_sc_channel_map)[5459].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5457].first = 3;
        (*_glb_hdl_sc_channel_map)[5457].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1571].first = 3;
        (*_glb_hdl_sc_channel_map)[1571].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5458].first = 3;
        (*_glb_hdl_sc_channel_map)[5458].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5460].first = 3;
        (*_glb_hdl_sc_channel_map)[5460].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1572].first = 3;
        (*_glb_hdl_sc_channel_map)[1572].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5476].first = 1;
        (*_glb_hdl_sc_channel_map)[5476].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5474].first = 1;
        (*_glb_hdl_sc_channel_map)[5474].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5472].first = 3;
        (*_glb_hdl_sc_channel_map)[5472].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5475].first = 3;
        (*_glb_hdl_sc_channel_map)[5475].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5473].first = 1;
        (*_glb_hdl_sc_channel_map)[5473].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5456].first = 1;
        (*_glb_hdl_sc_channel_map)[5456].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5454].first = 1;
        (*_glb_hdl_sc_channel_map)[5454].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5452].first = 3;
        (*_glb_hdl_sc_channel_map)[5452].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1573].first = 3;
        (*_glb_hdl_sc_channel_map)[1573].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5453].first = 3;
        (*_glb_hdl_sc_channel_map)[5453].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5455].first = 3;
        (*_glb_hdl_sc_channel_map)[5455].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1574].first = 3;
        (*_glb_hdl_sc_channel_map)[1574].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5471].first = 1;
        (*_glb_hdl_sc_channel_map)[5471].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5469].first = 1;
        (*_glb_hdl_sc_channel_map)[5469].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5466].first = 3;
        (*_glb_hdl_sc_channel_map)[5466].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5468].first = 1;
        (*_glb_hdl_sc_channel_map)[5468].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[5467].first = 3;
        (*_glb_hdl_sc_channel_map)[5467].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5470].first = 3;
        (*_glb_hdl_sc_channel_map)[5470].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5465].first = 1;
        (*_glb_hdl_sc_channel_map)[5465].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5463].first = 1;
        (*_glb_hdl_sc_channel_map)[5463].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5464].first = 3;
        (*_glb_hdl_sc_channel_map)[5464].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[5462].first = 3;
        (*_glb_hdl_sc_channel_map)[5462].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5444].first = 1;
        (*_glb_hdl_sc_channel_map)[5444].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(9244976);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(9245032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(9245088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(9245144);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5450].first = 1;
        (*_glb_hdl_sc_channel_map)[5450].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(9245256);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(9245312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(9245368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(9245424);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(9245480);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(9245536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1569].first = 3;
        (*_glb_hdl_sc_channel_map)[1569].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5486].first = 3;
        (*_glb_hdl_sc_channel_map)[5486].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5490].first = 1;
        (*_glb_hdl_sc_channel_map)[5490].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5488].first = 1;
        (*_glb_hdl_sc_channel_map)[5488].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5506].first = 3;
        (*_glb_hdl_sc_channel_map)[5506].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5510].first = 3;
        (*_glb_hdl_sc_channel_map)[5510].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5512].first = 1;
        (*_glb_hdl_sc_channel_map)[5512].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5508].first = 1;
        (*_glb_hdl_sc_channel_map)[5508].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5494].first = 3;
        (*_glb_hdl_sc_channel_map)[5494].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5496].first = 1;
        (*_glb_hdl_sc_channel_map)[5496].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5492].first = 1;
        (*_glb_hdl_sc_channel_map)[5492].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1570].first = 3;
        (*_glb_hdl_sc_channel_map)[1570].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5480].first = 3;
        (*_glb_hdl_sc_channel_map)[5480].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5484].first = 1;
        (*_glb_hdl_sc_channel_map)[5484].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5482].first = 1;
        (*_glb_hdl_sc_channel_map)[5482].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5498].first = 3;
        (*_glb_hdl_sc_channel_map)[5498].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5502].first = 3;
        (*_glb_hdl_sc_channel_map)[5502].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5504].first = 1;
        (*_glb_hdl_sc_channel_map)[5504].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5500].first = 1;
        (*_glb_hdl_sc_channel_map)[5500].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(527);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map)[5536].first = 1;
        (*_glb_hdl_sc_channel_map)[5536].second.push_front(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5537].first = 1;
        (*_glb_hdl_sc_channel_map)[5537].second.push_front(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map)[5557].first = 1;
        (*_glb_hdl_sc_channel_map)[5557].second.push_front(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map)[5558].first = 1;
        (*_glb_hdl_sc_channel_map)[5558].second.push_front(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5542].first = 3;
        (*_glb_hdl_sc_channel_map)[5542].second.push_front(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5543].first = 3;
        (*_glb_hdl_sc_channel_map)[5543].second.push_front(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5545].first = 1;
        (*_glb_hdl_sc_channel_map)[5545].second.push_front(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(9247096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5553].first = 3;
        (*_glb_hdl_sc_channel_map)[5553].second.push_front(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5555].first = 3;
        (*_glb_hdl_sc_channel_map)[5555].second.push_front(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5556].first = 1;
        (*_glb_hdl_sc_channel_map)[5556].second.push_front(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(9247320);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(9247376);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5546].first = 1;
        (*_glb_hdl_sc_channel_map)[5546].second.push_front(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(9247488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5538].first = 3;
        (*_glb_hdl_sc_channel_map)[5538].second.push_front(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5539].first = 3;
        (*_glb_hdl_sc_channel_map)[5539].second.push_front(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5541].first = 1;
        (*_glb_hdl_sc_channel_map)[5541].second.push_front(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(9247712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(9247768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(9247824);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(9247880);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5550].first = 1;
        (*_glb_hdl_sc_channel_map)[5550].second.push_front(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5524].first = 1;
        (*_glb_hdl_sc_channel_map)[5524].second.push_front(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5523].first = 1;
        (*_glb_hdl_sc_channel_map)[5523].second.push_front(p_4_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1567].first = 3;
        (*_glb_hdl_sc_channel_map)[1567].second.push_front(p_4_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5535].first = 1;
        (*_glb_hdl_sc_channel_map)[5535].second.push_front(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5533].first = 1;
        (*_glb_hdl_sc_channel_map)[5533].second.push_front(p_4_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5532].first = 3;
        (*_glb_hdl_sc_channel_map)[5532].second.push_front(p_4_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5534].first = 3;
        (*_glb_hdl_sc_channel_map)[5534].second.push_front(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5522].first = 1;
        (*_glb_hdl_sc_channel_map)[5522].second.push_front(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5521].first = 1;
        (*_glb_hdl_sc_channel_map)[5521].second.push_front(p_4_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1568].first = 3;
        (*_glb_hdl_sc_channel_map)[1568].second.push_front(p_4_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5531].first = 1;
        (*_glb_hdl_sc_channel_map)[5531].second.push_front(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5529].first = 1;
        (*_glb_hdl_sc_channel_map)[5529].second.push_front(p_4_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5528].first = 3;
        (*_glb_hdl_sc_channel_map)[5528].second.push_front(p_4_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5530].first = 3;
        (*_glb_hdl_sc_channel_map)[5530].second.push_front(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5527].first = 1;
        (*_glb_hdl_sc_channel_map)[5527].second.push_front(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5525].first = 1;
        (*_glb_hdl_sc_channel_map)[5525].second.push_front(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5526].first = 3;
        (*_glb_hdl_sc_channel_map)[5526].second.push_front(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->m_axis_tready.bind(*p_4_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[5519].first = 3;
        (*_glb_hdl_sc_channel_map)[5519].second.push_front(p_4_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_tdata.bind(*p_4_m_axis_tdata);
        p_4_m_axis_tdata->set_sv_netview_offsetfromdp(9249000);
        xsim_sc_channel<0, bool > *p_4_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_tlast.bind(*p_4_m_axis_tlast);
        p_4_m_axis_tlast->set_sv_netview_offsetfromdp(9249056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_tid.bind(*p_4_m_axis_tid);
        p_4_m_axis_tid->set_sv_netview_offsetfromdp(9249112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_tdest.bind(*p_4_m_axis_tdest);
        p_4_m_axis_tdest->set_sv_netview_offsetfromdp(9249168);
        xsim_sc_channel<0, bool > *p_4_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_tvalid.bind(*p_4_m_axis_tvalid);
        p_4_m_axis_tvalid->set_sv_netview_offsetfromdp(9249224);
        sc_inst_5 = new pfm_dynamic_dpa_mon3_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon3");
        sc_inst_5->xsim_set_dbg_index(528);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map)[5596].first = 1;
        (*_glb_hdl_sc_channel_map)[5596].second.push_front(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5597].first = 1;
        (*_glb_hdl_sc_channel_map)[5597].second.push_front(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map)[5632].first = 1;
        (*_glb_hdl_sc_channel_map)[5632].second.push_front(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map)[5633].first = 1;
        (*_glb_hdl_sc_channel_map)[5633].second.push_front(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5604].first = 3;
        (*_glb_hdl_sc_channel_map)[5604].second.push_front(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5608].first = 1;
        (*_glb_hdl_sc_channel_map)[5608].second.push_front(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(9249664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5624].first = 3;
        (*_glb_hdl_sc_channel_map)[5624].second.push_front(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5628].first = 3;
        (*_glb_hdl_sc_channel_map)[5628].second.push_front(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5630].first = 1;
        (*_glb_hdl_sc_channel_map)[5630].second.push_front(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(9249888);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(9249944);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5610].first = 1;
        (*_glb_hdl_sc_channel_map)[5610].second.push_front(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(9250056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5598].first = 3;
        (*_glb_hdl_sc_channel_map)[5598].second.push_front(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5602].first = 1;
        (*_glb_hdl_sc_channel_map)[5602].second.push_front(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(9250224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(9250280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(9250336);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(9250392);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5618].first = 1;
        (*_glb_hdl_sc_channel_map)[5618].second.push_front(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5580].first = 1;
        (*_glb_hdl_sc_channel_map)[5580].second.push_front(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5578].first = 1;
        (*_glb_hdl_sc_channel_map)[5578].second.push_front(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5576].first = 3;
        (*_glb_hdl_sc_channel_map)[5576].second.push_front(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1563].first = 3;
        (*_glb_hdl_sc_channel_map)[1563].second.push_front(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5577].first = 3;
        (*_glb_hdl_sc_channel_map)[5577].second.push_front(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5579].first = 3;
        (*_glb_hdl_sc_channel_map)[5579].second.push_front(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1564].first = 3;
        (*_glb_hdl_sc_channel_map)[1564].second.push_front(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5595].first = 1;
        (*_glb_hdl_sc_channel_map)[5595].second.push_front(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5593].first = 1;
        (*_glb_hdl_sc_channel_map)[5593].second.push_front(p_5_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5591].first = 3;
        (*_glb_hdl_sc_channel_map)[5591].second.push_front(p_5_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5594].first = 3;
        (*_glb_hdl_sc_channel_map)[5594].second.push_front(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5592].first = 1;
        (*_glb_hdl_sc_channel_map)[5592].second.push_front(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5575].first = 1;
        (*_glb_hdl_sc_channel_map)[5575].second.push_front(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5573].first = 1;
        (*_glb_hdl_sc_channel_map)[5573].second.push_front(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5571].first = 3;
        (*_glb_hdl_sc_channel_map)[5571].second.push_front(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1565].first = 3;
        (*_glb_hdl_sc_channel_map)[1565].second.push_front(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5572].first = 3;
        (*_glb_hdl_sc_channel_map)[5572].second.push_front(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5574].first = 3;
        (*_glb_hdl_sc_channel_map)[5574].second.push_front(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1566].first = 3;
        (*_glb_hdl_sc_channel_map)[1566].second.push_front(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5590].first = 1;
        (*_glb_hdl_sc_channel_map)[5590].second.push_front(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5588].first = 1;
        (*_glb_hdl_sc_channel_map)[5588].second.push_front(p_5_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5585].first = 3;
        (*_glb_hdl_sc_channel_map)[5585].second.push_front(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5587].first = 1;
        (*_glb_hdl_sc_channel_map)[5587].second.push_front(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map)[5586].first = 3;
        (*_glb_hdl_sc_channel_map)[5586].second.push_front(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5589].first = 3;
        (*_glb_hdl_sc_channel_map)[5589].second.push_front(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5584].first = 1;
        (*_glb_hdl_sc_channel_map)[5584].second.push_front(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5582].first = 1;
        (*_glb_hdl_sc_channel_map)[5582].second.push_front(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5583].first = 3;
        (*_glb_hdl_sc_channel_map)[5583].second.push_front(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map)[5581].first = 3;
        (*_glb_hdl_sc_channel_map)[5581].second.push_front(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5563].first = 1;
        (*_glb_hdl_sc_channel_map)[5563].second.push_front(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(9252184);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(9252240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(9252296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(9252352);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5569].first = 1;
        (*_glb_hdl_sc_channel_map)[5569].second.push_front(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(9252464);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(9252520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(9252576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(9252632);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(9252688);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(9252744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1561].first = 3;
        (*_glb_hdl_sc_channel_map)[1561].second.push_front(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5605].first = 3;
        (*_glb_hdl_sc_channel_map)[5605].second.push_front(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5609].first = 1;
        (*_glb_hdl_sc_channel_map)[5609].second.push_front(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5607].first = 1;
        (*_glb_hdl_sc_channel_map)[5607].second.push_front(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5625].first = 3;
        (*_glb_hdl_sc_channel_map)[5625].second.push_front(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5629].first = 3;
        (*_glb_hdl_sc_channel_map)[5629].second.push_front(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5631].first = 1;
        (*_glb_hdl_sc_channel_map)[5631].second.push_front(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5627].first = 1;
        (*_glb_hdl_sc_channel_map)[5627].second.push_front(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5613].first = 3;
        (*_glb_hdl_sc_channel_map)[5613].second.push_front(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5615].first = 1;
        (*_glb_hdl_sc_channel_map)[5615].second.push_front(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5611].first = 1;
        (*_glb_hdl_sc_channel_map)[5611].second.push_front(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1562].first = 3;
        (*_glb_hdl_sc_channel_map)[1562].second.push_front(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5599].first = 3;
        (*_glb_hdl_sc_channel_map)[5599].second.push_front(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5603].first = 1;
        (*_glb_hdl_sc_channel_map)[5603].second.push_front(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5601].first = 1;
        (*_glb_hdl_sc_channel_map)[5601].second.push_front(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5617].first = 3;
        (*_glb_hdl_sc_channel_map)[5617].second.push_front(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5621].first = 3;
        (*_glb_hdl_sc_channel_map)[5621].second.push_front(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5623].first = 1;
        (*_glb_hdl_sc_channel_map)[5623].second.push_front(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5619].first = 1;
        (*_glb_hdl_sc_channel_map)[5619].second.push_front(p_5_s_axi_rready_mon);
        sc_inst_6 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_6->xsim_set_dbg_index(20);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map)[6064].first = 1;
        (*_glb_hdl_sc_channel_map)[6064].second.push_front(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk1.bind(*p_6_aclk1);
        (*_glb_hdl_sc_channel_map)[6065].first = 1;
        (*_glb_hdl_sc_channel_map)[6065].second.push_front(p_6_aclk1);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map)[6066].first = 1;
        (*_glb_hdl_sc_channel_map)[6066].second.push_front(p_6_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awid.bind(*p_6_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5849].first = 3;
        (*_glb_hdl_sc_channel_map)[5849].second.push_front(p_6_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_awaddr.bind(*p_6_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5846].first = 3;
        (*_glb_hdl_sc_channel_map)[5846].second.push_front(p_6_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_awlen.bind(*p_6_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5850].first = 3;
        (*_glb_hdl_sc_channel_map)[5850].second.push_front(p_6_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awsize.bind(*p_6_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5855].first = 3;
        (*_glb_hdl_sc_channel_map)[5855].second.push_front(p_6_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_awburst.bind(*p_6_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5847].first = 3;
        (*_glb_hdl_sc_channel_map)[5847].second.push_front(p_6_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_awlock.bind(*p_6_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5851].first = 1;
        (*_glb_hdl_sc_channel_map)[5851].second.push_front(p_6_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awcache.bind(*p_6_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5848].first = 3;
        (*_glb_hdl_sc_channel_map)[5848].second.push_front(p_6_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awprot.bind(*p_6_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5852].first = 3;
        (*_glb_hdl_sc_channel_map)[5852].second.push_front(p_6_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awqos.bind(*p_6_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5853].first = 3;
        (*_glb_hdl_sc_channel_map)[5853].second.push_front(p_6_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awuser.bind(*p_6_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5856].first = 3;
        (*_glb_hdl_sc_channel_map)[5856].second.push_front(p_6_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awvalid.bind(*p_6_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5857].first = 3;
        (*_glb_hdl_sc_channel_map)[5857].second.push_front(p_6_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awready.bind(*p_6_S00_AXI_awready);
        p_6_S00_AXI_awready->set_sv_netview_offsetfromdp(9279104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_wdata.bind(*p_6_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5870].first = 3;
        (*_glb_hdl_sc_channel_map)[5870].second.push_front(p_6_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_wstrb.bind(*p_6_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5873].first = 3;
        (*_glb_hdl_sc_channel_map)[5873].second.push_front(p_6_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wlast.bind(*p_6_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5871].first = 3;
        (*_glb_hdl_sc_channel_map)[5871].second.push_front(p_6_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wuser.bind(*p_6_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[5874].first = 3;
        (*_glb_hdl_sc_channel_map)[5874].second.push_front(p_6_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wvalid.bind(*p_6_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5875].first = 3;
        (*_glb_hdl_sc_channel_map)[5875].second.push_front(p_6_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wready.bind(*p_6_S00_AXI_wready);
        p_6_S00_AXI_wready->set_sv_netview_offsetfromdp(9279440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bid.bind(*p_6_S00_AXI_bid);
        p_6_S00_AXI_bid->set_sv_netview_offsetfromdp(9279496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_bresp.bind(*p_6_S00_AXI_bresp);
        p_6_S00_AXI_bresp->set_sv_netview_offsetfromdp(9279552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_buser.bind(*p_6_S00_AXI_buser);
        p_6_S00_AXI_buser->set_sv_netview_offsetfromdp(9279608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bvalid.bind(*p_6_S00_AXI_bvalid);
        p_6_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9279664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bready.bind(*p_6_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5859].first = 3;
        (*_glb_hdl_sc_channel_map)[5859].second.push_front(p_6_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arid.bind(*p_6_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5837].first = 3;
        (*_glb_hdl_sc_channel_map)[5837].second.push_front(p_6_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_araddr.bind(*p_6_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5834].first = 3;
        (*_glb_hdl_sc_channel_map)[5834].second.push_front(p_6_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_arlen.bind(*p_6_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5838].first = 3;
        (*_glb_hdl_sc_channel_map)[5838].second.push_front(p_6_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arsize.bind(*p_6_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5843].first = 3;
        (*_glb_hdl_sc_channel_map)[5843].second.push_front(p_6_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_arburst.bind(*p_6_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5835].first = 3;
        (*_glb_hdl_sc_channel_map)[5835].second.push_front(p_6_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_arlock.bind(*p_6_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5839].first = 1;
        (*_glb_hdl_sc_channel_map)[5839].second.push_front(p_6_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arcache.bind(*p_6_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5836].first = 3;
        (*_glb_hdl_sc_channel_map)[5836].second.push_front(p_6_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arprot.bind(*p_6_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5840].first = 3;
        (*_glb_hdl_sc_channel_map)[5840].second.push_front(p_6_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arqos.bind(*p_6_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5841].first = 3;
        (*_glb_hdl_sc_channel_map)[5841].second.push_front(p_6_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_aruser.bind(*p_6_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5844].first = 3;
        (*_glb_hdl_sc_channel_map)[5844].second.push_front(p_6_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arvalid.bind(*p_6_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5845].first = 3;
        (*_glb_hdl_sc_channel_map)[5845].second.push_front(p_6_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arready.bind(*p_6_S00_AXI_arready);
        p_6_S00_AXI_arready->set_sv_netview_offsetfromdp(9280392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rid.bind(*p_6_S00_AXI_rid);
        p_6_S00_AXI_rid->set_sv_netview_offsetfromdp(9280448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_rdata.bind(*p_6_S00_AXI_rdata);
        p_6_S00_AXI_rdata->set_sv_netview_offsetfromdp(9280504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_rresp.bind(*p_6_S00_AXI_rresp);
        p_6_S00_AXI_rresp->set_sv_netview_offsetfromdp(9280560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rlast.bind(*p_6_S00_AXI_rlast);
        p_6_S00_AXI_rlast->set_sv_netview_offsetfromdp(9280616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_ruser.bind(*p_6_S00_AXI_ruser);
        p_6_S00_AXI_ruser->set_sv_netview_offsetfromdp(9280672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rvalid.bind(*p_6_S00_AXI_rvalid);
        p_6_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9280728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rready.bind(*p_6_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5866].first = 3;
        (*_glb_hdl_sc_channel_map)[5866].second.push_front(p_6_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awid.bind(*p_6_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5891].first = 3;
        (*_glb_hdl_sc_channel_map)[5891].second.push_front(p_6_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_awaddr.bind(*p_6_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5888].first = 3;
        (*_glb_hdl_sc_channel_map)[5888].second.push_front(p_6_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_awlen.bind(*p_6_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5892].first = 3;
        (*_glb_hdl_sc_channel_map)[5892].second.push_front(p_6_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awsize.bind(*p_6_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5897].first = 3;
        (*_glb_hdl_sc_channel_map)[5897].second.push_front(p_6_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_awburst.bind(*p_6_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5889].first = 3;
        (*_glb_hdl_sc_channel_map)[5889].second.push_front(p_6_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_awlock.bind(*p_6_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5893].first = 1;
        (*_glb_hdl_sc_channel_map)[5893].second.push_front(p_6_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awcache.bind(*p_6_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5890].first = 3;
        (*_glb_hdl_sc_channel_map)[5890].second.push_front(p_6_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awprot.bind(*p_6_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5894].first = 3;
        (*_glb_hdl_sc_channel_map)[5894].second.push_front(p_6_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awqos.bind(*p_6_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5895].first = 3;
        (*_glb_hdl_sc_channel_map)[5895].second.push_front(p_6_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awuser.bind(*p_6_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5898].first = 3;
        (*_glb_hdl_sc_channel_map)[5898].second.push_front(p_6_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awvalid.bind(*p_6_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5899].first = 3;
        (*_glb_hdl_sc_channel_map)[5899].second.push_front(p_6_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awready.bind(*p_6_S01_AXI_awready);
        p_6_S01_AXI_awready->set_sv_netview_offsetfromdp(9281456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_wdata.bind(*p_6_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5912].first = 3;
        (*_glb_hdl_sc_channel_map)[5912].second.push_front(p_6_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_wstrb.bind(*p_6_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5915].first = 3;
        (*_glb_hdl_sc_channel_map)[5915].second.push_front(p_6_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wlast.bind(*p_6_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5913].first = 3;
        (*_glb_hdl_sc_channel_map)[5913].second.push_front(p_6_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wuser.bind(*p_6_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[5916].first = 3;
        (*_glb_hdl_sc_channel_map)[5916].second.push_front(p_6_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wvalid.bind(*p_6_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5917].first = 3;
        (*_glb_hdl_sc_channel_map)[5917].second.push_front(p_6_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wready.bind(*p_6_S01_AXI_wready);
        p_6_S01_AXI_wready->set_sv_netview_offsetfromdp(9281792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bid.bind(*p_6_S01_AXI_bid);
        p_6_S01_AXI_bid->set_sv_netview_offsetfromdp(9281848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_bresp.bind(*p_6_S01_AXI_bresp);
        p_6_S01_AXI_bresp->set_sv_netview_offsetfromdp(9281904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_buser.bind(*p_6_S01_AXI_buser);
        p_6_S01_AXI_buser->set_sv_netview_offsetfromdp(9281960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bvalid.bind(*p_6_S01_AXI_bvalid);
        p_6_S01_AXI_bvalid->set_sv_netview_offsetfromdp(9282016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bready.bind(*p_6_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5901].first = 3;
        (*_glb_hdl_sc_channel_map)[5901].second.push_front(p_6_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arid.bind(*p_6_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5879].first = 3;
        (*_glb_hdl_sc_channel_map)[5879].second.push_front(p_6_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_araddr.bind(*p_6_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5876].first = 3;
        (*_glb_hdl_sc_channel_map)[5876].second.push_front(p_6_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_arlen.bind(*p_6_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5880].first = 3;
        (*_glb_hdl_sc_channel_map)[5880].second.push_front(p_6_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arsize.bind(*p_6_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5885].first = 3;
        (*_glb_hdl_sc_channel_map)[5885].second.push_front(p_6_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_arburst.bind(*p_6_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5877].first = 3;
        (*_glb_hdl_sc_channel_map)[5877].second.push_front(p_6_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_arlock.bind(*p_6_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5881].first = 1;
        (*_glb_hdl_sc_channel_map)[5881].second.push_front(p_6_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arcache.bind(*p_6_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5878].first = 3;
        (*_glb_hdl_sc_channel_map)[5878].second.push_front(p_6_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arprot.bind(*p_6_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5882].first = 3;
        (*_glb_hdl_sc_channel_map)[5882].second.push_front(p_6_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arqos.bind(*p_6_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5883].first = 3;
        (*_glb_hdl_sc_channel_map)[5883].second.push_front(p_6_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_aruser.bind(*p_6_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5886].first = 3;
        (*_glb_hdl_sc_channel_map)[5886].second.push_front(p_6_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arvalid.bind(*p_6_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5887].first = 3;
        (*_glb_hdl_sc_channel_map)[5887].second.push_front(p_6_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arready.bind(*p_6_S01_AXI_arready);
        p_6_S01_AXI_arready->set_sv_netview_offsetfromdp(9282744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rid.bind(*p_6_S01_AXI_rid);
        p_6_S01_AXI_rid->set_sv_netview_offsetfromdp(9282800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_rdata.bind(*p_6_S01_AXI_rdata);
        p_6_S01_AXI_rdata->set_sv_netview_offsetfromdp(9282856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_rresp.bind(*p_6_S01_AXI_rresp);
        p_6_S01_AXI_rresp->set_sv_netview_offsetfromdp(9282912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rlast.bind(*p_6_S01_AXI_rlast);
        p_6_S01_AXI_rlast->set_sv_netview_offsetfromdp(9282968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_ruser.bind(*p_6_S01_AXI_ruser);
        p_6_S01_AXI_ruser->set_sv_netview_offsetfromdp(9283024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rvalid.bind(*p_6_S01_AXI_rvalid);
        p_6_S01_AXI_rvalid->set_sv_netview_offsetfromdp(9283080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rready.bind(*p_6_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5908].first = 3;
        (*_glb_hdl_sc_channel_map)[5908].second.push_front(p_6_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awid.bind(*p_6_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5933].first = 3;
        (*_glb_hdl_sc_channel_map)[5933].second.push_front(p_6_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_awaddr.bind(*p_6_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5930].first = 3;
        (*_glb_hdl_sc_channel_map)[5930].second.push_front(p_6_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_awlen.bind(*p_6_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5934].first = 3;
        (*_glb_hdl_sc_channel_map)[5934].second.push_front(p_6_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awsize.bind(*p_6_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5939].first = 3;
        (*_glb_hdl_sc_channel_map)[5939].second.push_front(p_6_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_awburst.bind(*p_6_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5931].first = 3;
        (*_glb_hdl_sc_channel_map)[5931].second.push_front(p_6_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_awlock.bind(*p_6_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5935].first = 1;
        (*_glb_hdl_sc_channel_map)[5935].second.push_front(p_6_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awcache.bind(*p_6_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5932].first = 3;
        (*_glb_hdl_sc_channel_map)[5932].second.push_front(p_6_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awprot.bind(*p_6_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5936].first = 3;
        (*_glb_hdl_sc_channel_map)[5936].second.push_front(p_6_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awqos.bind(*p_6_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5937].first = 3;
        (*_glb_hdl_sc_channel_map)[5937].second.push_front(p_6_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awuser.bind(*p_6_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5940].first = 3;
        (*_glb_hdl_sc_channel_map)[5940].second.push_front(p_6_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awvalid.bind(*p_6_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5941].first = 3;
        (*_glb_hdl_sc_channel_map)[5941].second.push_front(p_6_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awready.bind(*p_6_S02_AXI_awready);
        p_6_S02_AXI_awready->set_sv_netview_offsetfromdp(9283808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_wdata.bind(*p_6_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5954].first = 3;
        (*_glb_hdl_sc_channel_map)[5954].second.push_front(p_6_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_wstrb.bind(*p_6_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5957].first = 3;
        (*_glb_hdl_sc_channel_map)[5957].second.push_front(p_6_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wlast.bind(*p_6_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5955].first = 3;
        (*_glb_hdl_sc_channel_map)[5955].second.push_front(p_6_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wuser.bind(*p_6_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[5958].first = 3;
        (*_glb_hdl_sc_channel_map)[5958].second.push_front(p_6_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wvalid.bind(*p_6_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5959].first = 3;
        (*_glb_hdl_sc_channel_map)[5959].second.push_front(p_6_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wready.bind(*p_6_S02_AXI_wready);
        p_6_S02_AXI_wready->set_sv_netview_offsetfromdp(9284144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bid.bind(*p_6_S02_AXI_bid);
        p_6_S02_AXI_bid->set_sv_netview_offsetfromdp(9284200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_bresp.bind(*p_6_S02_AXI_bresp);
        p_6_S02_AXI_bresp->set_sv_netview_offsetfromdp(9284256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_buser.bind(*p_6_S02_AXI_buser);
        p_6_S02_AXI_buser->set_sv_netview_offsetfromdp(9284312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bvalid.bind(*p_6_S02_AXI_bvalid);
        p_6_S02_AXI_bvalid->set_sv_netview_offsetfromdp(9284368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bready.bind(*p_6_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5943].first = 3;
        (*_glb_hdl_sc_channel_map)[5943].second.push_front(p_6_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arid.bind(*p_6_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5921].first = 3;
        (*_glb_hdl_sc_channel_map)[5921].second.push_front(p_6_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_araddr.bind(*p_6_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5918].first = 3;
        (*_glb_hdl_sc_channel_map)[5918].second.push_front(p_6_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_arlen.bind(*p_6_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5922].first = 3;
        (*_glb_hdl_sc_channel_map)[5922].second.push_front(p_6_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arsize.bind(*p_6_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5927].first = 3;
        (*_glb_hdl_sc_channel_map)[5927].second.push_front(p_6_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_arburst.bind(*p_6_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5919].first = 3;
        (*_glb_hdl_sc_channel_map)[5919].second.push_front(p_6_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_arlock.bind(*p_6_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5923].first = 1;
        (*_glb_hdl_sc_channel_map)[5923].second.push_front(p_6_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arcache.bind(*p_6_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5920].first = 3;
        (*_glb_hdl_sc_channel_map)[5920].second.push_front(p_6_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arprot.bind(*p_6_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5924].first = 3;
        (*_glb_hdl_sc_channel_map)[5924].second.push_front(p_6_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arqos.bind(*p_6_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5925].first = 3;
        (*_glb_hdl_sc_channel_map)[5925].second.push_front(p_6_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_aruser.bind(*p_6_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5928].first = 3;
        (*_glb_hdl_sc_channel_map)[5928].second.push_front(p_6_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arvalid.bind(*p_6_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5929].first = 3;
        (*_glb_hdl_sc_channel_map)[5929].second.push_front(p_6_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arready.bind(*p_6_S02_AXI_arready);
        p_6_S02_AXI_arready->set_sv_netview_offsetfromdp(9285096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rid.bind(*p_6_S02_AXI_rid);
        p_6_S02_AXI_rid->set_sv_netview_offsetfromdp(9285152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_rdata.bind(*p_6_S02_AXI_rdata);
        p_6_S02_AXI_rdata->set_sv_netview_offsetfromdp(9285208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_rresp.bind(*p_6_S02_AXI_rresp);
        p_6_S02_AXI_rresp->set_sv_netview_offsetfromdp(9285264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rlast.bind(*p_6_S02_AXI_rlast);
        p_6_S02_AXI_rlast->set_sv_netview_offsetfromdp(9285320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_ruser.bind(*p_6_S02_AXI_ruser);
        p_6_S02_AXI_ruser->set_sv_netview_offsetfromdp(9285376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rvalid.bind(*p_6_S02_AXI_rvalid);
        p_6_S02_AXI_rvalid->set_sv_netview_offsetfromdp(9285432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rready.bind(*p_6_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5950].first = 3;
        (*_glb_hdl_sc_channel_map)[5950].second.push_front(p_6_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awid.bind(*p_6_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5975].first = 3;
        (*_glb_hdl_sc_channel_map)[5975].second.push_front(p_6_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_awaddr.bind(*p_6_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5972].first = 3;
        (*_glb_hdl_sc_channel_map)[5972].second.push_front(p_6_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_awlen.bind(*p_6_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5976].first = 3;
        (*_glb_hdl_sc_channel_map)[5976].second.push_front(p_6_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awsize.bind(*p_6_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5981].first = 3;
        (*_glb_hdl_sc_channel_map)[5981].second.push_front(p_6_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_awburst.bind(*p_6_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5973].first = 3;
        (*_glb_hdl_sc_channel_map)[5973].second.push_front(p_6_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_awlock.bind(*p_6_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5977].first = 1;
        (*_glb_hdl_sc_channel_map)[5977].second.push_front(p_6_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awcache.bind(*p_6_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5974].first = 3;
        (*_glb_hdl_sc_channel_map)[5974].second.push_front(p_6_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awprot.bind(*p_6_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5978].first = 3;
        (*_glb_hdl_sc_channel_map)[5978].second.push_front(p_6_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awqos.bind(*p_6_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5979].first = 3;
        (*_glb_hdl_sc_channel_map)[5979].second.push_front(p_6_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awuser.bind(*p_6_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5982].first = 3;
        (*_glb_hdl_sc_channel_map)[5982].second.push_front(p_6_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awvalid.bind(*p_6_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5983].first = 3;
        (*_glb_hdl_sc_channel_map)[5983].second.push_front(p_6_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awready.bind(*p_6_S03_AXI_awready);
        p_6_S03_AXI_awready->set_sv_netview_offsetfromdp(9286160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_wdata.bind(*p_6_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5996].first = 3;
        (*_glb_hdl_sc_channel_map)[5996].second.push_front(p_6_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_wstrb.bind(*p_6_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5999].first = 3;
        (*_glb_hdl_sc_channel_map)[5999].second.push_front(p_6_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wlast.bind(*p_6_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5997].first = 3;
        (*_glb_hdl_sc_channel_map)[5997].second.push_front(p_6_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wuser.bind(*p_6_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[6000].first = 3;
        (*_glb_hdl_sc_channel_map)[6000].second.push_front(p_6_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wvalid.bind(*p_6_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6001].first = 3;
        (*_glb_hdl_sc_channel_map)[6001].second.push_front(p_6_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wready.bind(*p_6_S03_AXI_wready);
        p_6_S03_AXI_wready->set_sv_netview_offsetfromdp(9286496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bid.bind(*p_6_S03_AXI_bid);
        p_6_S03_AXI_bid->set_sv_netview_offsetfromdp(9286552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_bresp.bind(*p_6_S03_AXI_bresp);
        p_6_S03_AXI_bresp->set_sv_netview_offsetfromdp(9286608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_buser.bind(*p_6_S03_AXI_buser);
        p_6_S03_AXI_buser->set_sv_netview_offsetfromdp(9286664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bvalid.bind(*p_6_S03_AXI_bvalid);
        p_6_S03_AXI_bvalid->set_sv_netview_offsetfromdp(9286720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bready.bind(*p_6_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5985].first = 3;
        (*_glb_hdl_sc_channel_map)[5985].second.push_front(p_6_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arid.bind(*p_6_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5963].first = 3;
        (*_glb_hdl_sc_channel_map)[5963].second.push_front(p_6_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_araddr.bind(*p_6_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5960].first = 3;
        (*_glb_hdl_sc_channel_map)[5960].second.push_front(p_6_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_arlen.bind(*p_6_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5964].first = 3;
        (*_glb_hdl_sc_channel_map)[5964].second.push_front(p_6_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arsize.bind(*p_6_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5969].first = 3;
        (*_glb_hdl_sc_channel_map)[5969].second.push_front(p_6_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_arburst.bind(*p_6_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5961].first = 3;
        (*_glb_hdl_sc_channel_map)[5961].second.push_front(p_6_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_arlock.bind(*p_6_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5965].first = 1;
        (*_glb_hdl_sc_channel_map)[5965].second.push_front(p_6_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arcache.bind(*p_6_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5962].first = 3;
        (*_glb_hdl_sc_channel_map)[5962].second.push_front(p_6_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arprot.bind(*p_6_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5966].first = 3;
        (*_glb_hdl_sc_channel_map)[5966].second.push_front(p_6_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arqos.bind(*p_6_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5967].first = 3;
        (*_glb_hdl_sc_channel_map)[5967].second.push_front(p_6_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_aruser.bind(*p_6_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5970].first = 3;
        (*_glb_hdl_sc_channel_map)[5970].second.push_front(p_6_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arvalid.bind(*p_6_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5971].first = 3;
        (*_glb_hdl_sc_channel_map)[5971].second.push_front(p_6_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arready.bind(*p_6_S03_AXI_arready);
        p_6_S03_AXI_arready->set_sv_netview_offsetfromdp(9287448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rid.bind(*p_6_S03_AXI_rid);
        p_6_S03_AXI_rid->set_sv_netview_offsetfromdp(9287504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_rdata.bind(*p_6_S03_AXI_rdata);
        p_6_S03_AXI_rdata->set_sv_netview_offsetfromdp(9287560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_rresp.bind(*p_6_S03_AXI_rresp);
        p_6_S03_AXI_rresp->set_sv_netview_offsetfromdp(9287616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rlast.bind(*p_6_S03_AXI_rlast);
        p_6_S03_AXI_rlast->set_sv_netview_offsetfromdp(9287672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_ruser.bind(*p_6_S03_AXI_ruser);
        p_6_S03_AXI_ruser->set_sv_netview_offsetfromdp(9287728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rvalid.bind(*p_6_S03_AXI_rvalid);
        p_6_S03_AXI_rvalid->set_sv_netview_offsetfromdp(9287784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rready.bind(*p_6_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5992].first = 3;
        (*_glb_hdl_sc_channel_map)[5992].second.push_front(p_6_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_awaddr.bind(*p_6_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6011].first = 3;
        (*_glb_hdl_sc_channel_map)[6011].second.push_front(p_6_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_awlen.bind(*p_6_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6013].first = 3;
        (*_glb_hdl_sc_channel_map)[6013].second.push_front(p_6_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awsize.bind(*p_6_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6018].first = 3;
        (*_glb_hdl_sc_channel_map)[6018].second.push_front(p_6_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_awlock.bind(*p_6_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1273].first = 1;
        (*_glb_hdl_sc_channel_map)[1273].second.push_front(p_6_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awcache.bind(*p_6_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6012].first = 3;
        (*_glb_hdl_sc_channel_map)[6012].second.push_front(p_6_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awprot.bind(*p_6_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6014].first = 3;
        (*_glb_hdl_sc_channel_map)[6014].second.push_front(p_6_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awregion.bind(*p_6_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[6017].first = 3;
        (*_glb_hdl_sc_channel_map)[6017].second.push_front(p_6_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awqos.bind(*p_6_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6015].first = 3;
        (*_glb_hdl_sc_channel_map)[6015].second.push_front(p_6_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awvalid.bind(*p_6_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6019].first = 3;
        (*_glb_hdl_sc_channel_map)[6019].second.push_front(p_6_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awready.bind(*p_6_S04_AXI_awready);
        p_6_S04_AXI_awready->set_sv_netview_offsetfromdp(9288400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S04_AXI_wdata.bind(*p_6_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6028].first = 3;
        (*_glb_hdl_sc_channel_map)[6028].second.push_front(p_6_S04_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_wstrb.bind(*p_6_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6031].first = 3;
        (*_glb_hdl_sc_channel_map)[6031].second.push_front(p_6_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wlast.bind(*p_6_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6029].first = 3;
        (*_glb_hdl_sc_channel_map)[6029].second.push_front(p_6_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wvalid.bind(*p_6_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6032].first = 3;
        (*_glb_hdl_sc_channel_map)[6032].second.push_front(p_6_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wready.bind(*p_6_S04_AXI_wready);
        p_6_S04_AXI_wready->set_sv_netview_offsetfromdp(9288680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_bresp.bind(*p_6_S04_AXI_bresp);
        p_6_S04_AXI_bresp->set_sv_netview_offsetfromdp(9288736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bvalid.bind(*p_6_S04_AXI_bvalid);
        p_6_S04_AXI_bvalid->set_sv_netview_offsetfromdp(9288792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bready.bind(*p_6_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6020].first = 3;
        (*_glb_hdl_sc_channel_map)[6020].second.push_front(p_6_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_araddr.bind(*p_6_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6002].first = 3;
        (*_glb_hdl_sc_channel_map)[6002].second.push_front(p_6_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_arlen.bind(*p_6_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6004].first = 3;
        (*_glb_hdl_sc_channel_map)[6004].second.push_front(p_6_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arsize.bind(*p_6_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6009].first = 3;
        (*_glb_hdl_sc_channel_map)[6009].second.push_front(p_6_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_arlock.bind(*p_6_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1274].first = 1;
        (*_glb_hdl_sc_channel_map)[1274].second.push_front(p_6_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arcache.bind(*p_6_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6003].first = 3;
        (*_glb_hdl_sc_channel_map)[6003].second.push_front(p_6_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arprot.bind(*p_6_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6005].first = 3;
        (*_glb_hdl_sc_channel_map)[6005].second.push_front(p_6_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arregion.bind(*p_6_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[6008].first = 3;
        (*_glb_hdl_sc_channel_map)[6008].second.push_front(p_6_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arqos.bind(*p_6_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6006].first = 3;
        (*_glb_hdl_sc_channel_map)[6006].second.push_front(p_6_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arvalid.bind(*p_6_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6010].first = 3;
        (*_glb_hdl_sc_channel_map)[6010].second.push_front(p_6_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arready.bind(*p_6_S04_AXI_arready);
        p_6_S04_AXI_arready->set_sv_netview_offsetfromdp(9289408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S04_AXI_rdata.bind(*p_6_S04_AXI_rdata);
        p_6_S04_AXI_rdata->set_sv_netview_offsetfromdp(9289464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_rresp.bind(*p_6_S04_AXI_rresp);
        p_6_S04_AXI_rresp->set_sv_netview_offsetfromdp(9289520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rlast.bind(*p_6_S04_AXI_rlast);
        p_6_S04_AXI_rlast->set_sv_netview_offsetfromdp(9289576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rvalid.bind(*p_6_S04_AXI_rvalid);
        p_6_S04_AXI_rvalid->set_sv_netview_offsetfromdp(9289632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rready.bind(*p_6_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6025].first = 3;
        (*_glb_hdl_sc_channel_map)[6025].second.push_front(p_6_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_awaddr.bind(*p_6_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6042].first = 3;
        (*_glb_hdl_sc_channel_map)[6042].second.push_front(p_6_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_awlen.bind(*p_6_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6044].first = 3;
        (*_glb_hdl_sc_channel_map)[6044].second.push_front(p_6_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awsize.bind(*p_6_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6049].first = 3;
        (*_glb_hdl_sc_channel_map)[6049].second.push_front(p_6_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_awlock.bind(*p_6_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1271].first = 1;
        (*_glb_hdl_sc_channel_map)[1271].second.push_front(p_6_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awcache.bind(*p_6_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6043].first = 3;
        (*_glb_hdl_sc_channel_map)[6043].second.push_front(p_6_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awprot.bind(*p_6_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6045].first = 3;
        (*_glb_hdl_sc_channel_map)[6045].second.push_front(p_6_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awregion.bind(*p_6_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[6048].first = 3;
        (*_glb_hdl_sc_channel_map)[6048].second.push_front(p_6_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awqos.bind(*p_6_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6046].first = 3;
        (*_glb_hdl_sc_channel_map)[6046].second.push_front(p_6_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awvalid.bind(*p_6_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6050].first = 3;
        (*_glb_hdl_sc_channel_map)[6050].second.push_front(p_6_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awready.bind(*p_6_S05_AXI_awready);
        p_6_S05_AXI_awready->set_sv_netview_offsetfromdp(9290248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S05_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S05_AXI_wdata.bind(*p_6_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6059].first = 3;
        (*_glb_hdl_sc_channel_map)[6059].second.push_front(p_6_S05_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_wstrb.bind(*p_6_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6062].first = 3;
        (*_glb_hdl_sc_channel_map)[6062].second.push_front(p_6_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wlast.bind(*p_6_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6060].first = 3;
        (*_glb_hdl_sc_channel_map)[6060].second.push_front(p_6_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wvalid.bind(*p_6_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6063].first = 3;
        (*_glb_hdl_sc_channel_map)[6063].second.push_front(p_6_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wready.bind(*p_6_S05_AXI_wready);
        p_6_S05_AXI_wready->set_sv_netview_offsetfromdp(9290528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_bresp.bind(*p_6_S05_AXI_bresp);
        p_6_S05_AXI_bresp->set_sv_netview_offsetfromdp(9290584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bvalid.bind(*p_6_S05_AXI_bvalid);
        p_6_S05_AXI_bvalid->set_sv_netview_offsetfromdp(9290640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bready.bind(*p_6_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6051].first = 3;
        (*_glb_hdl_sc_channel_map)[6051].second.push_front(p_6_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_araddr.bind(*p_6_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6033].first = 3;
        (*_glb_hdl_sc_channel_map)[6033].second.push_front(p_6_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_arlen.bind(*p_6_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6035].first = 3;
        (*_glb_hdl_sc_channel_map)[6035].second.push_front(p_6_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arsize.bind(*p_6_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6040].first = 3;
        (*_glb_hdl_sc_channel_map)[6040].second.push_front(p_6_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_arlock.bind(*p_6_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1272].first = 1;
        (*_glb_hdl_sc_channel_map)[1272].second.push_front(p_6_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arcache.bind(*p_6_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6034].first = 3;
        (*_glb_hdl_sc_channel_map)[6034].second.push_front(p_6_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arprot.bind(*p_6_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6036].first = 3;
        (*_glb_hdl_sc_channel_map)[6036].second.push_front(p_6_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arregion.bind(*p_6_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[6039].first = 3;
        (*_glb_hdl_sc_channel_map)[6039].second.push_front(p_6_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arqos.bind(*p_6_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6037].first = 3;
        (*_glb_hdl_sc_channel_map)[6037].second.push_front(p_6_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arvalid.bind(*p_6_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6041].first = 3;
        (*_glb_hdl_sc_channel_map)[6041].second.push_front(p_6_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arready.bind(*p_6_S05_AXI_arready);
        p_6_S05_AXI_arready->set_sv_netview_offsetfromdp(9291256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S05_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S05_AXI_rdata.bind(*p_6_S05_AXI_rdata);
        p_6_S05_AXI_rdata->set_sv_netview_offsetfromdp(9291312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_rresp.bind(*p_6_S05_AXI_rresp);
        p_6_S05_AXI_rresp->set_sv_netview_offsetfromdp(9291368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rlast.bind(*p_6_S05_AXI_rlast);
        p_6_S05_AXI_rlast->set_sv_netview_offsetfromdp(9291424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rvalid.bind(*p_6_S05_AXI_rvalid);
        p_6_S05_AXI_rvalid->set_sv_netview_offsetfromdp(9291480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rready.bind(*p_6_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6056].first = 3;
        (*_glb_hdl_sc_channel_map)[6056].second.push_front(p_6_S05_AXI_rready);
        xsim_sc_channel<0, bool > *p_6_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_6->ddr4_mem_calib_complete.bind(*p_6_ddr4_mem_calib_complete);
        p_6_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(9291592);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_awid.bind(*p_6_M00_AXI_awid);
        p_6_M00_AXI_awid->set_sv_netview_offsetfromdp(9291648);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_awaddr.bind(*p_6_M00_AXI_awaddr);
        p_6_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9291704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_awlen.bind(*p_6_M00_AXI_awlen);
        p_6_M00_AXI_awlen->set_sv_netview_offsetfromdp(9291760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awsize.bind(*p_6_M00_AXI_awsize);
        p_6_M00_AXI_awsize->set_sv_netview_offsetfromdp(9291816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_awburst.bind(*p_6_M00_AXI_awburst);
        p_6_M00_AXI_awburst->set_sv_netview_offsetfromdp(9291872);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_awlock.bind(*p_6_M00_AXI_awlock);
        p_6_M00_AXI_awlock->set_sv_netview_offsetfromdp(9291928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awcache.bind(*p_6_M00_AXI_awcache);
        p_6_M00_AXI_awcache->set_sv_netview_offsetfromdp(9291984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awprot.bind(*p_6_M00_AXI_awprot);
        p_6_M00_AXI_awprot->set_sv_netview_offsetfromdp(9292040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awqos.bind(*p_6_M00_AXI_awqos);
        p_6_M00_AXI_awqos->set_sv_netview_offsetfromdp(9292096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_awuser.bind(*p_6_M00_AXI_awuser);
        p_6_M00_AXI_awuser->set_sv_netview_offsetfromdp(9292152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awvalid.bind(*p_6_M00_AXI_awvalid);
        p_6_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9292208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awready.bind(*p_6_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5701].first = 3;
        (*_glb_hdl_sc_channel_map)[5701].second.push_front(p_6_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_wdata.bind(*p_6_M00_AXI_wdata);
        p_6_M00_AXI_wdata->set_sv_netview_offsetfromdp(9292320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M00_AXI_wstrb.bind(*p_6_M00_AXI_wstrb);
        p_6_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9292376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wlast.bind(*p_6_M00_AXI_wlast);
        p_6_M00_AXI_wlast->set_sv_netview_offsetfromdp(9292432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wuser.bind(*p_6_M00_AXI_wuser);
        p_6_M00_AXI_wuser->set_sv_netview_offsetfromdp(9292488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wvalid.bind(*p_6_M00_AXI_wvalid);
        p_6_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9292544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wready.bind(*p_6_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5719].first = 3;
        (*_glb_hdl_sc_channel_map)[5719].second.push_front(p_6_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_bid.bind(*p_6_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map)[5705].first = 3;
        (*_glb_hdl_sc_channel_map)[5705].second.push_front(p_6_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_bresp.bind(*p_6_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5707].first = 3;
        (*_glb_hdl_sc_channel_map)[5707].second.push_front(p_6_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_buser.bind(*p_6_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map)[5708].first = 3;
        (*_glb_hdl_sc_channel_map)[5708].second.push_front(p_6_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bvalid.bind(*p_6_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5709].first = 3;
        (*_glb_hdl_sc_channel_map)[5709].second.push_front(p_6_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bready.bind(*p_6_M00_AXI_bready);
        p_6_M00_AXI_bready->set_sv_netview_offsetfromdp(9292880);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_arid.bind(*p_6_M00_AXI_arid);
        p_6_M00_AXI_arid->set_sv_netview_offsetfromdp(9292936);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_araddr.bind(*p_6_M00_AXI_araddr);
        p_6_M00_AXI_araddr->set_sv_netview_offsetfromdp(9292992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_arlen.bind(*p_6_M00_AXI_arlen);
        p_6_M00_AXI_arlen->set_sv_netview_offsetfromdp(9293048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arsize.bind(*p_6_M00_AXI_arsize);
        p_6_M00_AXI_arsize->set_sv_netview_offsetfromdp(9293104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_arburst.bind(*p_6_M00_AXI_arburst);
        p_6_M00_AXI_arburst->set_sv_netview_offsetfromdp(9293160);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_arlock.bind(*p_6_M00_AXI_arlock);
        p_6_M00_AXI_arlock->set_sv_netview_offsetfromdp(9293216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arcache.bind(*p_6_M00_AXI_arcache);
        p_6_M00_AXI_arcache->set_sv_netview_offsetfromdp(9293272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arprot.bind(*p_6_M00_AXI_arprot);
        p_6_M00_AXI_arprot->set_sv_netview_offsetfromdp(9293328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arqos.bind(*p_6_M00_AXI_arqos);
        p_6_M00_AXI_arqos->set_sv_netview_offsetfromdp(9293384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_aruser.bind(*p_6_M00_AXI_aruser);
        p_6_M00_AXI_aruser->set_sv_netview_offsetfromdp(9293440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arvalid.bind(*p_6_M00_AXI_arvalid);
        p_6_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9293496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arready.bind(*p_6_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5689].first = 3;
        (*_glb_hdl_sc_channel_map)[5689].second.push_front(p_6_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_rid.bind(*p_6_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map)[5711].first = 3;
        (*_glb_hdl_sc_channel_map)[5711].second.push_front(p_6_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_rdata.bind(*p_6_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5710].first = 3;
        (*_glb_hdl_sc_channel_map)[5710].second.push_front(p_6_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_rresp.bind(*p_6_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5714].first = 3;
        (*_glb_hdl_sc_channel_map)[5714].second.push_front(p_6_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rlast.bind(*p_6_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5712].first = 3;
        (*_glb_hdl_sc_channel_map)[5712].second.push_front(p_6_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_ruser.bind(*p_6_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[5715].first = 3;
        (*_glb_hdl_sc_channel_map)[5715].second.push_front(p_6_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rvalid.bind(*p_6_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5716].first = 3;
        (*_glb_hdl_sc_channel_map)[5716].second.push_front(p_6_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rready.bind(*p_6_M00_AXI_rready);
        p_6_M00_AXI_rready->set_sv_netview_offsetfromdp(9293944);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_awaddr.bind(*p_6_M01_AXI_awaddr);
        p_6_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9294000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_awlen.bind(*p_6_M01_AXI_awlen);
        p_6_M01_AXI_awlen->set_sv_netview_offsetfromdp(9294056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awsize.bind(*p_6_M01_AXI_awsize);
        p_6_M01_AXI_awsize->set_sv_netview_offsetfromdp(9294112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_awburst.bind(*p_6_M01_AXI_awburst);
        p_6_M01_AXI_awburst->set_sv_netview_offsetfromdp(9294168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awprot.bind(*p_6_M01_AXI_awprot);
        p_6_M01_AXI_awprot->set_sv_netview_offsetfromdp(9294224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awvalid.bind(*p_6_M01_AXI_awvalid);
        p_6_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9294280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awready.bind(*p_6_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5734].first = 3;
        (*_glb_hdl_sc_channel_map)[5734].second.push_front(p_6_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_wdata.bind(*p_6_M01_AXI_wdata);
        p_6_M01_AXI_wdata->set_sv_netview_offsetfromdp(9294392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M01_AXI_wstrb.bind(*p_6_M01_AXI_wstrb);
        p_6_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9294448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wlast.bind(*p_6_M01_AXI_wlast);
        p_6_M01_AXI_wlast->set_sv_netview_offsetfromdp(9294504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wvalid.bind(*p_6_M01_AXI_wvalid);
        p_6_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9294560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wready.bind(*p_6_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5747].first = 3;
        (*_glb_hdl_sc_channel_map)[5747].second.push_front(p_6_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_bresp.bind(*p_6_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5738].first = 3;
        (*_glb_hdl_sc_channel_map)[5738].second.push_front(p_6_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bvalid.bind(*p_6_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5739].first = 3;
        (*_glb_hdl_sc_channel_map)[5739].second.push_front(p_6_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bready.bind(*p_6_M01_AXI_bready);
        p_6_M01_AXI_bready->set_sv_netview_offsetfromdp(9294784);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_araddr.bind(*p_6_M01_AXI_araddr);
        p_6_M01_AXI_araddr->set_sv_netview_offsetfromdp(9294840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_arlen.bind(*p_6_M01_AXI_arlen);
        p_6_M01_AXI_arlen->set_sv_netview_offsetfromdp(9294896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arsize.bind(*p_6_M01_AXI_arsize);
        p_6_M01_AXI_arsize->set_sv_netview_offsetfromdp(9294952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_arburst.bind(*p_6_M01_AXI_arburst);
        p_6_M01_AXI_arburst->set_sv_netview_offsetfromdp(9295008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arprot.bind(*p_6_M01_AXI_arprot);
        p_6_M01_AXI_arprot->set_sv_netview_offsetfromdp(9295064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arvalid.bind(*p_6_M01_AXI_arvalid);
        p_6_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9295120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arready.bind(*p_6_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5727].first = 3;
        (*_glb_hdl_sc_channel_map)[5727].second.push_front(p_6_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_rdata.bind(*p_6_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5740].first = 3;
        (*_glb_hdl_sc_channel_map)[5740].second.push_front(p_6_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_rresp.bind(*p_6_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5743].first = 3;
        (*_glb_hdl_sc_channel_map)[5743].second.push_front(p_6_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rlast.bind(*p_6_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5741].first = 3;
        (*_glb_hdl_sc_channel_map)[5741].second.push_front(p_6_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rvalid.bind(*p_6_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5744].first = 3;
        (*_glb_hdl_sc_channel_map)[5744].second.push_front(p_6_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rready.bind(*p_6_M01_AXI_rready);
        p_6_M01_AXI_rready->set_sv_netview_offsetfromdp(9295456);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_awid.bind(*p_6_M02_AXI_awid);
        p_6_M02_AXI_awid->set_sv_netview_offsetfromdp(9295512);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_awaddr.bind(*p_6_M02_AXI_awaddr);
        p_6_M02_AXI_awaddr->set_sv_netview_offsetfromdp(9295568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_awlen.bind(*p_6_M02_AXI_awlen);
        p_6_M02_AXI_awlen->set_sv_netview_offsetfromdp(9295624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awsize.bind(*p_6_M02_AXI_awsize);
        p_6_M02_AXI_awsize->set_sv_netview_offsetfromdp(9295680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_awburst.bind(*p_6_M02_AXI_awburst);
        p_6_M02_AXI_awburst->set_sv_netview_offsetfromdp(9295736);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_awlock.bind(*p_6_M02_AXI_awlock);
        p_6_M02_AXI_awlock->set_sv_netview_offsetfromdp(9295792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awcache.bind(*p_6_M02_AXI_awcache);
        p_6_M02_AXI_awcache->set_sv_netview_offsetfromdp(9295848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awprot.bind(*p_6_M02_AXI_awprot);
        p_6_M02_AXI_awprot->set_sv_netview_offsetfromdp(9295904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awqos.bind(*p_6_M02_AXI_awqos);
        p_6_M02_AXI_awqos->set_sv_netview_offsetfromdp(9295960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_awuser.bind(*p_6_M02_AXI_awuser);
        p_6_M02_AXI_awuser->set_sv_netview_offsetfromdp(9296016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awvalid.bind(*p_6_M02_AXI_awvalid);
        p_6_M02_AXI_awvalid->set_sv_netview_offsetfromdp(9296072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awready.bind(*p_6_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5770].first = 3;
        (*_glb_hdl_sc_channel_map)[5770].second.push_front(p_6_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_wdata.bind(*p_6_M02_AXI_wdata);
        p_6_M02_AXI_wdata->set_sv_netview_offsetfromdp(9296184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M02_AXI_wstrb.bind(*p_6_M02_AXI_wstrb);
        p_6_M02_AXI_wstrb->set_sv_netview_offsetfromdp(9296240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wlast.bind(*p_6_M02_AXI_wlast);
        p_6_M02_AXI_wlast->set_sv_netview_offsetfromdp(9296296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wuser.bind(*p_6_M02_AXI_wuser);
        p_6_M02_AXI_wuser->set_sv_netview_offsetfromdp(9296352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wvalid.bind(*p_6_M02_AXI_wvalid);
        p_6_M02_AXI_wvalid->set_sv_netview_offsetfromdp(9296408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wready.bind(*p_6_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5788].first = 3;
        (*_glb_hdl_sc_channel_map)[5788].second.push_front(p_6_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_bid.bind(*p_6_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map)[5774].first = 3;
        (*_glb_hdl_sc_channel_map)[5774].second.push_front(p_6_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_bresp.bind(*p_6_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5776].first = 3;
        (*_glb_hdl_sc_channel_map)[5776].second.push_front(p_6_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_buser.bind(*p_6_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map)[5777].first = 3;
        (*_glb_hdl_sc_channel_map)[5777].second.push_front(p_6_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bvalid.bind(*p_6_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5778].first = 3;
        (*_glb_hdl_sc_channel_map)[5778].second.push_front(p_6_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bready.bind(*p_6_M02_AXI_bready);
        p_6_M02_AXI_bready->set_sv_netview_offsetfromdp(9296744);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_arid.bind(*p_6_M02_AXI_arid);
        p_6_M02_AXI_arid->set_sv_netview_offsetfromdp(9296800);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_araddr.bind(*p_6_M02_AXI_araddr);
        p_6_M02_AXI_araddr->set_sv_netview_offsetfromdp(9296856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_arlen.bind(*p_6_M02_AXI_arlen);
        p_6_M02_AXI_arlen->set_sv_netview_offsetfromdp(9296912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arsize.bind(*p_6_M02_AXI_arsize);
        p_6_M02_AXI_arsize->set_sv_netview_offsetfromdp(9296968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_arburst.bind(*p_6_M02_AXI_arburst);
        p_6_M02_AXI_arburst->set_sv_netview_offsetfromdp(9297024);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_arlock.bind(*p_6_M02_AXI_arlock);
        p_6_M02_AXI_arlock->set_sv_netview_offsetfromdp(9297080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arcache.bind(*p_6_M02_AXI_arcache);
        p_6_M02_AXI_arcache->set_sv_netview_offsetfromdp(9297136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arprot.bind(*p_6_M02_AXI_arprot);
        p_6_M02_AXI_arprot->set_sv_netview_offsetfromdp(9297192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arqos.bind(*p_6_M02_AXI_arqos);
        p_6_M02_AXI_arqos->set_sv_netview_offsetfromdp(9297248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_aruser.bind(*p_6_M02_AXI_aruser);
        p_6_M02_AXI_aruser->set_sv_netview_offsetfromdp(9297304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arvalid.bind(*p_6_M02_AXI_arvalid);
        p_6_M02_AXI_arvalid->set_sv_netview_offsetfromdp(9297360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arready.bind(*p_6_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5758].first = 3;
        (*_glb_hdl_sc_channel_map)[5758].second.push_front(p_6_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_rid.bind(*p_6_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map)[5780].first = 3;
        (*_glb_hdl_sc_channel_map)[5780].second.push_front(p_6_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_rdata.bind(*p_6_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5779].first = 3;
        (*_glb_hdl_sc_channel_map)[5779].second.push_front(p_6_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_rresp.bind(*p_6_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5783].first = 3;
        (*_glb_hdl_sc_channel_map)[5783].second.push_front(p_6_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rlast.bind(*p_6_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5781].first = 3;
        (*_glb_hdl_sc_channel_map)[5781].second.push_front(p_6_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_ruser.bind(*p_6_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[5784].first = 3;
        (*_glb_hdl_sc_channel_map)[5784].second.push_front(p_6_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rvalid.bind(*p_6_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5785].first = 3;
        (*_glb_hdl_sc_channel_map)[5785].second.push_front(p_6_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rready.bind(*p_6_M02_AXI_rready);
        p_6_M02_AXI_rready->set_sv_netview_offsetfromdp(9297808);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_awid.bind(*p_6_M03_AXI_awid);
        p_6_M03_AXI_awid->set_sv_netview_offsetfromdp(9297864);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_awaddr.bind(*p_6_M03_AXI_awaddr);
        p_6_M03_AXI_awaddr->set_sv_netview_offsetfromdp(9297920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_awlen.bind(*p_6_M03_AXI_awlen);
        p_6_M03_AXI_awlen->set_sv_netview_offsetfromdp(9297976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awsize.bind(*p_6_M03_AXI_awsize);
        p_6_M03_AXI_awsize->set_sv_netview_offsetfromdp(9298032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_awburst.bind(*p_6_M03_AXI_awburst);
        p_6_M03_AXI_awburst->set_sv_netview_offsetfromdp(9298088);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_awlock.bind(*p_6_M03_AXI_awlock);
        p_6_M03_AXI_awlock->set_sv_netview_offsetfromdp(9298144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awcache.bind(*p_6_M03_AXI_awcache);
        p_6_M03_AXI_awcache->set_sv_netview_offsetfromdp(9298200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awprot.bind(*p_6_M03_AXI_awprot);
        p_6_M03_AXI_awprot->set_sv_netview_offsetfromdp(9298256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awqos.bind(*p_6_M03_AXI_awqos);
        p_6_M03_AXI_awqos->set_sv_netview_offsetfromdp(9298312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_awuser.bind(*p_6_M03_AXI_awuser);
        p_6_M03_AXI_awuser->set_sv_netview_offsetfromdp(9298368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awvalid.bind(*p_6_M03_AXI_awvalid);
        p_6_M03_AXI_awvalid->set_sv_netview_offsetfromdp(9298424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awready.bind(*p_6_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5812].first = 3;
        (*_glb_hdl_sc_channel_map)[5812].second.push_front(p_6_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_wdata.bind(*p_6_M03_AXI_wdata);
        p_6_M03_AXI_wdata->set_sv_netview_offsetfromdp(9298536);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M03_AXI_wstrb.bind(*p_6_M03_AXI_wstrb);
        p_6_M03_AXI_wstrb->set_sv_netview_offsetfromdp(9298592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wlast.bind(*p_6_M03_AXI_wlast);
        p_6_M03_AXI_wlast->set_sv_netview_offsetfromdp(9298648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wuser.bind(*p_6_M03_AXI_wuser);
        p_6_M03_AXI_wuser->set_sv_netview_offsetfromdp(9298704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wvalid.bind(*p_6_M03_AXI_wvalid);
        p_6_M03_AXI_wvalid->set_sv_netview_offsetfromdp(9298760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wready.bind(*p_6_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5830].first = 3;
        (*_glb_hdl_sc_channel_map)[5830].second.push_front(p_6_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_bid.bind(*p_6_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map)[5816].first = 3;
        (*_glb_hdl_sc_channel_map)[5816].second.push_front(p_6_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_bresp.bind(*p_6_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5818].first = 3;
        (*_glb_hdl_sc_channel_map)[5818].second.push_front(p_6_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_buser.bind(*p_6_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map)[5819].first = 3;
        (*_glb_hdl_sc_channel_map)[5819].second.push_front(p_6_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bvalid.bind(*p_6_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5820].first = 3;
        (*_glb_hdl_sc_channel_map)[5820].second.push_front(p_6_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bready.bind(*p_6_M03_AXI_bready);
        p_6_M03_AXI_bready->set_sv_netview_offsetfromdp(9299096);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_arid.bind(*p_6_M03_AXI_arid);
        p_6_M03_AXI_arid->set_sv_netview_offsetfromdp(9299152);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_araddr.bind(*p_6_M03_AXI_araddr);
        p_6_M03_AXI_araddr->set_sv_netview_offsetfromdp(9299208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_arlen.bind(*p_6_M03_AXI_arlen);
        p_6_M03_AXI_arlen->set_sv_netview_offsetfromdp(9299264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arsize.bind(*p_6_M03_AXI_arsize);
        p_6_M03_AXI_arsize->set_sv_netview_offsetfromdp(9299320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_arburst.bind(*p_6_M03_AXI_arburst);
        p_6_M03_AXI_arburst->set_sv_netview_offsetfromdp(9299376);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_arlock.bind(*p_6_M03_AXI_arlock);
        p_6_M03_AXI_arlock->set_sv_netview_offsetfromdp(9299432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arcache.bind(*p_6_M03_AXI_arcache);
        p_6_M03_AXI_arcache->set_sv_netview_offsetfromdp(9299488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arprot.bind(*p_6_M03_AXI_arprot);
        p_6_M03_AXI_arprot->set_sv_netview_offsetfromdp(9299544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arqos.bind(*p_6_M03_AXI_arqos);
        p_6_M03_AXI_arqos->set_sv_netview_offsetfromdp(9299600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_aruser.bind(*p_6_M03_AXI_aruser);
        p_6_M03_AXI_aruser->set_sv_netview_offsetfromdp(9299656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arvalid.bind(*p_6_M03_AXI_arvalid);
        p_6_M03_AXI_arvalid->set_sv_netview_offsetfromdp(9299712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arready.bind(*p_6_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5800].first = 3;
        (*_glb_hdl_sc_channel_map)[5800].second.push_front(p_6_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_rid.bind(*p_6_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map)[5822].first = 3;
        (*_glb_hdl_sc_channel_map)[5822].second.push_front(p_6_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_rdata.bind(*p_6_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5821].first = 3;
        (*_glb_hdl_sc_channel_map)[5821].second.push_front(p_6_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_rresp.bind(*p_6_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5825].first = 3;
        (*_glb_hdl_sc_channel_map)[5825].second.push_front(p_6_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rlast.bind(*p_6_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5823].first = 3;
        (*_glb_hdl_sc_channel_map)[5823].second.push_front(p_6_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_ruser.bind(*p_6_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[5826].first = 3;
        (*_glb_hdl_sc_channel_map)[5826].second.push_front(p_6_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rvalid.bind(*p_6_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5827].first = 3;
        (*_glb_hdl_sc_channel_map)[5827].second.push_front(p_6_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rready.bind(*p_6_M03_AXI_rready);
        p_6_M03_AXI_rready->set_sv_netview_offsetfromdp(9300160);
        sc_inst_7 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_7->xsim_set_dbg_index(23);
        sc_inst_8 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_8->xsim_set_dbg_index(24);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[23304].first = 1;
        (*_glb_hdl_sc_channel_map)[23304].second.push_front(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[23277].first = 3;
        (*_glb_hdl_sc_channel_map)[23277].second.push_front(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[23274].first = 3;
        (*_glb_hdl_sc_channel_map)[23274].second.push_front(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[23278].first = 3;
        (*_glb_hdl_sc_channel_map)[23278].second.push_front(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[23283].first = 3;
        (*_glb_hdl_sc_channel_map)[23283].second.push_front(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[23275].first = 3;
        (*_glb_hdl_sc_channel_map)[23275].second.push_front(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[23279].first = 1;
        (*_glb_hdl_sc_channel_map)[23279].second.push_front(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[23276].first = 3;
        (*_glb_hdl_sc_channel_map)[23276].second.push_front(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[23280].first = 3;
        (*_glb_hdl_sc_channel_map)[23280].second.push_front(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1269].first = 3;
        (*_glb_hdl_sc_channel_map)[1269].second.push_front(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[23281].first = 3;
        (*_glb_hdl_sc_channel_map)[23281].second.push_front(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[23284].first = 3;
        (*_glb_hdl_sc_channel_map)[23284].second.push_front(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[23285].first = 1;
        (*_glb_hdl_sc_channel_map)[23285].second.push_front(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(13006328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[23298].first = 3;
        (*_glb_hdl_sc_channel_map)[23298].second.push_front(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[23301].first = 3;
        (*_glb_hdl_sc_channel_map)[23301].second.push_front(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[23299].first = 1;
        (*_glb_hdl_sc_channel_map)[23299].second.push_front(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[23302].first = 3;
        (*_glb_hdl_sc_channel_map)[23302].second.push_front(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[23303].first = 1;
        (*_glb_hdl_sc_channel_map)[23303].second.push_front(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(13006664);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(13006720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(13006776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(13006832);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(13006888);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[23287].first = 1;
        (*_glb_hdl_sc_channel_map)[23287].second.push_front(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[23265].first = 3;
        (*_glb_hdl_sc_channel_map)[23265].second.push_front(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[23261].first = 3;
        (*_glb_hdl_sc_channel_map)[23261].second.push_front(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[23266].first = 3;
        (*_glb_hdl_sc_channel_map)[23266].second.push_front(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[23271].first = 3;
        (*_glb_hdl_sc_channel_map)[23271].second.push_front(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[23262].first = 3;
        (*_glb_hdl_sc_channel_map)[23262].second.push_front(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[23267].first = 1;
        (*_glb_hdl_sc_channel_map)[23267].second.push_front(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[23263].first = 3;
        (*_glb_hdl_sc_channel_map)[23263].second.push_front(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[23268].first = 3;
        (*_glb_hdl_sc_channel_map)[23268].second.push_front(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1270].first = 3;
        (*_glb_hdl_sc_channel_map)[1270].second.push_front(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[23269].first = 3;
        (*_glb_hdl_sc_channel_map)[23269].second.push_front(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[23272].first = 3;
        (*_glb_hdl_sc_channel_map)[23272].second.push_front(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[23273].first = 1;
        (*_glb_hdl_sc_channel_map)[23273].second.push_front(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(13007672);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(13007728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(13007784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(13007840);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(13007896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(13007952);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(13008008);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[23294].first = 1;
        (*_glb_hdl_sc_channel_map)[23294].second.push_front(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[23260].first = 1;
        (*_glb_hdl_sc_channel_map)[23260].second.push_front(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[23264].first = 1;
        (*_glb_hdl_sc_channel_map)[23264].second.push_front(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1253].first = 3;
        (*_glb_hdl_sc_channel_map)[1253].second.push_front(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1256].first = 3;
        (*_glb_hdl_sc_channel_map)[1256].second.push_front(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1252].first = 3;
        (*_glb_hdl_sc_channel_map)[1252].second.push_front(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1247].first = 3;
        (*_glb_hdl_sc_channel_map)[1247].second.push_front(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1255].first = 3;
        (*_glb_hdl_sc_channel_map)[1255].second.push_front(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1251].first = 1;
        (*_glb_hdl_sc_channel_map)[1251].second.push_front(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1254].first = 3;
        (*_glb_hdl_sc_channel_map)[1254].second.push_front(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1250].first = 3;
        (*_glb_hdl_sc_channel_map)[1250].second.push_front(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1248].first = 3;
        (*_glb_hdl_sc_channel_map)[1248].second.push_front(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1249].first = 3;
        (*_glb_hdl_sc_channel_map)[1249].second.push_front(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1246].first = 3;
        (*_glb_hdl_sc_channel_map)[1246].second.push_front(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1245].first = 1;
        (*_glb_hdl_sc_channel_map)[1245].second.push_front(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(13008904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1242].first = 3;
        (*_glb_hdl_sc_channel_map)[1242].second.push_front(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1240].first = 3;
        (*_glb_hdl_sc_channel_map)[1240].second.push_front(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1241].first = 1;
        (*_glb_hdl_sc_channel_map)[1241].second.push_front(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1239].first = 3;
        (*_glb_hdl_sc_channel_map)[1239].second.push_front(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1238].first = 1;
        (*_glb_hdl_sc_channel_map)[1238].second.push_front(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(13009240);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(13009296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(13009352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(13009408);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(13009464);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1244].first = 1;
        (*_glb_hdl_sc_channel_map)[1244].second.push_front(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1265].first = 3;
        (*_glb_hdl_sc_channel_map)[1265].second.push_front(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1268].first = 3;
        (*_glb_hdl_sc_channel_map)[1268].second.push_front(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1264].first = 3;
        (*_glb_hdl_sc_channel_map)[1264].second.push_front(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1259].first = 3;
        (*_glb_hdl_sc_channel_map)[1259].second.push_front(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1267].first = 3;
        (*_glb_hdl_sc_channel_map)[1267].second.push_front(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1263].first = 1;
        (*_glb_hdl_sc_channel_map)[1263].second.push_front(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1266].first = 3;
        (*_glb_hdl_sc_channel_map)[1266].second.push_front(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1262].first = 3;
        (*_glb_hdl_sc_channel_map)[1262].second.push_front(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1260].first = 3;
        (*_glb_hdl_sc_channel_map)[1260].second.push_front(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1261].first = 3;
        (*_glb_hdl_sc_channel_map)[1261].second.push_front(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1258].first = 3;
        (*_glb_hdl_sc_channel_map)[1258].second.push_front(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1257].first = 1;
        (*_glb_hdl_sc_channel_map)[1257].second.push_front(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(13010248);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(13010304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(13010360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(13010416);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(13010472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(13010528);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(13010584);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1243].first = 1;
        (*_glb_hdl_sc_channel_map)[1243].second.push_front(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23305].first = 1;
        (*_glb_hdl_sc_channel_map)[23305].second.push_front(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23306].first = 1;
        (*_glb_hdl_sc_channel_map)[23306].second.push_front(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_9->xsim_set_dbg_index(25);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[23364].first = 1;
        (*_glb_hdl_sc_channel_map)[23364].second.push_front(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[23337].first = 3;
        (*_glb_hdl_sc_channel_map)[23337].second.push_front(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[23334].first = 3;
        (*_glb_hdl_sc_channel_map)[23334].second.push_front(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[23338].first = 3;
        (*_glb_hdl_sc_channel_map)[23338].second.push_front(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[23343].first = 3;
        (*_glb_hdl_sc_channel_map)[23343].second.push_front(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[23335].first = 3;
        (*_glb_hdl_sc_channel_map)[23335].second.push_front(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[23339].first = 1;
        (*_glb_hdl_sc_channel_map)[23339].second.push_front(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[23336].first = 3;
        (*_glb_hdl_sc_channel_map)[23336].second.push_front(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[23340].first = 3;
        (*_glb_hdl_sc_channel_map)[23340].second.push_front(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1236].first = 3;
        (*_glb_hdl_sc_channel_map)[1236].second.push_front(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[23341].first = 3;
        (*_glb_hdl_sc_channel_map)[23341].second.push_front(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[23344].first = 3;
        (*_glb_hdl_sc_channel_map)[23344].second.push_front(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[23345].first = 1;
        (*_glb_hdl_sc_channel_map)[23345].second.push_front(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(13011584);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[23358].first = 3;
        (*_glb_hdl_sc_channel_map)[23358].second.push_front(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[23361].first = 3;
        (*_glb_hdl_sc_channel_map)[23361].second.push_front(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[23359].first = 1;
        (*_glb_hdl_sc_channel_map)[23359].second.push_front(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[23362].first = 3;
        (*_glb_hdl_sc_channel_map)[23362].second.push_front(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[23363].first = 1;
        (*_glb_hdl_sc_channel_map)[23363].second.push_front(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(13011920);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(13011976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(13012032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(13012088);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(13012144);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[23347].first = 1;
        (*_glb_hdl_sc_channel_map)[23347].second.push_front(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[23325].first = 3;
        (*_glb_hdl_sc_channel_map)[23325].second.push_front(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[23321].first = 3;
        (*_glb_hdl_sc_channel_map)[23321].second.push_front(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[23326].first = 3;
        (*_glb_hdl_sc_channel_map)[23326].second.push_front(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[23331].first = 3;
        (*_glb_hdl_sc_channel_map)[23331].second.push_front(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[23322].first = 3;
        (*_glb_hdl_sc_channel_map)[23322].second.push_front(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[23327].first = 1;
        (*_glb_hdl_sc_channel_map)[23327].second.push_front(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[23323].first = 3;
        (*_glb_hdl_sc_channel_map)[23323].second.push_front(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[23328].first = 3;
        (*_glb_hdl_sc_channel_map)[23328].second.push_front(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1237].first = 3;
        (*_glb_hdl_sc_channel_map)[1237].second.push_front(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[23329].first = 3;
        (*_glb_hdl_sc_channel_map)[23329].second.push_front(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[23332].first = 3;
        (*_glb_hdl_sc_channel_map)[23332].second.push_front(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[23333].first = 1;
        (*_glb_hdl_sc_channel_map)[23333].second.push_front(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(13012928);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(13012984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(13013040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(13013096);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(13013152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(13013208);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(13013264);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[23354].first = 1;
        (*_glb_hdl_sc_channel_map)[23354].second.push_front(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[23320].first = 1;
        (*_glb_hdl_sc_channel_map)[23320].second.push_front(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[23324].first = 1;
        (*_glb_hdl_sc_channel_map)[23324].second.push_front(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1220].first = 3;
        (*_glb_hdl_sc_channel_map)[1220].second.push_front(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1223].first = 3;
        (*_glb_hdl_sc_channel_map)[1223].second.push_front(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1219].first = 3;
        (*_glb_hdl_sc_channel_map)[1219].second.push_front(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1214].first = 3;
        (*_glb_hdl_sc_channel_map)[1214].second.push_front(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1222].first = 3;
        (*_glb_hdl_sc_channel_map)[1222].second.push_front(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1218].first = 1;
        (*_glb_hdl_sc_channel_map)[1218].second.push_front(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1221].first = 3;
        (*_glb_hdl_sc_channel_map)[1221].second.push_front(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1217].first = 3;
        (*_glb_hdl_sc_channel_map)[1217].second.push_front(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1215].first = 3;
        (*_glb_hdl_sc_channel_map)[1215].second.push_front(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1216].first = 3;
        (*_glb_hdl_sc_channel_map)[1216].second.push_front(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1213].first = 3;
        (*_glb_hdl_sc_channel_map)[1213].second.push_front(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1212].first = 1;
        (*_glb_hdl_sc_channel_map)[1212].second.push_front(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(13014160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1209].first = 3;
        (*_glb_hdl_sc_channel_map)[1209].second.push_front(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1207].first = 3;
        (*_glb_hdl_sc_channel_map)[1207].second.push_front(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1208].first = 1;
        (*_glb_hdl_sc_channel_map)[1208].second.push_front(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1206].first = 3;
        (*_glb_hdl_sc_channel_map)[1206].second.push_front(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1205].first = 1;
        (*_glb_hdl_sc_channel_map)[1205].second.push_front(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(13014496);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(13014552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(13014608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(13014664);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(13014720);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1211].first = 1;
        (*_glb_hdl_sc_channel_map)[1211].second.push_front(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1232].first = 3;
        (*_glb_hdl_sc_channel_map)[1232].second.push_front(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1235].first = 3;
        (*_glb_hdl_sc_channel_map)[1235].second.push_front(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1231].first = 3;
        (*_glb_hdl_sc_channel_map)[1231].second.push_front(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1226].first = 3;
        (*_glb_hdl_sc_channel_map)[1226].second.push_front(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1234].first = 3;
        (*_glb_hdl_sc_channel_map)[1234].second.push_front(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1230].first = 1;
        (*_glb_hdl_sc_channel_map)[1230].second.push_front(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1233].first = 3;
        (*_glb_hdl_sc_channel_map)[1233].second.push_front(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1229].first = 3;
        (*_glb_hdl_sc_channel_map)[1229].second.push_front(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1227].first = 3;
        (*_glb_hdl_sc_channel_map)[1227].second.push_front(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1228].first = 3;
        (*_glb_hdl_sc_channel_map)[1228].second.push_front(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1225].first = 3;
        (*_glb_hdl_sc_channel_map)[1225].second.push_front(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1224].first = 1;
        (*_glb_hdl_sc_channel_map)[1224].second.push_front(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(13015504);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(13015560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(13015616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(13015672);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(13015728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(13015784);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(13015840);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1210].first = 1;
        (*_glb_hdl_sc_channel_map)[1210].second.push_front(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23365].first = 1;
        (*_glb_hdl_sc_channel_map)[23365].second.push_front(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23366].first = 1;
        (*_glb_hdl_sc_channel_map)[23366].second.push_front(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_10->xsim_set_dbg_index(26);
        xsim_sc_channel<0, bool > *p_10_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ui_clk.bind(*p_10_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[23424].first = 1;
        (*_glb_hdl_sc_channel_map)[23424].second.push_front(p_10_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_awid.bind(*p_10_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[23397].first = 3;
        (*_glb_hdl_sc_channel_map)[23397].second.push_front(p_10_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_awaddr.bind(*p_10_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[23394].first = 3;
        (*_glb_hdl_sc_channel_map)[23394].second.push_front(p_10_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_awlen.bind(*p_10_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[23398].first = 3;
        (*_glb_hdl_sc_channel_map)[23398].second.push_front(p_10_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awsize.bind(*p_10_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[23403].first = 3;
        (*_glb_hdl_sc_channel_map)[23403].second.push_front(p_10_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_awburst.bind(*p_10_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[23395].first = 3;
        (*_glb_hdl_sc_channel_map)[23395].second.push_front(p_10_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awlock.bind(*p_10_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[23399].first = 1;
        (*_glb_hdl_sc_channel_map)[23399].second.push_front(p_10_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awcache.bind(*p_10_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[23396].first = 3;
        (*_glb_hdl_sc_channel_map)[23396].second.push_front(p_10_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awprot.bind(*p_10_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[23400].first = 3;
        (*_glb_hdl_sc_channel_map)[23400].second.push_front(p_10_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awregion.bind(*p_10_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1203].first = 3;
        (*_glb_hdl_sc_channel_map)[1203].second.push_front(p_10_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awqos.bind(*p_10_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[23401].first = 3;
        (*_glb_hdl_sc_channel_map)[23401].second.push_front(p_10_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_awuser.bind(*p_10_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[23404].first = 3;
        (*_glb_hdl_sc_channel_map)[23404].second.push_front(p_10_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awvalid.bind(*p_10_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[23405].first = 1;
        (*_glb_hdl_sc_channel_map)[23405].second.push_front(p_10_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awready.bind(*p_10_c0_ddr_saxi_awready);
        p_10_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(13016840);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_wdata.bind(*p_10_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[23418].first = 3;
        (*_glb_hdl_sc_channel_map)[23418].second.push_front(p_10_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->c0_ddr_saxi_wstrb.bind(*p_10_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[23421].first = 3;
        (*_glb_hdl_sc_channel_map)[23421].second.push_front(p_10_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wlast.bind(*p_10_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[23419].first = 1;
        (*_glb_hdl_sc_channel_map)[23419].second.push_front(p_10_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_wuser.bind(*p_10_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[23422].first = 3;
        (*_glb_hdl_sc_channel_map)[23422].second.push_front(p_10_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wvalid.bind(*p_10_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[23423].first = 1;
        (*_glb_hdl_sc_channel_map)[23423].second.push_front(p_10_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wready.bind(*p_10_c0_ddr_saxi_wready);
        p_10_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(13017176);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_bid.bind(*p_10_c0_ddr_saxi_bid);
        p_10_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(13017232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_bresp.bind(*p_10_c0_ddr_saxi_bresp);
        p_10_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(13017288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_buser.bind(*p_10_c0_ddr_saxi_buser);
        p_10_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(13017344);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bvalid.bind(*p_10_c0_ddr_saxi_bvalid);
        p_10_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(13017400);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bready.bind(*p_10_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[23407].first = 1;
        (*_glb_hdl_sc_channel_map)[23407].second.push_front(p_10_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_arid.bind(*p_10_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[23385].first = 3;
        (*_glb_hdl_sc_channel_map)[23385].second.push_front(p_10_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_araddr.bind(*p_10_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[23381].first = 3;
        (*_glb_hdl_sc_channel_map)[23381].second.push_front(p_10_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_arlen.bind(*p_10_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[23386].first = 3;
        (*_glb_hdl_sc_channel_map)[23386].second.push_front(p_10_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arsize.bind(*p_10_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[23391].first = 3;
        (*_glb_hdl_sc_channel_map)[23391].second.push_front(p_10_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_arburst.bind(*p_10_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[23382].first = 3;
        (*_glb_hdl_sc_channel_map)[23382].second.push_front(p_10_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arlock.bind(*p_10_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[23387].first = 1;
        (*_glb_hdl_sc_channel_map)[23387].second.push_front(p_10_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arcache.bind(*p_10_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[23383].first = 3;
        (*_glb_hdl_sc_channel_map)[23383].second.push_front(p_10_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arprot.bind(*p_10_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[23388].first = 3;
        (*_glb_hdl_sc_channel_map)[23388].second.push_front(p_10_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arregion.bind(*p_10_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1204].first = 3;
        (*_glb_hdl_sc_channel_map)[1204].second.push_front(p_10_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arqos.bind(*p_10_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[23389].first = 3;
        (*_glb_hdl_sc_channel_map)[23389].second.push_front(p_10_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_aruser.bind(*p_10_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[23392].first = 3;
        (*_glb_hdl_sc_channel_map)[23392].second.push_front(p_10_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arvalid.bind(*p_10_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[23393].first = 1;
        (*_glb_hdl_sc_channel_map)[23393].second.push_front(p_10_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arready.bind(*p_10_c0_ddr_saxi_arready);
        p_10_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(13018184);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_rid.bind(*p_10_c0_ddr_saxi_rid);
        p_10_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(13018240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_rdata.bind(*p_10_c0_ddr_saxi_rdata);
        p_10_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(13018296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_rresp.bind(*p_10_c0_ddr_saxi_rresp);
        p_10_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(13018352);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rlast.bind(*p_10_c0_ddr_saxi_rlast);
        p_10_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(13018408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_ruser.bind(*p_10_c0_ddr_saxi_ruser);
        p_10_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(13018464);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rvalid.bind(*p_10_c0_ddr_saxi_rvalid);
        p_10_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(13018520);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rready.bind(*p_10_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[23414].first = 1;
        (*_glb_hdl_sc_channel_map)[23414].second.push_front(p_10_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aclk.bind(*p_10_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[23380].first = 1;
        (*_glb_hdl_sc_channel_map)[23380].second.push_front(p_10_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aresetn.bind(*p_10_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[23384].first = 1;
        (*_glb_hdl_sc_channel_map)[23384].second.push_front(p_10_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_awid.bind(*p_10_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1187].first = 3;
        (*_glb_hdl_sc_channel_map)[1187].second.push_front(p_10_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awaddr.bind(*p_10_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1190].first = 3;
        (*_glb_hdl_sc_channel_map)[1190].second.push_front(p_10_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_awlen.bind(*p_10_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1186].first = 3;
        (*_glb_hdl_sc_channel_map)[1186].second.push_front(p_10_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awsize.bind(*p_10_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1181].first = 3;
        (*_glb_hdl_sc_channel_map)[1181].second.push_front(p_10_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_awburst.bind(*p_10_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1189].first = 3;
        (*_glb_hdl_sc_channel_map)[1189].second.push_front(p_10_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awlock.bind(*p_10_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1185].first = 1;
        (*_glb_hdl_sc_channel_map)[1185].second.push_front(p_10_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awcache.bind(*p_10_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1188].first = 3;
        (*_glb_hdl_sc_channel_map)[1188].second.push_front(p_10_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awprot.bind(*p_10_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1184].first = 3;
        (*_glb_hdl_sc_channel_map)[1184].second.push_front(p_10_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awregion.bind(*p_10_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1182].first = 3;
        (*_glb_hdl_sc_channel_map)[1182].second.push_front(p_10_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awqos.bind(*p_10_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1183].first = 3;
        (*_glb_hdl_sc_channel_map)[1183].second.push_front(p_10_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awuser.bind(*p_10_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1180].first = 3;
        (*_glb_hdl_sc_channel_map)[1180].second.push_front(p_10_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awvalid.bind(*p_10_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1179].first = 1;
        (*_glb_hdl_sc_channel_map)[1179].second.push_front(p_10_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awready.bind(*p_10_s_xdma_axi_awready);
        p_10_s_xdma_axi_awready->set_sv_netview_offsetfromdp(13019416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_wdata.bind(*p_10_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1176].first = 3;
        (*_glb_hdl_sc_channel_map)[1176].second.push_front(p_10_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_wstrb.bind(*p_10_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1174].first = 3;
        (*_glb_hdl_sc_channel_map)[1174].second.push_front(p_10_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wlast.bind(*p_10_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1175].first = 1;
        (*_glb_hdl_sc_channel_map)[1175].second.push_front(p_10_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_wuser.bind(*p_10_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1173].first = 3;
        (*_glb_hdl_sc_channel_map)[1173].second.push_front(p_10_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wvalid.bind(*p_10_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1172].first = 1;
        (*_glb_hdl_sc_channel_map)[1172].second.push_front(p_10_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wready.bind(*p_10_s_xdma_axi_wready);
        p_10_s_xdma_axi_wready->set_sv_netview_offsetfromdp(13019752);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_bid.bind(*p_10_s_xdma_axi_bid);
        p_10_s_xdma_axi_bid->set_sv_netview_offsetfromdp(13019808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_bresp.bind(*p_10_s_xdma_axi_bresp);
        p_10_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(13019864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_buser.bind(*p_10_s_xdma_axi_buser);
        p_10_s_xdma_axi_buser->set_sv_netview_offsetfromdp(13019920);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bvalid.bind(*p_10_s_xdma_axi_bvalid);
        p_10_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(13019976);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bready.bind(*p_10_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1178].first = 1;
        (*_glb_hdl_sc_channel_map)[1178].second.push_front(p_10_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_arid.bind(*p_10_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1199].first = 3;
        (*_glb_hdl_sc_channel_map)[1199].second.push_front(p_10_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_araddr.bind(*p_10_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1202].first = 3;
        (*_glb_hdl_sc_channel_map)[1202].second.push_front(p_10_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_arlen.bind(*p_10_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1198].first = 3;
        (*_glb_hdl_sc_channel_map)[1198].second.push_front(p_10_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arsize.bind(*p_10_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1193].first = 3;
        (*_glb_hdl_sc_channel_map)[1193].second.push_front(p_10_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_arburst.bind(*p_10_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1201].first = 3;
        (*_glb_hdl_sc_channel_map)[1201].second.push_front(p_10_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arlock.bind(*p_10_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1197].first = 1;
        (*_glb_hdl_sc_channel_map)[1197].second.push_front(p_10_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arcache.bind(*p_10_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1200].first = 3;
        (*_glb_hdl_sc_channel_map)[1200].second.push_front(p_10_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arprot.bind(*p_10_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1196].first = 3;
        (*_glb_hdl_sc_channel_map)[1196].second.push_front(p_10_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arregion.bind(*p_10_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1194].first = 3;
        (*_glb_hdl_sc_channel_map)[1194].second.push_front(p_10_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arqos.bind(*p_10_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1195].first = 3;
        (*_glb_hdl_sc_channel_map)[1195].second.push_front(p_10_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_aruser.bind(*p_10_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1192].first = 3;
        (*_glb_hdl_sc_channel_map)[1192].second.push_front(p_10_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arvalid.bind(*p_10_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1191].first = 1;
        (*_glb_hdl_sc_channel_map)[1191].second.push_front(p_10_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arready.bind(*p_10_s_xdma_axi_arready);
        p_10_s_xdma_axi_arready->set_sv_netview_offsetfromdp(13020760);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_rid.bind(*p_10_s_xdma_axi_rid);
        p_10_s_xdma_axi_rid->set_sv_netview_offsetfromdp(13020816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_rdata.bind(*p_10_s_xdma_axi_rdata);
        p_10_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(13020872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_rresp.bind(*p_10_s_xdma_axi_rresp);
        p_10_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(13020928);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rlast.bind(*p_10_s_xdma_axi_rlast);
        p_10_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(13020984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_ruser.bind(*p_10_s_xdma_axi_ruser);
        p_10_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(13021040);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rvalid.bind(*p_10_s_xdma_axi_rvalid);
        p_10_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(13021096);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rready.bind(*p_10_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1177].first = 1;
        (*_glb_hdl_sc_channel_map)[1177].second.push_front(p_10_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aclk.bind(*p_10_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23425].first = 1;
        (*_glb_hdl_sc_channel_map)[23425].second.push_front(p_10_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aresetn.bind(*p_10_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23426].first = 1;
        (*_glb_hdl_sc_channel_map)[23426].second.push_front(p_10_s_xdma_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_11->xsim_set_dbg_index(681);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[23636].first = 3;
        (*_glb_hdl_sc_channel_map)[23636].second.push_front(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[23574].first = 3;
        (*_glb_hdl_sc_channel_map)[23574].second.push_front(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[23637].first = 3;
        (*_glb_hdl_sc_channel_map)[23637].second.push_front(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[23642].first = 3;
        (*_glb_hdl_sc_channel_map)[23642].second.push_front(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[23634].first = 3;
        (*_glb_hdl_sc_channel_map)[23634].second.push_front(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[23638].first = 1;
        (*_glb_hdl_sc_channel_map)[23638].second.push_front(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[23635].first = 3;
        (*_glb_hdl_sc_channel_map)[23635].second.push_front(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[23639].first = 3;
        (*_glb_hdl_sc_channel_map)[23639].second.push_front(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[23573].first = 3;
        (*_glb_hdl_sc_channel_map)[23573].second.push_front(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[23640].first = 3;
        (*_glb_hdl_sc_channel_map)[23640].second.push_front(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[23643].first = 3;
        (*_glb_hdl_sc_channel_map)[23643].second.push_front(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[23644].first = 1;
        (*_glb_hdl_sc_channel_map)[23644].second.push_front(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(13081792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23657].first = 3;
        (*_glb_hdl_sc_channel_map)[23657].second.push_front(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23660].first = 3;
        (*_glb_hdl_sc_channel_map)[23660].second.push_front(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[23658].first = 1;
        (*_glb_hdl_sc_channel_map)[23658].second.push_front(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[23661].first = 3;
        (*_glb_hdl_sc_channel_map)[23661].second.push_front(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23662].first = 1;
        (*_glb_hdl_sc_channel_map)[23662].second.push_front(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(13082128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(13082184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(13082240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(13082296);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(13082352);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[23646].first = 1;
        (*_glb_hdl_sc_channel_map)[23646].second.push_front(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[23625].first = 3;
        (*_glb_hdl_sc_channel_map)[23625].second.push_front(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[23576].first = 3;
        (*_glb_hdl_sc_channel_map)[23576].second.push_front(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[23626].first = 3;
        (*_glb_hdl_sc_channel_map)[23626].second.push_front(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[23631].first = 3;
        (*_glb_hdl_sc_channel_map)[23631].second.push_front(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[23622].first = 3;
        (*_glb_hdl_sc_channel_map)[23622].second.push_front(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[23627].first = 1;
        (*_glb_hdl_sc_channel_map)[23627].second.push_front(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[23623].first = 3;
        (*_glb_hdl_sc_channel_map)[23623].second.push_front(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[23628].first = 3;
        (*_glb_hdl_sc_channel_map)[23628].second.push_front(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[23575].first = 3;
        (*_glb_hdl_sc_channel_map)[23575].second.push_front(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[23629].first = 3;
        (*_glb_hdl_sc_channel_map)[23629].second.push_front(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[23632].first = 3;
        (*_glb_hdl_sc_channel_map)[23632].second.push_front(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[23633].first = 1;
        (*_glb_hdl_sc_channel_map)[23633].second.push_front(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(13083136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(13083192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(13083248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(13083304);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(13083360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(13083416);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(13083472);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[23653].first = 1;
        (*_glb_hdl_sc_channel_map)[23653].second.push_front(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23621].first = 1;
        (*_glb_hdl_sc_channel_map)[23621].second.push_front(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23624].first = 1;
        (*_glb_hdl_sc_channel_map)[23624].second.push_front(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(13083696);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(13083752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(13083808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(13083864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(13083920);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(13083976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(13084032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(13084088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(13084144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(13084200);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(13084256);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[23599].first = 1;
        (*_glb_hdl_sc_channel_map)[23599].second.push_front(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(13084368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(13084424);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(13084480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(13084536);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(13084592);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[23617].first = 1;
        (*_glb_hdl_sc_channel_map)[23617].second.push_front(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[23603].first = 3;
        (*_glb_hdl_sc_channel_map)[23603].second.push_front(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[23605].first = 3;
        (*_glb_hdl_sc_channel_map)[23605].second.push_front(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[23606].first = 3;
        (*_glb_hdl_sc_channel_map)[23606].second.push_front(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[23607].first = 1;
        (*_glb_hdl_sc_channel_map)[23607].second.push_front(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(13084928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(13084984);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(13085040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(13085096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(13085152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(13085208);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(13085264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(13085320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(13085376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(13085432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(13085488);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(13085544);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[23587].first = 1;
        (*_glb_hdl_sc_channel_map)[23587].second.push_front(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[23609].first = 3;
        (*_glb_hdl_sc_channel_map)[23609].second.push_front(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[23608].first = 3;
        (*_glb_hdl_sc_channel_map)[23608].second.push_front(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[23612].first = 3;
        (*_glb_hdl_sc_channel_map)[23612].second.push_front(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[23610].first = 1;
        (*_glb_hdl_sc_channel_map)[23610].second.push_front(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[23613].first = 3;
        (*_glb_hdl_sc_channel_map)[23613].second.push_front(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[23614].first = 1;
        (*_glb_hdl_sc_channel_map)[23614].second.push_front(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(13085992);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23577].first = 1;
        (*_glb_hdl_sc_channel_map)[23577].second.push_front(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23581].first = 1;
        (*_glb_hdl_sc_channel_map)[23581].second.push_front(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_12->xsim_set_dbg_index(795);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[26263].first = 3;
        (*_glb_hdl_sc_channel_map)[26263].second.push_front(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[26201].first = 3;
        (*_glb_hdl_sc_channel_map)[26201].second.push_front(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[26264].first = 3;
        (*_glb_hdl_sc_channel_map)[26264].second.push_front(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[26269].first = 3;
        (*_glb_hdl_sc_channel_map)[26269].second.push_front(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[26261].first = 3;
        (*_glb_hdl_sc_channel_map)[26261].second.push_front(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[26265].first = 1;
        (*_glb_hdl_sc_channel_map)[26265].second.push_front(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[26262].first = 3;
        (*_glb_hdl_sc_channel_map)[26262].second.push_front(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[26266].first = 3;
        (*_glb_hdl_sc_channel_map)[26266].second.push_front(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[26200].first = 3;
        (*_glb_hdl_sc_channel_map)[26200].second.push_front(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[26267].first = 3;
        (*_glb_hdl_sc_channel_map)[26267].second.push_front(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[26270].first = 3;
        (*_glb_hdl_sc_channel_map)[26270].second.push_front(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[26271].first = 1;
        (*_glb_hdl_sc_channel_map)[26271].second.push_front(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(13728048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[26284].first = 3;
        (*_glb_hdl_sc_channel_map)[26284].second.push_front(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[26287].first = 3;
        (*_glb_hdl_sc_channel_map)[26287].second.push_front(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[26285].first = 1;
        (*_glb_hdl_sc_channel_map)[26285].second.push_front(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[26288].first = 3;
        (*_glb_hdl_sc_channel_map)[26288].second.push_front(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[26289].first = 1;
        (*_glb_hdl_sc_channel_map)[26289].second.push_front(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(13728384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(13728440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(13728496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(13728552);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(13728608);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[26273].first = 1;
        (*_glb_hdl_sc_channel_map)[26273].second.push_front(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[26252].first = 3;
        (*_glb_hdl_sc_channel_map)[26252].second.push_front(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[26203].first = 3;
        (*_glb_hdl_sc_channel_map)[26203].second.push_front(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[26253].first = 3;
        (*_glb_hdl_sc_channel_map)[26253].second.push_front(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[26258].first = 3;
        (*_glb_hdl_sc_channel_map)[26258].second.push_front(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[26249].first = 3;
        (*_glb_hdl_sc_channel_map)[26249].second.push_front(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[26254].first = 1;
        (*_glb_hdl_sc_channel_map)[26254].second.push_front(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[26250].first = 3;
        (*_glb_hdl_sc_channel_map)[26250].second.push_front(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[26255].first = 3;
        (*_glb_hdl_sc_channel_map)[26255].second.push_front(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[26202].first = 3;
        (*_glb_hdl_sc_channel_map)[26202].second.push_front(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[26256].first = 3;
        (*_glb_hdl_sc_channel_map)[26256].second.push_front(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[26259].first = 3;
        (*_glb_hdl_sc_channel_map)[26259].second.push_front(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[26260].first = 1;
        (*_glb_hdl_sc_channel_map)[26260].second.push_front(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(13729392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(13729448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(13729504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(13729560);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(13729616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(13729672);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(13729728);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[26280].first = 1;
        (*_glb_hdl_sc_channel_map)[26280].second.push_front(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[26248].first = 1;
        (*_glb_hdl_sc_channel_map)[26248].second.push_front(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[26251].first = 1;
        (*_glb_hdl_sc_channel_map)[26251].second.push_front(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(13729952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(13730008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(13730064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(13730120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(13730176);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(13730232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(13730288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(13730344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(13730400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(13730456);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(13730512);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[26226].first = 1;
        (*_glb_hdl_sc_channel_map)[26226].second.push_front(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(13730624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(13730680);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(13730736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(13730792);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(13730848);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[26244].first = 1;
        (*_glb_hdl_sc_channel_map)[26244].second.push_front(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[26230].first = 3;
        (*_glb_hdl_sc_channel_map)[26230].second.push_front(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[26232].first = 3;
        (*_glb_hdl_sc_channel_map)[26232].second.push_front(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[26233].first = 3;
        (*_glb_hdl_sc_channel_map)[26233].second.push_front(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[26234].first = 1;
        (*_glb_hdl_sc_channel_map)[26234].second.push_front(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(13731184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(13731240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(13731296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(13731352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(13731408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(13731464);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(13731520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(13731576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(13731632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(13731688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(13731744);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(13731800);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[26214].first = 1;
        (*_glb_hdl_sc_channel_map)[26214].second.push_front(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[26236].first = 3;
        (*_glb_hdl_sc_channel_map)[26236].second.push_front(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[26235].first = 3;
        (*_glb_hdl_sc_channel_map)[26235].second.push_front(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[26239].first = 3;
        (*_glb_hdl_sc_channel_map)[26239].second.push_front(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[26237].first = 1;
        (*_glb_hdl_sc_channel_map)[26237].second.push_front(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[26240].first = 3;
        (*_glb_hdl_sc_channel_map)[26240].second.push_front(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[26241].first = 1;
        (*_glb_hdl_sc_channel_map)[26241].second.push_front(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(13732248);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[26204].first = 1;
        (*_glb_hdl_sc_channel_map)[26204].second.push_front(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[26208].first = 1;
        (*_glb_hdl_sc_channel_map)[26208].second.push_front(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_13->xsim_set_dbg_index(796);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[26349].first = 3;
        (*_glb_hdl_sc_channel_map)[26349].second.push_front(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[26197].first = 3;
        (*_glb_hdl_sc_channel_map)[26197].second.push_front(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[26350].first = 3;
        (*_glb_hdl_sc_channel_map)[26350].second.push_front(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[26355].first = 3;
        (*_glb_hdl_sc_channel_map)[26355].second.push_front(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[26347].first = 3;
        (*_glb_hdl_sc_channel_map)[26347].second.push_front(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[26351].first = 1;
        (*_glb_hdl_sc_channel_map)[26351].second.push_front(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[26348].first = 3;
        (*_glb_hdl_sc_channel_map)[26348].second.push_front(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[26352].first = 3;
        (*_glb_hdl_sc_channel_map)[26352].second.push_front(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[26196].first = 3;
        (*_glb_hdl_sc_channel_map)[26196].second.push_front(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[26353].first = 3;
        (*_glb_hdl_sc_channel_map)[26353].second.push_front(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[26356].first = 3;
        (*_glb_hdl_sc_channel_map)[26356].second.push_front(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[26357].first = 1;
        (*_glb_hdl_sc_channel_map)[26357].second.push_front(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(13733136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[26370].first = 3;
        (*_glb_hdl_sc_channel_map)[26370].second.push_front(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[26373].first = 3;
        (*_glb_hdl_sc_channel_map)[26373].second.push_front(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[26371].first = 1;
        (*_glb_hdl_sc_channel_map)[26371].second.push_front(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[26374].first = 3;
        (*_glb_hdl_sc_channel_map)[26374].second.push_front(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[26375].first = 1;
        (*_glb_hdl_sc_channel_map)[26375].second.push_front(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(13733472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(13733528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(13733584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(13733640);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(13733696);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[26359].first = 1;
        (*_glb_hdl_sc_channel_map)[26359].second.push_front(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[26338].first = 3;
        (*_glb_hdl_sc_channel_map)[26338].second.push_front(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[26199].first = 3;
        (*_glb_hdl_sc_channel_map)[26199].second.push_front(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[26339].first = 3;
        (*_glb_hdl_sc_channel_map)[26339].second.push_front(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[26344].first = 3;
        (*_glb_hdl_sc_channel_map)[26344].second.push_front(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[26335].first = 3;
        (*_glb_hdl_sc_channel_map)[26335].second.push_front(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[26340].first = 1;
        (*_glb_hdl_sc_channel_map)[26340].second.push_front(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[26336].first = 3;
        (*_glb_hdl_sc_channel_map)[26336].second.push_front(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[26341].first = 3;
        (*_glb_hdl_sc_channel_map)[26341].second.push_front(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[26198].first = 3;
        (*_glb_hdl_sc_channel_map)[26198].second.push_front(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[26342].first = 3;
        (*_glb_hdl_sc_channel_map)[26342].second.push_front(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[26345].first = 3;
        (*_glb_hdl_sc_channel_map)[26345].second.push_front(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[26346].first = 1;
        (*_glb_hdl_sc_channel_map)[26346].second.push_front(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(13734480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(13734536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(13734592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(13734648);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(13734704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(13734760);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(13734816);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[26366].first = 1;
        (*_glb_hdl_sc_channel_map)[26366].second.push_front(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[26334].first = 1;
        (*_glb_hdl_sc_channel_map)[26334].second.push_front(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[26337].first = 1;
        (*_glb_hdl_sc_channel_map)[26337].second.push_front(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(13735040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(13735096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(13735152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(13735208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(13735264);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(13735320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(13735376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(13735432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(13735488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(13735544);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(13735600);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[26312].first = 1;
        (*_glb_hdl_sc_channel_map)[26312].second.push_front(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(13735712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(13735768);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(13735824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(13735880);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(13735936);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[26330].first = 1;
        (*_glb_hdl_sc_channel_map)[26330].second.push_front(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[26316].first = 3;
        (*_glb_hdl_sc_channel_map)[26316].second.push_front(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[26318].first = 3;
        (*_glb_hdl_sc_channel_map)[26318].second.push_front(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[26319].first = 3;
        (*_glb_hdl_sc_channel_map)[26319].second.push_front(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[26320].first = 1;
        (*_glb_hdl_sc_channel_map)[26320].second.push_front(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(13736272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(13736328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(13736384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(13736440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(13736496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(13736552);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(13736608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(13736664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(13736720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(13736776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(13736832);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(13736888);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[26300].first = 1;
        (*_glb_hdl_sc_channel_map)[26300].second.push_front(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[26322].first = 3;
        (*_glb_hdl_sc_channel_map)[26322].second.push_front(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[26321].first = 3;
        (*_glb_hdl_sc_channel_map)[26321].second.push_front(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[26325].first = 3;
        (*_glb_hdl_sc_channel_map)[26325].second.push_front(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[26323].first = 1;
        (*_glb_hdl_sc_channel_map)[26323].second.push_front(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[26326].first = 3;
        (*_glb_hdl_sc_channel_map)[26326].second.push_front(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[26327].first = 1;
        (*_glb_hdl_sc_channel_map)[26327].second.push_front(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(13737336);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[26290].first = 1;
        (*_glb_hdl_sc_channel_map)[26290].second.push_front(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[26294].first = 1;
        (*_glb_hdl_sc_channel_map)[26294].second.push_front(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_14->xsim_set_dbg_index(1053);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[28878].first = 3;
        (*_glb_hdl_sc_channel_map)[28878].second.push_front(p_14_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[28816].first = 3;
        (*_glb_hdl_sc_channel_map)[28816].second.push_front(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[28879].first = 3;
        (*_glb_hdl_sc_channel_map)[28879].second.push_front(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[28884].first = 3;
        (*_glb_hdl_sc_channel_map)[28884].second.push_front(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[28876].first = 3;
        (*_glb_hdl_sc_channel_map)[28876].second.push_front(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[28880].first = 1;
        (*_glb_hdl_sc_channel_map)[28880].second.push_front(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[28877].first = 3;
        (*_glb_hdl_sc_channel_map)[28877].second.push_front(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[28881].first = 3;
        (*_glb_hdl_sc_channel_map)[28881].second.push_front(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[28815].first = 3;
        (*_glb_hdl_sc_channel_map)[28815].second.push_front(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[28882].first = 3;
        (*_glb_hdl_sc_channel_map)[28882].second.push_front(p_14_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awuser.bind(*p_14_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[28885].first = 3;
        (*_glb_hdl_sc_channel_map)[28885].second.push_front(p_14_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[28886].first = 1;
        (*_glb_hdl_sc_channel_map)[28886].second.push_front(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(14526896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[28899].first = 3;
        (*_glb_hdl_sc_channel_map)[28899].second.push_front(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[28902].first = 3;
        (*_glb_hdl_sc_channel_map)[28902].second.push_front(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[28900].first = 1;
        (*_glb_hdl_sc_channel_map)[28900].second.push_front(p_14_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_wuser.bind(*p_14_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[28903].first = 3;
        (*_glb_hdl_sc_channel_map)[28903].second.push_front(p_14_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[28904].first = 1;
        (*_glb_hdl_sc_channel_map)[28904].second.push_front(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(14527232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(14527288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(14527344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_buser.bind(*p_14_s00_axi_buser);
        p_14_s00_axi_buser->set_sv_netview_offsetfromdp(14527400);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(14527456);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[28888].first = 1;
        (*_glb_hdl_sc_channel_map)[28888].second.push_front(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[28867].first = 3;
        (*_glb_hdl_sc_channel_map)[28867].second.push_front(p_14_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[28818].first = 3;
        (*_glb_hdl_sc_channel_map)[28818].second.push_front(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[28868].first = 3;
        (*_glb_hdl_sc_channel_map)[28868].second.push_front(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[28873].first = 3;
        (*_glb_hdl_sc_channel_map)[28873].second.push_front(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[28864].first = 3;
        (*_glb_hdl_sc_channel_map)[28864].second.push_front(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[28869].first = 1;
        (*_glb_hdl_sc_channel_map)[28869].second.push_front(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[28865].first = 3;
        (*_glb_hdl_sc_channel_map)[28865].second.push_front(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[28870].first = 3;
        (*_glb_hdl_sc_channel_map)[28870].second.push_front(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[28817].first = 3;
        (*_glb_hdl_sc_channel_map)[28817].second.push_front(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[28871].first = 3;
        (*_glb_hdl_sc_channel_map)[28871].second.push_front(p_14_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_aruser.bind(*p_14_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[28874].first = 3;
        (*_glb_hdl_sc_channel_map)[28874].second.push_front(p_14_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[28875].first = 1;
        (*_glb_hdl_sc_channel_map)[28875].second.push_front(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(14528240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(14528296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(14528352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(14528408);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(14528464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_ruser.bind(*p_14_s00_axi_ruser);
        p_14_s00_axi_ruser->set_sv_netview_offsetfromdp(14528520);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(14528576);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[28895].first = 1;
        (*_glb_hdl_sc_channel_map)[28895].second.push_front(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[28863].first = 1;
        (*_glb_hdl_sc_channel_map)[28863].second.push_front(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[28866].first = 1;
        (*_glb_hdl_sc_channel_map)[28866].second.push_front(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(14528800);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(14528856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(14528912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(14528968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(14529024);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(14529080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(14529136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(14529192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(14529248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(14529304);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(14529360);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[28841].first = 1;
        (*_glb_hdl_sc_channel_map)[28841].second.push_front(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(14529472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(14529528);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(14529584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(14529640);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(14529696);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[28859].first = 1;
        (*_glb_hdl_sc_channel_map)[28859].second.push_front(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[28845].first = 3;
        (*_glb_hdl_sc_channel_map)[28845].second.push_front(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[28847].first = 3;
        (*_glb_hdl_sc_channel_map)[28847].second.push_front(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[28848].first = 3;
        (*_glb_hdl_sc_channel_map)[28848].second.push_front(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[28849].first = 1;
        (*_glb_hdl_sc_channel_map)[28849].second.push_front(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(14530032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(14530088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(14530144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(14530200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(14530256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(14530312);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(14530368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(14530424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(14530480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(14530536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(14530592);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(14530648);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[28829].first = 1;
        (*_glb_hdl_sc_channel_map)[28829].second.push_front(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[28851].first = 3;
        (*_glb_hdl_sc_channel_map)[28851].second.push_front(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[28850].first = 3;
        (*_glb_hdl_sc_channel_map)[28850].second.push_front(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[28854].first = 3;
        (*_glb_hdl_sc_channel_map)[28854].second.push_front(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[28852].first = 1;
        (*_glb_hdl_sc_channel_map)[28852].second.push_front(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[28855].first = 3;
        (*_glb_hdl_sc_channel_map)[28855].second.push_front(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[28856].first = 1;
        (*_glb_hdl_sc_channel_map)[28856].second.push_front(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(14531096);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[28819].first = 1;
        (*_glb_hdl_sc_channel_map)[28819].second.push_front(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[28823].first = 1;
        (*_glb_hdl_sc_channel_map)[28823].second.push_front(p_14_m00_axi_aresetn);
        sc_inst_15 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_15->xsim_set_dbg_index(31);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awid.bind(*p_15_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[31997].first = 3;
        (*_glb_hdl_sc_channel_map)[31997].second.push_front(p_15_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[31994].first = 3;
        (*_glb_hdl_sc_channel_map)[31994].second.push_front(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[31998].first = 3;
        (*_glb_hdl_sc_channel_map)[31998].second.push_front(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[32004].first = 3;
        (*_glb_hdl_sc_channel_map)[32004].second.push_front(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[31995].first = 3;
        (*_glb_hdl_sc_channel_map)[31995].second.push_front(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[31999].first = 1;
        (*_glb_hdl_sc_channel_map)[31999].second.push_front(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[31996].first = 3;
        (*_glb_hdl_sc_channel_map)[31996].second.push_front(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[32000].first = 3;
        (*_glb_hdl_sc_channel_map)[32000].second.push_front(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32003].first = 3;
        (*_glb_hdl_sc_channel_map)[32003].second.push_front(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32001].first = 3;
        (*_glb_hdl_sc_channel_map)[32001].second.push_front(p_15_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[32005].first = 1;
        (*_glb_hdl_sc_channel_map)[32005].second.push_front(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(15280976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[32016].first = 3;
        (*_glb_hdl_sc_channel_map)[32016].second.push_front(p_15_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[32019].first = 3;
        (*_glb_hdl_sc_channel_map)[32019].second.push_front(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[32017].first = 1;
        (*_glb_hdl_sc_channel_map)[32017].second.push_front(p_15_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[32020].first = 1;
        (*_glb_hdl_sc_channel_map)[32020].second.push_front(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(15281256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_bid.bind(*p_15_s00_axi_bid);
        p_15_s00_axi_bid->set_sv_netview_offsetfromdp(15281312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(15281368);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(15281424);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[32007].first = 1;
        (*_glb_hdl_sc_channel_map)[32007].second.push_front(p_15_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_arid.bind(*p_15_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[31985].first = 3;
        (*_glb_hdl_sc_channel_map)[31985].second.push_front(p_15_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[31981].first = 3;
        (*_glb_hdl_sc_channel_map)[31981].second.push_front(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[31986].first = 3;
        (*_glb_hdl_sc_channel_map)[31986].second.push_front(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[31992].first = 3;
        (*_glb_hdl_sc_channel_map)[31992].second.push_front(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[31982].first = 3;
        (*_glb_hdl_sc_channel_map)[31982].second.push_front(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[31987].first = 1;
        (*_glb_hdl_sc_channel_map)[31987].second.push_front(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[31983].first = 3;
        (*_glb_hdl_sc_channel_map)[31983].second.push_front(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[31988].first = 3;
        (*_glb_hdl_sc_channel_map)[31988].second.push_front(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[31991].first = 3;
        (*_glb_hdl_sc_channel_map)[31991].second.push_front(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[31989].first = 3;
        (*_glb_hdl_sc_channel_map)[31989].second.push_front(p_15_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[31993].first = 1;
        (*_glb_hdl_sc_channel_map)[31993].second.push_front(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(15282152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_rid.bind(*p_15_s00_axi_rid);
        p_15_s00_axi_rid->set_sv_netview_offsetfromdp(15282208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(15282264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(15282320);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(15282376);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(15282432);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[32013].first = 1;
        (*_glb_hdl_sc_channel_map)[32013].second.push_front(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31980].first = 1;
        (*_glb_hdl_sc_channel_map)[31980].second.push_front(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31984].first = 1;
        (*_glb_hdl_sc_channel_map)[31984].second.push_front(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(15282656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(15282712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(15282768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(15282824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(15282880);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(15282936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(15282992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(15283048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(15283104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(15283160);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(15283216);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[31795].first = 1;
        (*_glb_hdl_sc_channel_map)[31795].second.push_front(p_15_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(15283328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(15283384);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(15283440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(15283496);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(15283552);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[31813].first = 1;
        (*_glb_hdl_sc_channel_map)[31813].second.push_front(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[31799].first = 3;
        (*_glb_hdl_sc_channel_map)[31799].second.push_front(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31801].first = 3;
        (*_glb_hdl_sc_channel_map)[31801].second.push_front(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[31802].first = 3;
        (*_glb_hdl_sc_channel_map)[31802].second.push_front(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31803].first = 1;
        (*_glb_hdl_sc_channel_map)[31803].second.push_front(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(15283888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(15283944);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(15284000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(15284056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(15284112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(15284168);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(15284224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(15284280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(15284336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(15284392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(15284448);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(15284504);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[31783].first = 1;
        (*_glb_hdl_sc_channel_map)[31783].second.push_front(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[31805].first = 3;
        (*_glb_hdl_sc_channel_map)[31805].second.push_front(p_15_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31804].first = 3;
        (*_glb_hdl_sc_channel_map)[31804].second.push_front(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31808].first = 3;
        (*_glb_hdl_sc_channel_map)[31808].second.push_front(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31806].first = 1;
        (*_glb_hdl_sc_channel_map)[31806].second.push_front(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[31809].first = 3;
        (*_glb_hdl_sc_channel_map)[31809].second.push_front(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31810].first = 1;
        (*_glb_hdl_sc_channel_map)[31810].second.push_front(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(15284952);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31773].first = 1;
        (*_glb_hdl_sc_channel_map)[31773].second.push_front(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31777].first = 1;
        (*_glb_hdl_sc_channel_map)[31777].second.push_front(p_15_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awid.bind(*p_15_m02_axi_awid);
        p_15_m02_axi_awid->set_sv_netview_offsetfromdp(15285120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_awaddr.bind(*p_15_m02_axi_awaddr);
        p_15_m02_axi_awaddr->set_sv_netview_offsetfromdp(15285176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_awlen.bind(*p_15_m02_axi_awlen);
        p_15_m02_axi_awlen->set_sv_netview_offsetfromdp(15285232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awsize.bind(*p_15_m02_axi_awsize);
        p_15_m02_axi_awsize->set_sv_netview_offsetfromdp(15285288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_awburst.bind(*p_15_m02_axi_awburst);
        p_15_m02_axi_awburst->set_sv_netview_offsetfromdp(15285344);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awlock.bind(*p_15_m02_axi_awlock);
        p_15_m02_axi_awlock->set_sv_netview_offsetfromdp(15285400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awcache.bind(*p_15_m02_axi_awcache);
        p_15_m02_axi_awcache->set_sv_netview_offsetfromdp(15285456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awprot.bind(*p_15_m02_axi_awprot);
        p_15_m02_axi_awprot->set_sv_netview_offsetfromdp(15285512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awqos.bind(*p_15_m02_axi_awqos);
        p_15_m02_axi_awqos->set_sv_netview_offsetfromdp(15285568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awuser.bind(*p_15_m02_axi_awuser);
        p_15_m02_axi_awuser->set_sv_netview_offsetfromdp(15285624);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awvalid.bind(*p_15_m02_axi_awvalid);
        p_15_m02_axi_awvalid->set_sv_netview_offsetfromdp(15285680);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awready.bind(*p_15_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[31883].first = 1;
        (*_glb_hdl_sc_channel_map)[31883].second.push_front(p_15_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_wdata.bind(*p_15_m02_axi_wdata);
        p_15_m02_axi_wdata->set_sv_netview_offsetfromdp(15285792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_wstrb.bind(*p_15_m02_axi_wstrb);
        p_15_m02_axi_wstrb->set_sv_netview_offsetfromdp(15285848);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wlast.bind(*p_15_m02_axi_wlast);
        p_15_m02_axi_wlast->set_sv_netview_offsetfromdp(15285904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_wuser.bind(*p_15_m02_axi_wuser);
        p_15_m02_axi_wuser->set_sv_netview_offsetfromdp(15285960);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wvalid.bind(*p_15_m02_axi_wvalid);
        p_15_m02_axi_wvalid->set_sv_netview_offsetfromdp(15286016);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wready.bind(*p_15_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[31901].first = 1;
        (*_glb_hdl_sc_channel_map)[31901].second.push_front(p_15_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_bid.bind(*p_15_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[31887].first = 3;
        (*_glb_hdl_sc_channel_map)[31887].second.push_front(p_15_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_bresp.bind(*p_15_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31889].first = 3;
        (*_glb_hdl_sc_channel_map)[31889].second.push_front(p_15_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_buser.bind(*p_15_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[31890].first = 3;
        (*_glb_hdl_sc_channel_map)[31890].second.push_front(p_15_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bvalid.bind(*p_15_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31891].first = 1;
        (*_glb_hdl_sc_channel_map)[31891].second.push_front(p_15_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bready.bind(*p_15_m02_axi_bready);
        p_15_m02_axi_bready->set_sv_netview_offsetfromdp(15286352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_arid.bind(*p_15_m02_axi_arid);
        p_15_m02_axi_arid->set_sv_netview_offsetfromdp(15286408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_araddr.bind(*p_15_m02_axi_araddr);
        p_15_m02_axi_araddr->set_sv_netview_offsetfromdp(15286464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_arlen.bind(*p_15_m02_axi_arlen);
        p_15_m02_axi_arlen->set_sv_netview_offsetfromdp(15286520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arsize.bind(*p_15_m02_axi_arsize);
        p_15_m02_axi_arsize->set_sv_netview_offsetfromdp(15286576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_arburst.bind(*p_15_m02_axi_arburst);
        p_15_m02_axi_arburst->set_sv_netview_offsetfromdp(15286632);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arlock.bind(*p_15_m02_axi_arlock);
        p_15_m02_axi_arlock->set_sv_netview_offsetfromdp(15286688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arcache.bind(*p_15_m02_axi_arcache);
        p_15_m02_axi_arcache->set_sv_netview_offsetfromdp(15286744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arprot.bind(*p_15_m02_axi_arprot);
        p_15_m02_axi_arprot->set_sv_netview_offsetfromdp(15286800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arqos.bind(*p_15_m02_axi_arqos);
        p_15_m02_axi_arqos->set_sv_netview_offsetfromdp(15286856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_aruser.bind(*p_15_m02_axi_aruser);
        p_15_m02_axi_aruser->set_sv_netview_offsetfromdp(15286912);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arvalid.bind(*p_15_m02_axi_arvalid);
        p_15_m02_axi_arvalid->set_sv_netview_offsetfromdp(15286968);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arready.bind(*p_15_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[31871].first = 1;
        (*_glb_hdl_sc_channel_map)[31871].second.push_front(p_15_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_rid.bind(*p_15_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[31893].first = 3;
        (*_glb_hdl_sc_channel_map)[31893].second.push_front(p_15_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_rdata.bind(*p_15_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31892].first = 3;
        (*_glb_hdl_sc_channel_map)[31892].second.push_front(p_15_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_rresp.bind(*p_15_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31896].first = 3;
        (*_glb_hdl_sc_channel_map)[31896].second.push_front(p_15_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rlast.bind(*p_15_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31894].first = 1;
        (*_glb_hdl_sc_channel_map)[31894].second.push_front(p_15_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_ruser.bind(*p_15_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[31897].first = 3;
        (*_glb_hdl_sc_channel_map)[31897].second.push_front(p_15_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rvalid.bind(*p_15_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31898].first = 1;
        (*_glb_hdl_sc_channel_map)[31898].second.push_front(p_15_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rready.bind(*p_15_m02_axi_rready);
        p_15_m02_axi_rready->set_sv_netview_offsetfromdp(15287416);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aclk.bind(*p_15_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31861].first = 1;
        (*_glb_hdl_sc_channel_map)[31861].second.push_front(p_15_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aresetn.bind(*p_15_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31865].first = 1;
        (*_glb_hdl_sc_channel_map)[31865].second.push_front(p_15_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awid.bind(*p_15_m03_axi_awid);
        p_15_m03_axi_awid->set_sv_netview_offsetfromdp(15287584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_awaddr.bind(*p_15_m03_axi_awaddr);
        p_15_m03_axi_awaddr->set_sv_netview_offsetfromdp(15287640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_awlen.bind(*p_15_m03_axi_awlen);
        p_15_m03_axi_awlen->set_sv_netview_offsetfromdp(15287696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awsize.bind(*p_15_m03_axi_awsize);
        p_15_m03_axi_awsize->set_sv_netview_offsetfromdp(15287752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_awburst.bind(*p_15_m03_axi_awburst);
        p_15_m03_axi_awburst->set_sv_netview_offsetfromdp(15287808);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awlock.bind(*p_15_m03_axi_awlock);
        p_15_m03_axi_awlock->set_sv_netview_offsetfromdp(15287864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awcache.bind(*p_15_m03_axi_awcache);
        p_15_m03_axi_awcache->set_sv_netview_offsetfromdp(15287920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awprot.bind(*p_15_m03_axi_awprot);
        p_15_m03_axi_awprot->set_sv_netview_offsetfromdp(15287976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awqos.bind(*p_15_m03_axi_awqos);
        p_15_m03_axi_awqos->set_sv_netview_offsetfromdp(15288032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awuser.bind(*p_15_m03_axi_awuser);
        p_15_m03_axi_awuser->set_sv_netview_offsetfromdp(15288088);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awvalid.bind(*p_15_m03_axi_awvalid);
        p_15_m03_axi_awvalid->set_sv_netview_offsetfromdp(15288144);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awready.bind(*p_15_m03_axi_awready);
        (*_glb_hdl_sc_channel_map)[31927].first = 1;
        (*_glb_hdl_sc_channel_map)[31927].second.push_front(p_15_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_wdata.bind(*p_15_m03_axi_wdata);
        p_15_m03_axi_wdata->set_sv_netview_offsetfromdp(15288256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_wstrb.bind(*p_15_m03_axi_wstrb);
        p_15_m03_axi_wstrb->set_sv_netview_offsetfromdp(15288312);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wlast.bind(*p_15_m03_axi_wlast);
        p_15_m03_axi_wlast->set_sv_netview_offsetfromdp(15288368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_wuser.bind(*p_15_m03_axi_wuser);
        p_15_m03_axi_wuser->set_sv_netview_offsetfromdp(15288424);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wvalid.bind(*p_15_m03_axi_wvalid);
        p_15_m03_axi_wvalid->set_sv_netview_offsetfromdp(15288480);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wready.bind(*p_15_m03_axi_wready);
        (*_glb_hdl_sc_channel_map)[31945].first = 1;
        (*_glb_hdl_sc_channel_map)[31945].second.push_front(p_15_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_bid.bind(*p_15_m03_axi_bid);
        (*_glb_hdl_sc_channel_map)[31931].first = 3;
        (*_glb_hdl_sc_channel_map)[31931].second.push_front(p_15_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_bresp.bind(*p_15_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31933].first = 3;
        (*_glb_hdl_sc_channel_map)[31933].second.push_front(p_15_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_buser.bind(*p_15_m03_axi_buser);
        (*_glb_hdl_sc_channel_map)[31934].first = 3;
        (*_glb_hdl_sc_channel_map)[31934].second.push_front(p_15_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bvalid.bind(*p_15_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31935].first = 1;
        (*_glb_hdl_sc_channel_map)[31935].second.push_front(p_15_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bready.bind(*p_15_m03_axi_bready);
        p_15_m03_axi_bready->set_sv_netview_offsetfromdp(15288816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_arid.bind(*p_15_m03_axi_arid);
        p_15_m03_axi_arid->set_sv_netview_offsetfromdp(15288872);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_araddr.bind(*p_15_m03_axi_araddr);
        p_15_m03_axi_araddr->set_sv_netview_offsetfromdp(15288928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_arlen.bind(*p_15_m03_axi_arlen);
        p_15_m03_axi_arlen->set_sv_netview_offsetfromdp(15288984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arsize.bind(*p_15_m03_axi_arsize);
        p_15_m03_axi_arsize->set_sv_netview_offsetfromdp(15289040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_arburst.bind(*p_15_m03_axi_arburst);
        p_15_m03_axi_arburst->set_sv_netview_offsetfromdp(15289096);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arlock.bind(*p_15_m03_axi_arlock);
        p_15_m03_axi_arlock->set_sv_netview_offsetfromdp(15289152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arcache.bind(*p_15_m03_axi_arcache);
        p_15_m03_axi_arcache->set_sv_netview_offsetfromdp(15289208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arprot.bind(*p_15_m03_axi_arprot);
        p_15_m03_axi_arprot->set_sv_netview_offsetfromdp(15289264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arqos.bind(*p_15_m03_axi_arqos);
        p_15_m03_axi_arqos->set_sv_netview_offsetfromdp(15289320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_aruser.bind(*p_15_m03_axi_aruser);
        p_15_m03_axi_aruser->set_sv_netview_offsetfromdp(15289376);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arvalid.bind(*p_15_m03_axi_arvalid);
        p_15_m03_axi_arvalid->set_sv_netview_offsetfromdp(15289432);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arready.bind(*p_15_m03_axi_arready);
        (*_glb_hdl_sc_channel_map)[31915].first = 1;
        (*_glb_hdl_sc_channel_map)[31915].second.push_front(p_15_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_rid.bind(*p_15_m03_axi_rid);
        (*_glb_hdl_sc_channel_map)[31937].first = 3;
        (*_glb_hdl_sc_channel_map)[31937].second.push_front(p_15_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_rdata.bind(*p_15_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31936].first = 3;
        (*_glb_hdl_sc_channel_map)[31936].second.push_front(p_15_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_rresp.bind(*p_15_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31940].first = 3;
        (*_glb_hdl_sc_channel_map)[31940].second.push_front(p_15_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rlast.bind(*p_15_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31938].first = 1;
        (*_glb_hdl_sc_channel_map)[31938].second.push_front(p_15_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_ruser.bind(*p_15_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map)[31941].first = 3;
        (*_glb_hdl_sc_channel_map)[31941].second.push_front(p_15_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rvalid.bind(*p_15_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31942].first = 1;
        (*_glb_hdl_sc_channel_map)[31942].second.push_front(p_15_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rready.bind(*p_15_m03_axi_rready);
        p_15_m03_axi_rready->set_sv_netview_offsetfromdp(15289880);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aclk.bind(*p_15_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31905].first = 1;
        (*_glb_hdl_sc_channel_map)[31905].second.push_front(p_15_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aresetn.bind(*p_15_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31909].first = 1;
        (*_glb_hdl_sc_channel_map)[31909].second.push_front(p_15_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awid.bind(*p_15_m04_axi_awid);
        p_15_m04_axi_awid->set_sv_netview_offsetfromdp(15290048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_awaddr.bind(*p_15_m04_axi_awaddr);
        p_15_m04_axi_awaddr->set_sv_netview_offsetfromdp(15290104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_awlen.bind(*p_15_m04_axi_awlen);
        p_15_m04_axi_awlen->set_sv_netview_offsetfromdp(15290160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awsize.bind(*p_15_m04_axi_awsize);
        p_15_m04_axi_awsize->set_sv_netview_offsetfromdp(15290216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_awburst.bind(*p_15_m04_axi_awburst);
        p_15_m04_axi_awburst->set_sv_netview_offsetfromdp(15290272);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awlock.bind(*p_15_m04_axi_awlock);
        p_15_m04_axi_awlock->set_sv_netview_offsetfromdp(15290328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awcache.bind(*p_15_m04_axi_awcache);
        p_15_m04_axi_awcache->set_sv_netview_offsetfromdp(15290384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awprot.bind(*p_15_m04_axi_awprot);
        p_15_m04_axi_awprot->set_sv_netview_offsetfromdp(15290440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awqos.bind(*p_15_m04_axi_awqos);
        p_15_m04_axi_awqos->set_sv_netview_offsetfromdp(15290496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awuser.bind(*p_15_m04_axi_awuser);
        p_15_m04_axi_awuser->set_sv_netview_offsetfromdp(15290552);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awvalid.bind(*p_15_m04_axi_awvalid);
        p_15_m04_axi_awvalid->set_sv_netview_offsetfromdp(15290608);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awready.bind(*p_15_m04_axi_awready);
        (*_glb_hdl_sc_channel_map)[31962].first = 1;
        (*_glb_hdl_sc_channel_map)[31962].second.push_front(p_15_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_wdata.bind(*p_15_m04_axi_wdata);
        p_15_m04_axi_wdata->set_sv_netview_offsetfromdp(15290720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_wstrb.bind(*p_15_m04_axi_wstrb);
        p_15_m04_axi_wstrb->set_sv_netview_offsetfromdp(15290776);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wlast.bind(*p_15_m04_axi_wlast);
        p_15_m04_axi_wlast->set_sv_netview_offsetfromdp(15290832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_wuser.bind(*p_15_m04_axi_wuser);
        p_15_m04_axi_wuser->set_sv_netview_offsetfromdp(15290888);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wvalid.bind(*p_15_m04_axi_wvalid);
        p_15_m04_axi_wvalid->set_sv_netview_offsetfromdp(15290944);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wready.bind(*p_15_m04_axi_wready);
        (*_glb_hdl_sc_channel_map)[31977].first = 1;
        (*_glb_hdl_sc_channel_map)[31977].second.push_front(p_15_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_bid.bind(*p_15_m04_axi_bid);
        (*_glb_hdl_sc_channel_map)[31965].first = 3;
        (*_glb_hdl_sc_channel_map)[31965].second.push_front(p_15_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_bresp.bind(*p_15_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31967].first = 3;
        (*_glb_hdl_sc_channel_map)[31967].second.push_front(p_15_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_buser.bind(*p_15_m04_axi_buser);
        (*_glb_hdl_sc_channel_map)[1171].first = 3;
        (*_glb_hdl_sc_channel_map)[1171].second.push_front(p_15_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bvalid.bind(*p_15_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31968].first = 1;
        (*_glb_hdl_sc_channel_map)[31968].second.push_front(p_15_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bready.bind(*p_15_m04_axi_bready);
        p_15_m04_axi_bready->set_sv_netview_offsetfromdp(15291280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_arid.bind(*p_15_m04_axi_arid);
        p_15_m04_axi_arid->set_sv_netview_offsetfromdp(15291336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_araddr.bind(*p_15_m04_axi_araddr);
        p_15_m04_axi_araddr->set_sv_netview_offsetfromdp(15291392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_arlen.bind(*p_15_m04_axi_arlen);
        p_15_m04_axi_arlen->set_sv_netview_offsetfromdp(15291448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arsize.bind(*p_15_m04_axi_arsize);
        p_15_m04_axi_arsize->set_sv_netview_offsetfromdp(15291504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_arburst.bind(*p_15_m04_axi_arburst);
        p_15_m04_axi_arburst->set_sv_netview_offsetfromdp(15291560);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arlock.bind(*p_15_m04_axi_arlock);
        p_15_m04_axi_arlock->set_sv_netview_offsetfromdp(15291616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arcache.bind(*p_15_m04_axi_arcache);
        p_15_m04_axi_arcache->set_sv_netview_offsetfromdp(15291672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arprot.bind(*p_15_m04_axi_arprot);
        p_15_m04_axi_arprot->set_sv_netview_offsetfromdp(15291728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arqos.bind(*p_15_m04_axi_arqos);
        p_15_m04_axi_arqos->set_sv_netview_offsetfromdp(15291784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_aruser.bind(*p_15_m04_axi_aruser);
        p_15_m04_axi_aruser->set_sv_netview_offsetfromdp(15291840);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arvalid.bind(*p_15_m04_axi_arvalid);
        p_15_m04_axi_arvalid->set_sv_netview_offsetfromdp(15291896);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arready.bind(*p_15_m04_axi_arready);
        (*_glb_hdl_sc_channel_map)[31955].first = 1;
        (*_glb_hdl_sc_channel_map)[31955].second.push_front(p_15_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_rid.bind(*p_15_m04_axi_rid);
        (*_glb_hdl_sc_channel_map)[31970].first = 3;
        (*_glb_hdl_sc_channel_map)[31970].second.push_front(p_15_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_rdata.bind(*p_15_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31969].first = 3;
        (*_glb_hdl_sc_channel_map)[31969].second.push_front(p_15_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_rresp.bind(*p_15_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31973].first = 3;
        (*_glb_hdl_sc_channel_map)[31973].second.push_front(p_15_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rlast.bind(*p_15_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31971].first = 1;
        (*_glb_hdl_sc_channel_map)[31971].second.push_front(p_15_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_ruser.bind(*p_15_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map)[1170].first = 3;
        (*_glb_hdl_sc_channel_map)[1170].second.push_front(p_15_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rvalid.bind(*p_15_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31974].first = 1;
        (*_glb_hdl_sc_channel_map)[31974].second.push_front(p_15_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rready.bind(*p_15_m04_axi_rready);
        p_15_m04_axi_rready->set_sv_netview_offsetfromdp(15292344);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aclk.bind(*p_15_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31949].first = 1;
        (*_glb_hdl_sc_channel_map)[31949].second.push_front(p_15_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aresetn.bind(*p_15_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31952].first = 1;
        (*_glb_hdl_sc_channel_map)[31952].second.push_front(p_15_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awid.bind(*p_15_m01_axi_awid);
        p_15_m01_axi_awid->set_sv_netview_offsetfromdp(15292512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_awaddr.bind(*p_15_m01_axi_awaddr);
        p_15_m01_axi_awaddr->set_sv_netview_offsetfromdp(15292568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_awlen.bind(*p_15_m01_axi_awlen);
        p_15_m01_axi_awlen->set_sv_netview_offsetfromdp(15292624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awsize.bind(*p_15_m01_axi_awsize);
        p_15_m01_axi_awsize->set_sv_netview_offsetfromdp(15292680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_awburst.bind(*p_15_m01_axi_awburst);
        p_15_m01_axi_awburst->set_sv_netview_offsetfromdp(15292736);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awlock.bind(*p_15_m01_axi_awlock);
        p_15_m01_axi_awlock->set_sv_netview_offsetfromdp(15292792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awcache.bind(*p_15_m01_axi_awcache);
        p_15_m01_axi_awcache->set_sv_netview_offsetfromdp(15292848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awprot.bind(*p_15_m01_axi_awprot);
        p_15_m01_axi_awprot->set_sv_netview_offsetfromdp(15292904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awqos.bind(*p_15_m01_axi_awqos);
        p_15_m01_axi_awqos->set_sv_netview_offsetfromdp(15292960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awuser.bind(*p_15_m01_axi_awuser);
        p_15_m01_axi_awuser->set_sv_netview_offsetfromdp(15293016);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awvalid.bind(*p_15_m01_axi_awvalid);
        p_15_m01_axi_awvalid->set_sv_netview_offsetfromdp(15293072);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awready.bind(*p_15_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[31839].first = 1;
        (*_glb_hdl_sc_channel_map)[31839].second.push_front(p_15_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_wdata.bind(*p_15_m01_axi_wdata);
        p_15_m01_axi_wdata->set_sv_netview_offsetfromdp(15293184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_wstrb.bind(*p_15_m01_axi_wstrb);
        p_15_m01_axi_wstrb->set_sv_netview_offsetfromdp(15293240);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wlast.bind(*p_15_m01_axi_wlast);
        p_15_m01_axi_wlast->set_sv_netview_offsetfromdp(15293296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_wuser.bind(*p_15_m01_axi_wuser);
        p_15_m01_axi_wuser->set_sv_netview_offsetfromdp(15293352);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wvalid.bind(*p_15_m01_axi_wvalid);
        p_15_m01_axi_wvalid->set_sv_netview_offsetfromdp(15293408);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wready.bind(*p_15_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[31857].first = 1;
        (*_glb_hdl_sc_channel_map)[31857].second.push_front(p_15_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_bid.bind(*p_15_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[31843].first = 3;
        (*_glb_hdl_sc_channel_map)[31843].second.push_front(p_15_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_bresp.bind(*p_15_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31845].first = 3;
        (*_glb_hdl_sc_channel_map)[31845].second.push_front(p_15_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_buser.bind(*p_15_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[31846].first = 3;
        (*_glb_hdl_sc_channel_map)[31846].second.push_front(p_15_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bvalid.bind(*p_15_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31847].first = 1;
        (*_glb_hdl_sc_channel_map)[31847].second.push_front(p_15_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bready.bind(*p_15_m01_axi_bready);
        p_15_m01_axi_bready->set_sv_netview_offsetfromdp(15293744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_arid.bind(*p_15_m01_axi_arid);
        p_15_m01_axi_arid->set_sv_netview_offsetfromdp(15293800);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_araddr.bind(*p_15_m01_axi_araddr);
        p_15_m01_axi_araddr->set_sv_netview_offsetfromdp(15293856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_arlen.bind(*p_15_m01_axi_arlen);
        p_15_m01_axi_arlen->set_sv_netview_offsetfromdp(15293912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arsize.bind(*p_15_m01_axi_arsize);
        p_15_m01_axi_arsize->set_sv_netview_offsetfromdp(15293968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_arburst.bind(*p_15_m01_axi_arburst);
        p_15_m01_axi_arburst->set_sv_netview_offsetfromdp(15294024);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arlock.bind(*p_15_m01_axi_arlock);
        p_15_m01_axi_arlock->set_sv_netview_offsetfromdp(15294080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arcache.bind(*p_15_m01_axi_arcache);
        p_15_m01_axi_arcache->set_sv_netview_offsetfromdp(15294136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arprot.bind(*p_15_m01_axi_arprot);
        p_15_m01_axi_arprot->set_sv_netview_offsetfromdp(15294192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arqos.bind(*p_15_m01_axi_arqos);
        p_15_m01_axi_arqos->set_sv_netview_offsetfromdp(15294248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_aruser.bind(*p_15_m01_axi_aruser);
        p_15_m01_axi_aruser->set_sv_netview_offsetfromdp(15294304);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arvalid.bind(*p_15_m01_axi_arvalid);
        p_15_m01_axi_arvalid->set_sv_netview_offsetfromdp(15294360);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arready.bind(*p_15_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[31827].first = 1;
        (*_glb_hdl_sc_channel_map)[31827].second.push_front(p_15_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_rid.bind(*p_15_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[31849].first = 3;
        (*_glb_hdl_sc_channel_map)[31849].second.push_front(p_15_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_rdata.bind(*p_15_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31848].first = 3;
        (*_glb_hdl_sc_channel_map)[31848].second.push_front(p_15_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_rresp.bind(*p_15_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31852].first = 3;
        (*_glb_hdl_sc_channel_map)[31852].second.push_front(p_15_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rlast.bind(*p_15_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31850].first = 1;
        (*_glb_hdl_sc_channel_map)[31850].second.push_front(p_15_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_ruser.bind(*p_15_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[31853].first = 3;
        (*_glb_hdl_sc_channel_map)[31853].second.push_front(p_15_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rvalid.bind(*p_15_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31854].first = 1;
        (*_glb_hdl_sc_channel_map)[31854].second.push_front(p_15_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rready.bind(*p_15_m01_axi_rready);
        p_15_m01_axi_rready->set_sv_netview_offsetfromdp(15294808);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aclk.bind(*p_15_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31817].first = 1;
        (*_glb_hdl_sc_channel_map)[31817].second.push_front(p_15_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aresetn.bind(*p_15_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31821].first = 1;
        (*_glb_hdl_sc_channel_map)[31821].second.push_front(p_15_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_awid.bind(*p_15_s03_axi_awid);
        (*_glb_hdl_sc_channel_map)[32120].first = 3;
        (*_glb_hdl_sc_channel_map)[32120].second.push_front(p_15_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_awaddr.bind(*p_15_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[32117].first = 3;
        (*_glb_hdl_sc_channel_map)[32117].second.push_front(p_15_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_awlen.bind(*p_15_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map)[32121].first = 3;
        (*_glb_hdl_sc_channel_map)[32121].second.push_front(p_15_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awsize.bind(*p_15_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map)[32127].first = 3;
        (*_glb_hdl_sc_channel_map)[32127].second.push_front(p_15_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_awburst.bind(*p_15_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map)[32118].first = 3;
        (*_glb_hdl_sc_channel_map)[32118].second.push_front(p_15_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awlock.bind(*p_15_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map)[32122].first = 1;
        (*_glb_hdl_sc_channel_map)[32122].second.push_front(p_15_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awcache.bind(*p_15_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map)[32119].first = 3;
        (*_glb_hdl_sc_channel_map)[32119].second.push_front(p_15_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awprot.bind(*p_15_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map)[32123].first = 3;
        (*_glb_hdl_sc_channel_map)[32123].second.push_front(p_15_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awregion.bind(*p_15_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32126].first = 3;
        (*_glb_hdl_sc_channel_map)[32126].second.push_front(p_15_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awqos.bind(*p_15_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32124].first = 3;
        (*_glb_hdl_sc_channel_map)[32124].second.push_front(p_15_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awvalid.bind(*p_15_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[32128].first = 1;
        (*_glb_hdl_sc_channel_map)[32128].second.push_front(p_15_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awready.bind(*p_15_s03_axi_awready);
        p_15_s03_axi_awready->set_sv_netview_offsetfromdp(15295592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_wdata.bind(*p_15_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map)[32139].first = 3;
        (*_glb_hdl_sc_channel_map)[32139].second.push_front(p_15_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_wstrb.bind(*p_15_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[32142].first = 3;
        (*_glb_hdl_sc_channel_map)[32142].second.push_front(p_15_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wlast.bind(*p_15_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map)[32140].first = 1;
        (*_glb_hdl_sc_channel_map)[32140].second.push_front(p_15_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wvalid.bind(*p_15_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[32143].first = 1;
        (*_glb_hdl_sc_channel_map)[32143].second.push_front(p_15_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wready.bind(*p_15_s03_axi_wready);
        p_15_s03_axi_wready->set_sv_netview_offsetfromdp(15295872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_bid.bind(*p_15_s03_axi_bid);
        p_15_s03_axi_bid->set_sv_netview_offsetfromdp(15295928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_bresp.bind(*p_15_s03_axi_bresp);
        p_15_s03_axi_bresp->set_sv_netview_offsetfromdp(15295984);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bvalid.bind(*p_15_s03_axi_bvalid);
        p_15_s03_axi_bvalid->set_sv_netview_offsetfromdp(15296040);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bready.bind(*p_15_s03_axi_bready);
        (*_glb_hdl_sc_channel_map)[32130].first = 1;
        (*_glb_hdl_sc_channel_map)[32130].second.push_front(p_15_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_arid.bind(*p_15_s03_axi_arid);
        (*_glb_hdl_sc_channel_map)[32108].first = 3;
        (*_glb_hdl_sc_channel_map)[32108].second.push_front(p_15_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_araddr.bind(*p_15_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map)[32104].first = 3;
        (*_glb_hdl_sc_channel_map)[32104].second.push_front(p_15_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_arlen.bind(*p_15_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map)[32109].first = 3;
        (*_glb_hdl_sc_channel_map)[32109].second.push_front(p_15_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arsize.bind(*p_15_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map)[32115].first = 3;
        (*_glb_hdl_sc_channel_map)[32115].second.push_front(p_15_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_arburst.bind(*p_15_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map)[32105].first = 3;
        (*_glb_hdl_sc_channel_map)[32105].second.push_front(p_15_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arlock.bind(*p_15_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map)[32110].first = 1;
        (*_glb_hdl_sc_channel_map)[32110].second.push_front(p_15_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arcache.bind(*p_15_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map)[32106].first = 3;
        (*_glb_hdl_sc_channel_map)[32106].second.push_front(p_15_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arprot.bind(*p_15_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map)[32111].first = 3;
        (*_glb_hdl_sc_channel_map)[32111].second.push_front(p_15_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arregion.bind(*p_15_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map)[32114].first = 3;
        (*_glb_hdl_sc_channel_map)[32114].second.push_front(p_15_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arqos.bind(*p_15_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map)[32112].first = 3;
        (*_glb_hdl_sc_channel_map)[32112].second.push_front(p_15_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arvalid.bind(*p_15_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[32116].first = 1;
        (*_glb_hdl_sc_channel_map)[32116].second.push_front(p_15_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arready.bind(*p_15_s03_axi_arready);
        p_15_s03_axi_arready->set_sv_netview_offsetfromdp(15296768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_rid.bind(*p_15_s03_axi_rid);
        p_15_s03_axi_rid->set_sv_netview_offsetfromdp(15296824);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_rdata.bind(*p_15_s03_axi_rdata);
        p_15_s03_axi_rdata->set_sv_netview_offsetfromdp(15296880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_rresp.bind(*p_15_s03_axi_rresp);
        p_15_s03_axi_rresp->set_sv_netview_offsetfromdp(15296936);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rlast.bind(*p_15_s03_axi_rlast);
        p_15_s03_axi_rlast->set_sv_netview_offsetfromdp(15296992);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rvalid.bind(*p_15_s03_axi_rvalid);
        p_15_s03_axi_rvalid->set_sv_netview_offsetfromdp(15297048);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rready.bind(*p_15_s03_axi_rready);
        (*_glb_hdl_sc_channel_map)[32136].first = 1;
        (*_glb_hdl_sc_channel_map)[32136].second.push_front(p_15_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aclk.bind(*p_15_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[32103].first = 1;
        (*_glb_hdl_sc_channel_map)[32103].second.push_front(p_15_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aresetn.bind(*p_15_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[32107].first = 1;
        (*_glb_hdl_sc_channel_map)[32107].second.push_front(p_15_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_awid.bind(*p_15_s01_axi_awid);
        (*_glb_hdl_sc_channel_map)[32038].first = 3;
        (*_glb_hdl_sc_channel_map)[32038].second.push_front(p_15_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_awaddr.bind(*p_15_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[32035].first = 3;
        (*_glb_hdl_sc_channel_map)[32035].second.push_front(p_15_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_awlen.bind(*p_15_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map)[32039].first = 3;
        (*_glb_hdl_sc_channel_map)[32039].second.push_front(p_15_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awsize.bind(*p_15_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map)[32045].first = 3;
        (*_glb_hdl_sc_channel_map)[32045].second.push_front(p_15_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_awburst.bind(*p_15_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map)[32036].first = 3;
        (*_glb_hdl_sc_channel_map)[32036].second.push_front(p_15_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awlock.bind(*p_15_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map)[32040].first = 1;
        (*_glb_hdl_sc_channel_map)[32040].second.push_front(p_15_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awcache.bind(*p_15_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map)[32037].first = 3;
        (*_glb_hdl_sc_channel_map)[32037].second.push_front(p_15_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awprot.bind(*p_15_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map)[32041].first = 3;
        (*_glb_hdl_sc_channel_map)[32041].second.push_front(p_15_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awregion.bind(*p_15_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32044].first = 3;
        (*_glb_hdl_sc_channel_map)[32044].second.push_front(p_15_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awqos.bind(*p_15_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32042].first = 3;
        (*_glb_hdl_sc_channel_map)[32042].second.push_front(p_15_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awvalid.bind(*p_15_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[32046].first = 1;
        (*_glb_hdl_sc_channel_map)[32046].second.push_front(p_15_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awready.bind(*p_15_s01_axi_awready);
        p_15_s01_axi_awready->set_sv_netview_offsetfromdp(15297888);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_wdata.bind(*p_15_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map)[32057].first = 3;
        (*_glb_hdl_sc_channel_map)[32057].second.push_front(p_15_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_wstrb.bind(*p_15_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[32060].first = 3;
        (*_glb_hdl_sc_channel_map)[32060].second.push_front(p_15_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wlast.bind(*p_15_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map)[32058].first = 1;
        (*_glb_hdl_sc_channel_map)[32058].second.push_front(p_15_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wvalid.bind(*p_15_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[32061].first = 1;
        (*_glb_hdl_sc_channel_map)[32061].second.push_front(p_15_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wready.bind(*p_15_s01_axi_wready);
        p_15_s01_axi_wready->set_sv_netview_offsetfromdp(15298168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_bid.bind(*p_15_s01_axi_bid);
        p_15_s01_axi_bid->set_sv_netview_offsetfromdp(15298224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_bresp.bind(*p_15_s01_axi_bresp);
        p_15_s01_axi_bresp->set_sv_netview_offsetfromdp(15298280);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bvalid.bind(*p_15_s01_axi_bvalid);
        p_15_s01_axi_bvalid->set_sv_netview_offsetfromdp(15298336);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bready.bind(*p_15_s01_axi_bready);
        (*_glb_hdl_sc_channel_map)[32048].first = 1;
        (*_glb_hdl_sc_channel_map)[32048].second.push_front(p_15_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_arid.bind(*p_15_s01_axi_arid);
        (*_glb_hdl_sc_channel_map)[32026].first = 3;
        (*_glb_hdl_sc_channel_map)[32026].second.push_front(p_15_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_araddr.bind(*p_15_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map)[32022].first = 3;
        (*_glb_hdl_sc_channel_map)[32022].second.push_front(p_15_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_arlen.bind(*p_15_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map)[32027].first = 3;
        (*_glb_hdl_sc_channel_map)[32027].second.push_front(p_15_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arsize.bind(*p_15_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map)[32033].first = 3;
        (*_glb_hdl_sc_channel_map)[32033].second.push_front(p_15_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_arburst.bind(*p_15_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map)[32023].first = 3;
        (*_glb_hdl_sc_channel_map)[32023].second.push_front(p_15_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arlock.bind(*p_15_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map)[32028].first = 1;
        (*_glb_hdl_sc_channel_map)[32028].second.push_front(p_15_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arcache.bind(*p_15_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map)[32024].first = 3;
        (*_glb_hdl_sc_channel_map)[32024].second.push_front(p_15_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arprot.bind(*p_15_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map)[32029].first = 3;
        (*_glb_hdl_sc_channel_map)[32029].second.push_front(p_15_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arregion.bind(*p_15_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map)[32032].first = 3;
        (*_glb_hdl_sc_channel_map)[32032].second.push_front(p_15_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arqos.bind(*p_15_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map)[32030].first = 3;
        (*_glb_hdl_sc_channel_map)[32030].second.push_front(p_15_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arvalid.bind(*p_15_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[32034].first = 1;
        (*_glb_hdl_sc_channel_map)[32034].second.push_front(p_15_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arready.bind(*p_15_s01_axi_arready);
        p_15_s01_axi_arready->set_sv_netview_offsetfromdp(15299064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_rid.bind(*p_15_s01_axi_rid);
        p_15_s01_axi_rid->set_sv_netview_offsetfromdp(15299120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_rdata.bind(*p_15_s01_axi_rdata);
        p_15_s01_axi_rdata->set_sv_netview_offsetfromdp(15299176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_rresp.bind(*p_15_s01_axi_rresp);
        p_15_s01_axi_rresp->set_sv_netview_offsetfromdp(15299232);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rlast.bind(*p_15_s01_axi_rlast);
        p_15_s01_axi_rlast->set_sv_netview_offsetfromdp(15299288);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rvalid.bind(*p_15_s01_axi_rvalid);
        p_15_s01_axi_rvalid->set_sv_netview_offsetfromdp(15299344);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rready.bind(*p_15_s01_axi_rready);
        (*_glb_hdl_sc_channel_map)[32054].first = 1;
        (*_glb_hdl_sc_channel_map)[32054].second.push_front(p_15_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aclk.bind(*p_15_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[32021].first = 1;
        (*_glb_hdl_sc_channel_map)[32021].second.push_front(p_15_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aresetn.bind(*p_15_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[32025].first = 1;
        (*_glb_hdl_sc_channel_map)[32025].second.push_front(p_15_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_awid.bind(*p_15_s02_axi_awid);
        (*_glb_hdl_sc_channel_map)[32079].first = 3;
        (*_glb_hdl_sc_channel_map)[32079].second.push_front(p_15_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_awaddr.bind(*p_15_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[32076].first = 3;
        (*_glb_hdl_sc_channel_map)[32076].second.push_front(p_15_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_awlen.bind(*p_15_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map)[32080].first = 3;
        (*_glb_hdl_sc_channel_map)[32080].second.push_front(p_15_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awsize.bind(*p_15_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map)[32086].first = 3;
        (*_glb_hdl_sc_channel_map)[32086].second.push_front(p_15_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_awburst.bind(*p_15_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map)[32077].first = 3;
        (*_glb_hdl_sc_channel_map)[32077].second.push_front(p_15_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awlock.bind(*p_15_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map)[32081].first = 1;
        (*_glb_hdl_sc_channel_map)[32081].second.push_front(p_15_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awcache.bind(*p_15_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map)[32078].first = 3;
        (*_glb_hdl_sc_channel_map)[32078].second.push_front(p_15_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awprot.bind(*p_15_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map)[32082].first = 3;
        (*_glb_hdl_sc_channel_map)[32082].second.push_front(p_15_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awregion.bind(*p_15_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32085].first = 3;
        (*_glb_hdl_sc_channel_map)[32085].second.push_front(p_15_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awqos.bind(*p_15_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32083].first = 3;
        (*_glb_hdl_sc_channel_map)[32083].second.push_front(p_15_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awvalid.bind(*p_15_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[32087].first = 1;
        (*_glb_hdl_sc_channel_map)[32087].second.push_front(p_15_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awready.bind(*p_15_s02_axi_awready);
        p_15_s02_axi_awready->set_sv_netview_offsetfromdp(15300184);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_wdata.bind(*p_15_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map)[32098].first = 3;
        (*_glb_hdl_sc_channel_map)[32098].second.push_front(p_15_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_wstrb.bind(*p_15_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[32101].first = 3;
        (*_glb_hdl_sc_channel_map)[32101].second.push_front(p_15_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wlast.bind(*p_15_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map)[32099].first = 1;
        (*_glb_hdl_sc_channel_map)[32099].second.push_front(p_15_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wvalid.bind(*p_15_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[32102].first = 1;
        (*_glb_hdl_sc_channel_map)[32102].second.push_front(p_15_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wready.bind(*p_15_s02_axi_wready);
        p_15_s02_axi_wready->set_sv_netview_offsetfromdp(15300464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_bid.bind(*p_15_s02_axi_bid);
        p_15_s02_axi_bid->set_sv_netview_offsetfromdp(15300520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_bresp.bind(*p_15_s02_axi_bresp);
        p_15_s02_axi_bresp->set_sv_netview_offsetfromdp(15300576);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bvalid.bind(*p_15_s02_axi_bvalid);
        p_15_s02_axi_bvalid->set_sv_netview_offsetfromdp(15300632);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bready.bind(*p_15_s02_axi_bready);
        (*_glb_hdl_sc_channel_map)[32089].first = 1;
        (*_glb_hdl_sc_channel_map)[32089].second.push_front(p_15_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_arid.bind(*p_15_s02_axi_arid);
        (*_glb_hdl_sc_channel_map)[32067].first = 3;
        (*_glb_hdl_sc_channel_map)[32067].second.push_front(p_15_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_araddr.bind(*p_15_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map)[32063].first = 3;
        (*_glb_hdl_sc_channel_map)[32063].second.push_front(p_15_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_arlen.bind(*p_15_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map)[32068].first = 3;
        (*_glb_hdl_sc_channel_map)[32068].second.push_front(p_15_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arsize.bind(*p_15_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map)[32074].first = 3;
        (*_glb_hdl_sc_channel_map)[32074].second.push_front(p_15_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_arburst.bind(*p_15_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map)[32064].first = 3;
        (*_glb_hdl_sc_channel_map)[32064].second.push_front(p_15_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arlock.bind(*p_15_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map)[32069].first = 1;
        (*_glb_hdl_sc_channel_map)[32069].second.push_front(p_15_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arcache.bind(*p_15_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map)[32065].first = 3;
        (*_glb_hdl_sc_channel_map)[32065].second.push_front(p_15_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arprot.bind(*p_15_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map)[32070].first = 3;
        (*_glb_hdl_sc_channel_map)[32070].second.push_front(p_15_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arregion.bind(*p_15_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map)[32073].first = 3;
        (*_glb_hdl_sc_channel_map)[32073].second.push_front(p_15_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arqos.bind(*p_15_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map)[32071].first = 3;
        (*_glb_hdl_sc_channel_map)[32071].second.push_front(p_15_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arvalid.bind(*p_15_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[32075].first = 1;
        (*_glb_hdl_sc_channel_map)[32075].second.push_front(p_15_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arready.bind(*p_15_s02_axi_arready);
        p_15_s02_axi_arready->set_sv_netview_offsetfromdp(15301360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_rid.bind(*p_15_s02_axi_rid);
        p_15_s02_axi_rid->set_sv_netview_offsetfromdp(15301416);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_rdata.bind(*p_15_s02_axi_rdata);
        p_15_s02_axi_rdata->set_sv_netview_offsetfromdp(15301472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_rresp.bind(*p_15_s02_axi_rresp);
        p_15_s02_axi_rresp->set_sv_netview_offsetfromdp(15301528);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rlast.bind(*p_15_s02_axi_rlast);
        p_15_s02_axi_rlast->set_sv_netview_offsetfromdp(15301584);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rvalid.bind(*p_15_s02_axi_rvalid);
        p_15_s02_axi_rvalid->set_sv_netview_offsetfromdp(15301640);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rready.bind(*p_15_s02_axi_rready);
        (*_glb_hdl_sc_channel_map)[32095].first = 1;
        (*_glb_hdl_sc_channel_map)[32095].second.push_front(p_15_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aclk.bind(*p_15_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[32062].first = 1;
        (*_glb_hdl_sc_channel_map)[32062].second.push_front(p_15_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aresetn.bind(*p_15_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[32066].first = 1;
        (*_glb_hdl_sc_channel_map)[32066].second.push_front(p_15_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_awid.bind(*p_15_s04_axi_awid);
        (*_glb_hdl_sc_channel_map)[32161].first = 3;
        (*_glb_hdl_sc_channel_map)[32161].second.push_front(p_15_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_awaddr.bind(*p_15_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[32158].first = 3;
        (*_glb_hdl_sc_channel_map)[32158].second.push_front(p_15_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_awlen.bind(*p_15_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map)[32162].first = 3;
        (*_glb_hdl_sc_channel_map)[32162].second.push_front(p_15_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awsize.bind(*p_15_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map)[32168].first = 3;
        (*_glb_hdl_sc_channel_map)[32168].second.push_front(p_15_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_awburst.bind(*p_15_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map)[32159].first = 3;
        (*_glb_hdl_sc_channel_map)[32159].second.push_front(p_15_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awlock.bind(*p_15_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map)[32163].first = 1;
        (*_glb_hdl_sc_channel_map)[32163].second.push_front(p_15_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awcache.bind(*p_15_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map)[32160].first = 3;
        (*_glb_hdl_sc_channel_map)[32160].second.push_front(p_15_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awprot.bind(*p_15_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map)[32164].first = 3;
        (*_glb_hdl_sc_channel_map)[32164].second.push_front(p_15_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awregion.bind(*p_15_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32167].first = 3;
        (*_glb_hdl_sc_channel_map)[32167].second.push_front(p_15_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awqos.bind(*p_15_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32165].first = 3;
        (*_glb_hdl_sc_channel_map)[32165].second.push_front(p_15_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awvalid.bind(*p_15_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[32169].first = 1;
        (*_glb_hdl_sc_channel_map)[32169].second.push_front(p_15_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awready.bind(*p_15_s04_axi_awready);
        p_15_s04_axi_awready->set_sv_netview_offsetfromdp(15302480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_wdata.bind(*p_15_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map)[32180].first = 3;
        (*_glb_hdl_sc_channel_map)[32180].second.push_front(p_15_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_wstrb.bind(*p_15_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[32183].first = 3;
        (*_glb_hdl_sc_channel_map)[32183].second.push_front(p_15_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wlast.bind(*p_15_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map)[32181].first = 1;
        (*_glb_hdl_sc_channel_map)[32181].second.push_front(p_15_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wvalid.bind(*p_15_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[32184].first = 1;
        (*_glb_hdl_sc_channel_map)[32184].second.push_front(p_15_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wready.bind(*p_15_s04_axi_wready);
        p_15_s04_axi_wready->set_sv_netview_offsetfromdp(15302760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_bid.bind(*p_15_s04_axi_bid);
        p_15_s04_axi_bid->set_sv_netview_offsetfromdp(15302816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_bresp.bind(*p_15_s04_axi_bresp);
        p_15_s04_axi_bresp->set_sv_netview_offsetfromdp(15302872);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bvalid.bind(*p_15_s04_axi_bvalid);
        p_15_s04_axi_bvalid->set_sv_netview_offsetfromdp(15302928);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bready.bind(*p_15_s04_axi_bready);
        (*_glb_hdl_sc_channel_map)[32171].first = 1;
        (*_glb_hdl_sc_channel_map)[32171].second.push_front(p_15_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_arid.bind(*p_15_s04_axi_arid);
        (*_glb_hdl_sc_channel_map)[32149].first = 3;
        (*_glb_hdl_sc_channel_map)[32149].second.push_front(p_15_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_araddr.bind(*p_15_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map)[32145].first = 3;
        (*_glb_hdl_sc_channel_map)[32145].second.push_front(p_15_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_arlen.bind(*p_15_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map)[32150].first = 3;
        (*_glb_hdl_sc_channel_map)[32150].second.push_front(p_15_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arsize.bind(*p_15_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map)[32156].first = 3;
        (*_glb_hdl_sc_channel_map)[32156].second.push_front(p_15_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_arburst.bind(*p_15_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map)[32146].first = 3;
        (*_glb_hdl_sc_channel_map)[32146].second.push_front(p_15_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arlock.bind(*p_15_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map)[32151].first = 1;
        (*_glb_hdl_sc_channel_map)[32151].second.push_front(p_15_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arcache.bind(*p_15_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map)[32147].first = 3;
        (*_glb_hdl_sc_channel_map)[32147].second.push_front(p_15_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arprot.bind(*p_15_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map)[32152].first = 3;
        (*_glb_hdl_sc_channel_map)[32152].second.push_front(p_15_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arregion.bind(*p_15_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map)[32155].first = 3;
        (*_glb_hdl_sc_channel_map)[32155].second.push_front(p_15_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arqos.bind(*p_15_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map)[32153].first = 3;
        (*_glb_hdl_sc_channel_map)[32153].second.push_front(p_15_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arvalid.bind(*p_15_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[32157].first = 1;
        (*_glb_hdl_sc_channel_map)[32157].second.push_front(p_15_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arready.bind(*p_15_s04_axi_arready);
        p_15_s04_axi_arready->set_sv_netview_offsetfromdp(15303656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_rid.bind(*p_15_s04_axi_rid);
        p_15_s04_axi_rid->set_sv_netview_offsetfromdp(15303712);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_rdata.bind(*p_15_s04_axi_rdata);
        p_15_s04_axi_rdata->set_sv_netview_offsetfromdp(15303768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_rresp.bind(*p_15_s04_axi_rresp);
        p_15_s04_axi_rresp->set_sv_netview_offsetfromdp(15303824);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rlast.bind(*p_15_s04_axi_rlast);
        p_15_s04_axi_rlast->set_sv_netview_offsetfromdp(15303880);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rvalid.bind(*p_15_s04_axi_rvalid);
        p_15_s04_axi_rvalid->set_sv_netview_offsetfromdp(15303936);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rready.bind(*p_15_s04_axi_rready);
        (*_glb_hdl_sc_channel_map)[32177].first = 1;
        (*_glb_hdl_sc_channel_map)[32177].second.push_front(p_15_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aclk.bind(*p_15_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[32144].first = 1;
        (*_glb_hdl_sc_channel_map)[32144].second.push_front(p_15_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aresetn.bind(*p_15_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[32148].first = 1;
        (*_glb_hdl_sc_channel_map)[32148].second.push_front(p_15_s04_axi_aresetn);
        sc_inst_16 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_16->xsim_set_dbg_index(14);
        sc_inst_17 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_17->xsim_set_dbg_index(1604);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_awaddr.bind(*p_17_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[38271].first = 3;
        (*_glb_hdl_sc_channel_map)[38271].second.push_front(p_17_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_awprot.bind(*p_17_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[38272].first = 3;
        (*_glb_hdl_sc_channel_map)[38272].second.push_front(p_17_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awvalid.bind(*p_17_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[38274].first = 1;
        (*_glb_hdl_sc_channel_map)[38274].second.push_front(p_17_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awready.bind(*p_17_saxi_lite_cq_awready);
        p_17_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(17459224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_wdata.bind(*p_17_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[38282].first = 3;
        (*_glb_hdl_sc_channel_map)[38282].second.push_front(p_17_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->saxi_lite_cq_wstrb.bind(*p_17_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[38284].first = 3;
        (*_glb_hdl_sc_channel_map)[38284].second.push_front(p_17_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wvalid.bind(*p_17_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[38285].first = 1;
        (*_glb_hdl_sc_channel_map)[38285].second.push_front(p_17_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wready.bind(*p_17_saxi_lite_cq_wready);
        p_17_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(17459448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_bresp.bind(*p_17_saxi_lite_cq_bresp);
        p_17_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(17459504);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bvalid.bind(*p_17_saxi_lite_cq_bvalid);
        p_17_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(17459560);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bready.bind(*p_17_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[38275].first = 1;
        (*_glb_hdl_sc_channel_map)[38275].second.push_front(p_17_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_araddr.bind(*p_17_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[38266].first = 3;
        (*_glb_hdl_sc_channel_map)[38266].second.push_front(p_17_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_arprot.bind(*p_17_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[38268].first = 3;
        (*_glb_hdl_sc_channel_map)[38268].second.push_front(p_17_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arvalid.bind(*p_17_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[38270].first = 1;
        (*_glb_hdl_sc_channel_map)[38270].second.push_front(p_17_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arready.bind(*p_17_saxi_lite_cq_arready);
        p_17_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(17459840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_rdata.bind(*p_17_saxi_lite_cq_rdata);
        p_17_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(17459896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_rresp.bind(*p_17_saxi_lite_cq_rresp);
        p_17_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(17459952);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rvalid.bind(*p_17_saxi_lite_cq_rvalid);
        p_17_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(17460008);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rready.bind(*p_17_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[38279].first = 1;
        (*_glb_hdl_sc_channel_map)[38279].second.push_front(p_17_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aclk.bind(*p_17_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[38265].first = 1;
        (*_glb_hdl_sc_channel_map)[38265].second.push_front(p_17_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aresetn.bind(*p_17_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[38267].first = 1;
        (*_glb_hdl_sc_channel_map)[38267].second.push_front(p_17_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_awaddr.bind(*p_17_maxi_lite_mb_awaddr);
        p_17_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(17460232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_awprot.bind(*p_17_maxi_lite_mb_awprot);
        p_17_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(17460288);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awvalid.bind(*p_17_maxi_lite_mb_awvalid);
        p_17_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(17460344);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awready.bind(*p_17_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[38252].first = 1;
        (*_glb_hdl_sc_channel_map)[38252].second.push_front(p_17_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_wdata.bind(*p_17_maxi_lite_mb_wdata);
        p_17_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(17460456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->maxi_lite_mb_wstrb.bind(*p_17_maxi_lite_mb_wstrb);
        p_17_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(17460512);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wvalid.bind(*p_17_maxi_lite_mb_wvalid);
        p_17_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(17460568);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wready.bind(*p_17_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[38262].first = 1;
        (*_glb_hdl_sc_channel_map)[38262].second.push_front(p_17_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_bresp.bind(*p_17_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[38255].first = 3;
        (*_glb_hdl_sc_channel_map)[38255].second.push_front(p_17_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bvalid.bind(*p_17_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[38256].first = 1;
        (*_glb_hdl_sc_channel_map)[38256].second.push_front(p_17_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bready.bind(*p_17_maxi_lite_mb_bready);
        p_17_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(17460792);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_araddr.bind(*p_17_maxi_lite_mb_araddr);
        p_17_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(17460848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_arprot.bind(*p_17_maxi_lite_mb_arprot);
        p_17_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(17460904);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arvalid.bind(*p_17_maxi_lite_mb_arvalid);
        p_17_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(17460960);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arready.bind(*p_17_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[38248].first = 1;
        (*_glb_hdl_sc_channel_map)[38248].second.push_front(p_17_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_rdata.bind(*p_17_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[38257].first = 3;
        (*_glb_hdl_sc_channel_map)[38257].second.push_front(p_17_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_rresp.bind(*p_17_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[38259].first = 3;
        (*_glb_hdl_sc_channel_map)[38259].second.push_front(p_17_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rvalid.bind(*p_17_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[38260].first = 1;
        (*_glb_hdl_sc_channel_map)[38260].second.push_front(p_17_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rready.bind(*p_17_maxi_lite_mb_rready);
        p_17_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(17461240);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aclk.bind(*p_17_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[38244].first = 1;
        (*_glb_hdl_sc_channel_map)[38244].second.push_front(p_17_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aresetn.bind(*p_17_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[38246].first = 1;
        (*_glb_hdl_sc_channel_map)[38246].second.push_front(p_17_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_17_irq = new xsim_sc_channel<0, bool >();
        sc_inst_17->irq.bind(*p_17_irq);
        (*_glb_hdl_sc_channel_map)[38243].first = 1;
        (*_glb_hdl_sc_channel_map)[38243].second.push_front(p_17_irq);
        sc_inst_18 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_18->xsim_set_dbg_index(283);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_awaddr.bind(*p_18_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[32803].first = 3;
        (*_glb_hdl_sc_channel_map)[32803].second.push_front(p_18_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_awlen.bind(*p_18_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[38368].first = 3;
        (*_glb_hdl_sc_channel_map)[38368].second.push_front(p_18_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awsize.bind(*p_18_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[38371].first = 3;
        (*_glb_hdl_sc_channel_map)[38371].second.push_front(p_18_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_awburst.bind(*p_18_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[38367].first = 3;
        (*_glb_hdl_sc_channel_map)[38367].second.push_front(p_18_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awlock.bind(*p_18_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[32801].first = 1;
        (*_glb_hdl_sc_channel_map)[32801].second.push_front(p_18_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awcache.bind(*p_18_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[32802].first = 3;
        (*_glb_hdl_sc_channel_map)[32802].second.push_front(p_18_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awprot.bind(*p_18_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[38369].first = 3;
        (*_glb_hdl_sc_channel_map)[38369].second.push_front(p_18_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awregion.bind(*p_18_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32799].first = 3;
        (*_glb_hdl_sc_channel_map)[32799].second.push_front(p_18_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awqos.bind(*p_18_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32800].first = 3;
        (*_glb_hdl_sc_channel_map)[32800].second.push_front(p_18_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awvalid.bind(*p_18_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[38372].first = 1;
        (*_glb_hdl_sc_channel_map)[38372].second.push_front(p_18_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awready.bind(*p_18_s00_axi_awready);
        p_18_s00_axi_awready->set_sv_netview_offsetfromdp(17471792);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_wdata.bind(*p_18_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[38381].first = 3;
        (*_glb_hdl_sc_channel_map)[38381].second.push_front(p_18_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_wstrb.bind(*p_18_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[38384].first = 3;
        (*_glb_hdl_sc_channel_map)[38384].second.push_front(p_18_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wlast.bind(*p_18_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[38382].first = 1;
        (*_glb_hdl_sc_channel_map)[38382].second.push_front(p_18_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wvalid.bind(*p_18_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[38385].first = 1;
        (*_glb_hdl_sc_channel_map)[38385].second.push_front(p_18_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wready.bind(*p_18_s00_axi_wready);
        p_18_s00_axi_wready->set_sv_netview_offsetfromdp(17472072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_bresp.bind(*p_18_s00_axi_bresp);
        p_18_s00_axi_bresp->set_sv_netview_offsetfromdp(17472128);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bvalid.bind(*p_18_s00_axi_bvalid);
        p_18_s00_axi_bvalid->set_sv_netview_offsetfromdp(17472184);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bready.bind(*p_18_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[38373].first = 1;
        (*_glb_hdl_sc_channel_map)[38373].second.push_front(p_18_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_araddr.bind(*p_18_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[32808].first = 3;
        (*_glb_hdl_sc_channel_map)[32808].second.push_front(p_18_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_arlen.bind(*p_18_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[38362].first = 3;
        (*_glb_hdl_sc_channel_map)[38362].second.push_front(p_18_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arsize.bind(*p_18_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[38365].first = 3;
        (*_glb_hdl_sc_channel_map)[38365].second.push_front(p_18_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_arburst.bind(*p_18_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[38360].first = 3;
        (*_glb_hdl_sc_channel_map)[38360].second.push_front(p_18_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arlock.bind(*p_18_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[32806].first = 1;
        (*_glb_hdl_sc_channel_map)[32806].second.push_front(p_18_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arcache.bind(*p_18_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[32807].first = 3;
        (*_glb_hdl_sc_channel_map)[32807].second.push_front(p_18_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arprot.bind(*p_18_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[38363].first = 3;
        (*_glb_hdl_sc_channel_map)[38363].second.push_front(p_18_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arregion.bind(*p_18_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[32804].first = 3;
        (*_glb_hdl_sc_channel_map)[32804].second.push_front(p_18_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arqos.bind(*p_18_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[32805].first = 3;
        (*_glb_hdl_sc_channel_map)[32805].second.push_front(p_18_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arvalid.bind(*p_18_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[38366].first = 1;
        (*_glb_hdl_sc_channel_map)[38366].second.push_front(p_18_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arready.bind(*p_18_s00_axi_arready);
        p_18_s00_axi_arready->set_sv_netview_offsetfromdp(17472856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_rdata.bind(*p_18_s00_axi_rdata);
        p_18_s00_axi_rdata->set_sv_netview_offsetfromdp(17472912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_rresp.bind(*p_18_s00_axi_rresp);
        p_18_s00_axi_rresp->set_sv_netview_offsetfromdp(17472968);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rlast.bind(*p_18_s00_axi_rlast);
        p_18_s00_axi_rlast->set_sv_netview_offsetfromdp(17473024);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rvalid.bind(*p_18_s00_axi_rvalid);
        p_18_s00_axi_rvalid->set_sv_netview_offsetfromdp(17473080);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rready.bind(*p_18_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[38378].first = 1;
        (*_glb_hdl_sc_channel_map)[38378].second.push_front(p_18_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aclk.bind(*p_18_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[38359].first = 1;
        (*_glb_hdl_sc_channel_map)[38359].second.push_front(p_18_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aresetn.bind(*p_18_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[38361].first = 1;
        (*_glb_hdl_sc_channel_map)[38361].second.push_front(p_18_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awid.bind(*p_18_m00_axi_awid);
        p_18_m00_axi_awid->set_sv_netview_offsetfromdp(17473304);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_awaddr.bind(*p_18_m00_axi_awaddr);
        p_18_m00_axi_awaddr->set_sv_netview_offsetfromdp(17473360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_awlen.bind(*p_18_m00_axi_awlen);
        p_18_m00_axi_awlen->set_sv_netview_offsetfromdp(17473416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awsize.bind(*p_18_m00_axi_awsize);
        p_18_m00_axi_awsize->set_sv_netview_offsetfromdp(17473472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_awburst.bind(*p_18_m00_axi_awburst);
        p_18_m00_axi_awburst->set_sv_netview_offsetfromdp(17473528);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awlock.bind(*p_18_m00_axi_awlock);
        p_18_m00_axi_awlock->set_sv_netview_offsetfromdp(17473584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awcache.bind(*p_18_m00_axi_awcache);
        p_18_m00_axi_awcache->set_sv_netview_offsetfromdp(17473640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awprot.bind(*p_18_m00_axi_awprot);
        p_18_m00_axi_awprot->set_sv_netview_offsetfromdp(17473696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awqos.bind(*p_18_m00_axi_awqos);
        p_18_m00_axi_awqos->set_sv_netview_offsetfromdp(17473752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awuser.bind(*p_18_m00_axi_awuser);
        p_18_m00_axi_awuser->set_sv_netview_offsetfromdp(17473808);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awvalid.bind(*p_18_m00_axi_awvalid);
        p_18_m00_axi_awvalid->set_sv_netview_offsetfromdp(17473864);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awready.bind(*p_18_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[38337].first = 1;
        (*_glb_hdl_sc_channel_map)[38337].second.push_front(p_18_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_wdata.bind(*p_18_m00_axi_wdata);
        p_18_m00_axi_wdata->set_sv_netview_offsetfromdp(17473976);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m00_axi_wstrb.bind(*p_18_m00_axi_wstrb);
        p_18_m00_axi_wstrb->set_sv_netview_offsetfromdp(17474032);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wlast.bind(*p_18_m00_axi_wlast);
        p_18_m00_axi_wlast->set_sv_netview_offsetfromdp(17474088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_wuser.bind(*p_18_m00_axi_wuser);
        p_18_m00_axi_wuser->set_sv_netview_offsetfromdp(17474144);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wvalid.bind(*p_18_m00_axi_wvalid);
        p_18_m00_axi_wvalid->set_sv_netview_offsetfromdp(17474200);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wready.bind(*p_18_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[38355].first = 1;
        (*_glb_hdl_sc_channel_map)[38355].second.push_front(p_18_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_bid.bind(*p_18_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[38341].first = 3;
        (*_glb_hdl_sc_channel_map)[38341].second.push_front(p_18_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_bresp.bind(*p_18_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[38343].first = 3;
        (*_glb_hdl_sc_channel_map)[38343].second.push_front(p_18_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_buser.bind(*p_18_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[38344].first = 3;
        (*_glb_hdl_sc_channel_map)[38344].second.push_front(p_18_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bvalid.bind(*p_18_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[38345].first = 1;
        (*_glb_hdl_sc_channel_map)[38345].second.push_front(p_18_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bready.bind(*p_18_m00_axi_bready);
        p_18_m00_axi_bready->set_sv_netview_offsetfromdp(17474536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_arid.bind(*p_18_m00_axi_arid);
        p_18_m00_axi_arid->set_sv_netview_offsetfromdp(17474592);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_araddr.bind(*p_18_m00_axi_araddr);
        p_18_m00_axi_araddr->set_sv_netview_offsetfromdp(17474648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_arlen.bind(*p_18_m00_axi_arlen);
        p_18_m00_axi_arlen->set_sv_netview_offsetfromdp(17474704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arsize.bind(*p_18_m00_axi_arsize);
        p_18_m00_axi_arsize->set_sv_netview_offsetfromdp(17474760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_arburst.bind(*p_18_m00_axi_arburst);
        p_18_m00_axi_arburst->set_sv_netview_offsetfromdp(17474816);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arlock.bind(*p_18_m00_axi_arlock);
        p_18_m00_axi_arlock->set_sv_netview_offsetfromdp(17474872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arcache.bind(*p_18_m00_axi_arcache);
        p_18_m00_axi_arcache->set_sv_netview_offsetfromdp(17474928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arprot.bind(*p_18_m00_axi_arprot);
        p_18_m00_axi_arprot->set_sv_netview_offsetfromdp(17474984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arqos.bind(*p_18_m00_axi_arqos);
        p_18_m00_axi_arqos->set_sv_netview_offsetfromdp(17475040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_aruser.bind(*p_18_m00_axi_aruser);
        p_18_m00_axi_aruser->set_sv_netview_offsetfromdp(17475096);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arvalid.bind(*p_18_m00_axi_arvalid);
        p_18_m00_axi_arvalid->set_sv_netview_offsetfromdp(17475152);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arready.bind(*p_18_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[38325].first = 1;
        (*_glb_hdl_sc_channel_map)[38325].second.push_front(p_18_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_rid.bind(*p_18_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[38347].first = 3;
        (*_glb_hdl_sc_channel_map)[38347].second.push_front(p_18_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_rdata.bind(*p_18_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[38346].first = 3;
        (*_glb_hdl_sc_channel_map)[38346].second.push_front(p_18_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_rresp.bind(*p_18_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[38350].first = 3;
        (*_glb_hdl_sc_channel_map)[38350].second.push_front(p_18_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rlast.bind(*p_18_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[38348].first = 1;
        (*_glb_hdl_sc_channel_map)[38348].second.push_front(p_18_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_ruser.bind(*p_18_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[38351].first = 3;
        (*_glb_hdl_sc_channel_map)[38351].second.push_front(p_18_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rvalid.bind(*p_18_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[38352].first = 1;
        (*_glb_hdl_sc_channel_map)[38352].second.push_front(p_18_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rready.bind(*p_18_m00_axi_rready);
        p_18_m00_axi_rready->set_sv_netview_offsetfromdp(17475600);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aclk.bind(*p_18_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[38315].first = 1;
        (*_glb_hdl_sc_channel_map)[38315].second.push_front(p_18_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aresetn.bind(*p_18_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[38319].first = 1;
        (*_glb_hdl_sc_channel_map)[38319].second.push_front(p_18_m00_axi_aresetn);
        sc_inst_19 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_19->xsim_set_dbg_index(285);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[32794].first = 3;
        (*_glb_hdl_sc_channel_map)[32794].second.push_front(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[38673].first = 1;
        (*_glb_hdl_sc_channel_map)[38673].second.push_front(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(17522104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[38681].first = 3;
        (*_glb_hdl_sc_channel_map)[38681].second.push_front(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[38683].first = 3;
        (*_glb_hdl_sc_channel_map)[38683].second.push_front(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[38684].first = 1;
        (*_glb_hdl_sc_channel_map)[38684].second.push_front(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(17522328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(17522384);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(17522440);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[38674].first = 1;
        (*_glb_hdl_sc_channel_map)[38674].second.push_front(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[32795].first = 3;
        (*_glb_hdl_sc_channel_map)[32795].second.push_front(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[38671].first = 1;
        (*_glb_hdl_sc_channel_map)[38671].second.push_front(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(17522664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(17522720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(17522776);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(17522832);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[38678].first = 1;
        (*_glb_hdl_sc_channel_map)[38678].second.push_front(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map)[38632].first = 1;
        (*_glb_hdl_sc_channel_map)[38632].second.push_front(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[38633].first = 1;
        (*_glb_hdl_sc_channel_map)[38633].second.push_front(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(17523056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(17523112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(17523168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(17523224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(17523280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(17523336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(17523392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(17523448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(17523504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(17523560);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(17523616);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[38653].first = 1;
        (*_glb_hdl_sc_channel_map)[38653].second.push_front(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(17523728);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(17523784);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(17523840);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(17523896);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[38667].first = 1;
        (*_glb_hdl_sc_channel_map)[38667].second.push_front(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[38658].first = 3;
        (*_glb_hdl_sc_channel_map)[38658].second.push_front(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[38659].first = 1;
        (*_glb_hdl_sc_channel_map)[38659].second.push_front(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(17524120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(17524176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(17524232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(17524288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(17524344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(17524400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(17524456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(17524512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(17524568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(17524624);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(17524680);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[38642].first = 1;
        (*_glb_hdl_sc_channel_map)[38642].second.push_front(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[38660].first = 3;
        (*_glb_hdl_sc_channel_map)[38660].second.push_front(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[38663].first = 3;
        (*_glb_hdl_sc_channel_map)[38663].second.push_front(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[38661].first = 1;
        (*_glb_hdl_sc_channel_map)[38661].second.push_front(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[38664].first = 1;
        (*_glb_hdl_sc_channel_map)[38664].second.push_front(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(17525016);
        sc_inst_20 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_20->xsim_set_dbg_index(286);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[32792].first = 3;
        (*_glb_hdl_sc_channel_map)[32792].second.push_front(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[38725].first = 1;
        (*_glb_hdl_sc_channel_map)[38725].second.push_front(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(17525232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[38733].first = 3;
        (*_glb_hdl_sc_channel_map)[38733].second.push_front(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[38735].first = 3;
        (*_glb_hdl_sc_channel_map)[38735].second.push_front(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[38736].first = 1;
        (*_glb_hdl_sc_channel_map)[38736].second.push_front(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(17525456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(17525512);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(17525568);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[38726].first = 1;
        (*_glb_hdl_sc_channel_map)[38726].second.push_front(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[32793].first = 3;
        (*_glb_hdl_sc_channel_map)[32793].second.push_front(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[38723].first = 1;
        (*_glb_hdl_sc_channel_map)[38723].second.push_front(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(17525792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(17525848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(17525904);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(17525960);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[38730].first = 1;
        (*_glb_hdl_sc_channel_map)[38730].second.push_front(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map)[38685].first = 1;
        (*_glb_hdl_sc_channel_map)[38685].second.push_front(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[38686].first = 1;
        (*_glb_hdl_sc_channel_map)[38686].second.push_front(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(17526184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(17526240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(17526296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(17526352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(17526408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(17526464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(17526520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(17526576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(17526632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(17526688);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(17526744);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[38705].first = 1;
        (*_glb_hdl_sc_channel_map)[38705].second.push_front(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(17526856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(17526912);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(17526968);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(17527024);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[38719].first = 1;
        (*_glb_hdl_sc_channel_map)[38719].second.push_front(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[38710].first = 3;
        (*_glb_hdl_sc_channel_map)[38710].second.push_front(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[38711].first = 1;
        (*_glb_hdl_sc_channel_map)[38711].second.push_front(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(17527248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(17527304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(17527360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(17527416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(17527472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(17527528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(17527584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(17527640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(17527696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(17527752);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(17527808);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[38694].first = 1;
        (*_glb_hdl_sc_channel_map)[38694].second.push_front(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[38712].first = 3;
        (*_glb_hdl_sc_channel_map)[38712].second.push_front(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[38715].first = 3;
        (*_glb_hdl_sc_channel_map)[38715].second.push_front(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[38713].first = 1;
        (*_glb_hdl_sc_channel_map)[38713].second.push_front(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[38716].first = 1;
        (*_glb_hdl_sc_channel_map)[38716].second.push_front(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(17528144);
        sc_inst_21 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_21->xsim_set_dbg_index(287);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[32790].first = 3;
        (*_glb_hdl_sc_channel_map)[32790].second.push_front(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[38778].first = 1;
        (*_glb_hdl_sc_channel_map)[38778].second.push_front(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(17528360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[38786].first = 3;
        (*_glb_hdl_sc_channel_map)[38786].second.push_front(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[38788].first = 3;
        (*_glb_hdl_sc_channel_map)[38788].second.push_front(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[38789].first = 1;
        (*_glb_hdl_sc_channel_map)[38789].second.push_front(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(17528584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(17528640);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(17528696);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[38779].first = 1;
        (*_glb_hdl_sc_channel_map)[38779].second.push_front(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[32791].first = 3;
        (*_glb_hdl_sc_channel_map)[32791].second.push_front(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[38776].first = 1;
        (*_glb_hdl_sc_channel_map)[38776].second.push_front(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(17528920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(17528976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(17529032);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(17529088);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[38783].first = 1;
        (*_glb_hdl_sc_channel_map)[38783].second.push_front(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map)[38738].first = 1;
        (*_glb_hdl_sc_channel_map)[38738].second.push_front(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[38739].first = 1;
        (*_glb_hdl_sc_channel_map)[38739].second.push_front(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(17529312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(17529368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(17529424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(17529480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(17529536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(17529592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(17529648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(17529704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(17529760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(17529816);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(17529872);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[38758].first = 1;
        (*_glb_hdl_sc_channel_map)[38758].second.push_front(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(17529984);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(17530040);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(17530096);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(17530152);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[38772].first = 1;
        (*_glb_hdl_sc_channel_map)[38772].second.push_front(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[38763].first = 3;
        (*_glb_hdl_sc_channel_map)[38763].second.push_front(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[38764].first = 1;
        (*_glb_hdl_sc_channel_map)[38764].second.push_front(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(17530376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(17530432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(17530488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(17530544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(17530600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(17530656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(17530712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(17530768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(17530824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(17530880);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(17530936);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[38747].first = 1;
        (*_glb_hdl_sc_channel_map)[38747].second.push_front(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[38765].first = 3;
        (*_glb_hdl_sc_channel_map)[38765].second.push_front(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[38768].first = 3;
        (*_glb_hdl_sc_channel_map)[38768].second.push_front(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[38766].first = 1;
        (*_glb_hdl_sc_channel_map)[38766].second.push_front(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[38769].first = 1;
        (*_glb_hdl_sc_channel_map)[38769].second.push_front(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(17531272);
        sc_inst_22 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_22->xsim_set_dbg_index(288);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_AWADDR.bind(*p_22_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[32788].first = 3;
        (*_glb_hdl_sc_channel_map)[32788].second.push_front(p_22_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWVALID.bind(*p_22_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[38831].first = 1;
        (*_glb_hdl_sc_channel_map)[38831].second.push_front(p_22_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWREADY.bind(*p_22_s_axi_control_AWREADY);
        p_22_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(17531488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_WDATA.bind(*p_22_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[38839].first = 3;
        (*_glb_hdl_sc_channel_map)[38839].second.push_front(p_22_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_control_WSTRB.bind(*p_22_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[38841].first = 3;
        (*_glb_hdl_sc_channel_map)[38841].second.push_front(p_22_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WVALID.bind(*p_22_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[38842].first = 1;
        (*_glb_hdl_sc_channel_map)[38842].second.push_front(p_22_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WREADY.bind(*p_22_s_axi_control_WREADY);
        p_22_s_axi_control_WREADY->set_sv_netview_offsetfromdp(17531712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_BRESP.bind(*p_22_s_axi_control_BRESP);
        p_22_s_axi_control_BRESP->set_sv_netview_offsetfromdp(17531768);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BVALID.bind(*p_22_s_axi_control_BVALID);
        p_22_s_axi_control_BVALID->set_sv_netview_offsetfromdp(17531824);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BREADY.bind(*p_22_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[38832].first = 1;
        (*_glb_hdl_sc_channel_map)[38832].second.push_front(p_22_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_ARADDR.bind(*p_22_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[32789].first = 3;
        (*_glb_hdl_sc_channel_map)[32789].second.push_front(p_22_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARVALID.bind(*p_22_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[38829].first = 1;
        (*_glb_hdl_sc_channel_map)[38829].second.push_front(p_22_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARREADY.bind(*p_22_s_axi_control_ARREADY);
        p_22_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(17532048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_RDATA.bind(*p_22_s_axi_control_RDATA);
        p_22_s_axi_control_RDATA->set_sv_netview_offsetfromdp(17532104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_RRESP.bind(*p_22_s_axi_control_RRESP);
        p_22_s_axi_control_RRESP->set_sv_netview_offsetfromdp(17532160);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RVALID.bind(*p_22_s_axi_control_RVALID);
        p_22_s_axi_control_RVALID->set_sv_netview_offsetfromdp(17532216);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RREADY.bind(*p_22_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[38836].first = 1;
        (*_glb_hdl_sc_channel_map)[38836].second.push_front(p_22_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_22_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_clk.bind(*p_22_ap_clk);
        (*_glb_hdl_sc_channel_map)[38791].first = 1;
        (*_glb_hdl_sc_channel_map)[38791].second.push_front(p_22_ap_clk);
        xsim_sc_channel<0, bool > *p_22_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_rst_n.bind(*p_22_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[38792].first = 1;
        (*_glb_hdl_sc_channel_map)[38792].second.push_front(p_22_ap_rst_n);
        xsim_sc_channel<0, bool > *p_22_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_22->interrupt.bind(*p_22_interrupt);
        p_22_interrupt->set_sv_netview_offsetfromdp(17532440);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_AWADDR.bind(*p_22_m_axi_gmem_AWADDR);
        p_22_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(17532496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_AWLEN.bind(*p_22_m_axi_gmem_AWLEN);
        p_22_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(17532552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWSIZE.bind(*p_22_m_axi_gmem_AWSIZE);
        p_22_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(17532608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_AWBURST.bind(*p_22_m_axi_gmem_AWBURST);
        p_22_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(17532664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_AWLOCK.bind(*p_22_m_axi_gmem_AWLOCK);
        p_22_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(17532720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWREGION.bind(*p_22_m_axi_gmem_AWREGION);
        p_22_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(17532776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWCACHE.bind(*p_22_m_axi_gmem_AWCACHE);
        p_22_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(17532832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWPROT.bind(*p_22_m_axi_gmem_AWPROT);
        p_22_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(17532888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWQOS.bind(*p_22_m_axi_gmem_AWQOS);
        p_22_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(17532944);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWVALID.bind(*p_22_m_axi_gmem_AWVALID);
        p_22_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(17533000);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWREADY.bind(*p_22_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[38811].first = 1;
        (*_glb_hdl_sc_channel_map)[38811].second.push_front(p_22_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_WDATA.bind(*p_22_m_axi_gmem_WDATA);
        p_22_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(17533112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_WSTRB.bind(*p_22_m_axi_gmem_WSTRB);
        p_22_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(17533168);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WLAST.bind(*p_22_m_axi_gmem_WLAST);
        p_22_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(17533224);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WVALID.bind(*p_22_m_axi_gmem_WVALID);
        p_22_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(17533280);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WREADY.bind(*p_22_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[38825].first = 1;
        (*_glb_hdl_sc_channel_map)[38825].second.push_front(p_22_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_BRESP.bind(*p_22_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[38816].first = 3;
        (*_glb_hdl_sc_channel_map)[38816].second.push_front(p_22_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BVALID.bind(*p_22_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[38817].first = 1;
        (*_glb_hdl_sc_channel_map)[38817].second.push_front(p_22_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BREADY.bind(*p_22_m_axi_gmem_BREADY);
        p_22_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(17533504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_ARADDR.bind(*p_22_m_axi_gmem_ARADDR);
        p_22_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(17533560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_ARLEN.bind(*p_22_m_axi_gmem_ARLEN);
        p_22_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(17533616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARSIZE.bind(*p_22_m_axi_gmem_ARSIZE);
        p_22_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(17533672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_ARBURST.bind(*p_22_m_axi_gmem_ARBURST);
        p_22_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(17533728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_ARLOCK.bind(*p_22_m_axi_gmem_ARLOCK);
        p_22_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(17533784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARREGION.bind(*p_22_m_axi_gmem_ARREGION);
        p_22_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(17533840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARCACHE.bind(*p_22_m_axi_gmem_ARCACHE);
        p_22_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(17533896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARPROT.bind(*p_22_m_axi_gmem_ARPROT);
        p_22_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(17533952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARQOS.bind(*p_22_m_axi_gmem_ARQOS);
        p_22_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(17534008);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARVALID.bind(*p_22_m_axi_gmem_ARVALID);
        p_22_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(17534064);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARREADY.bind(*p_22_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[38800].first = 1;
        (*_glb_hdl_sc_channel_map)[38800].second.push_front(p_22_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_RDATA.bind(*p_22_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[38818].first = 3;
        (*_glb_hdl_sc_channel_map)[38818].second.push_front(p_22_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_RRESP.bind(*p_22_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[38821].first = 3;
        (*_glb_hdl_sc_channel_map)[38821].second.push_front(p_22_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RLAST.bind(*p_22_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[38819].first = 1;
        (*_glb_hdl_sc_channel_map)[38819].second.push_front(p_22_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RVALID.bind(*p_22_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[38822].first = 1;
        (*_glb_hdl_sc_channel_map)[38822].second.push_front(p_22_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RREADY.bind(*p_22_m_axi_gmem_RREADY);
        p_22_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(17534400);
        sc_inst_23 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_23->xsim_set_dbg_index(289);
        xsim_sc_channel<0, bool > *p_23_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ui_clk.bind(*p_23_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[38888].first = 1;
        (*_glb_hdl_sc_channel_map)[38888].second.push_front(p_23_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awid.bind(*p_23_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[38861].first = 3;
        (*_glb_hdl_sc_channel_map)[38861].second.push_front(p_23_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_awaddr.bind(*p_23_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[38858].first = 3;
        (*_glb_hdl_sc_channel_map)[38858].second.push_front(p_23_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_awlen.bind(*p_23_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[38862].first = 3;
        (*_glb_hdl_sc_channel_map)[38862].second.push_front(p_23_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awsize.bind(*p_23_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[38867].first = 3;
        (*_glb_hdl_sc_channel_map)[38867].second.push_front(p_23_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_awburst.bind(*p_23_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[38859].first = 3;
        (*_glb_hdl_sc_channel_map)[38859].second.push_front(p_23_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awlock.bind(*p_23_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[38863].first = 1;
        (*_glb_hdl_sc_channel_map)[38863].second.push_front(p_23_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awcache.bind(*p_23_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[38860].first = 3;
        (*_glb_hdl_sc_channel_map)[38860].second.push_front(p_23_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awprot.bind(*p_23_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[38864].first = 3;
        (*_glb_hdl_sc_channel_map)[38864].second.push_front(p_23_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awregion.bind(*p_23_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[32786].first = 3;
        (*_glb_hdl_sc_channel_map)[32786].second.push_front(p_23_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awqos.bind(*p_23_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[38865].first = 3;
        (*_glb_hdl_sc_channel_map)[38865].second.push_front(p_23_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awuser.bind(*p_23_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[38868].first = 3;
        (*_glb_hdl_sc_channel_map)[38868].second.push_front(p_23_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awvalid.bind(*p_23_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[38869].first = 1;
        (*_glb_hdl_sc_channel_map)[38869].second.push_front(p_23_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awready.bind(*p_23_c0_ddr_saxi_awready);
        p_23_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(17535232);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_wdata.bind(*p_23_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[38882].first = 3;
        (*_glb_hdl_sc_channel_map)[38882].second.push_front(p_23_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->c0_ddr_saxi_wstrb.bind(*p_23_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[38885].first = 3;
        (*_glb_hdl_sc_channel_map)[38885].second.push_front(p_23_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wlast.bind(*p_23_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[38883].first = 1;
        (*_glb_hdl_sc_channel_map)[38883].second.push_front(p_23_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_wuser.bind(*p_23_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[38886].first = 3;
        (*_glb_hdl_sc_channel_map)[38886].second.push_front(p_23_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wvalid.bind(*p_23_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[38887].first = 1;
        (*_glb_hdl_sc_channel_map)[38887].second.push_front(p_23_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wready.bind(*p_23_c0_ddr_saxi_wready);
        p_23_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(17535568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_bid.bind(*p_23_c0_ddr_saxi_bid);
        p_23_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(17535624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_bresp.bind(*p_23_c0_ddr_saxi_bresp);
        p_23_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(17535680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_buser.bind(*p_23_c0_ddr_saxi_buser);
        p_23_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(17535736);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bvalid.bind(*p_23_c0_ddr_saxi_bvalid);
        p_23_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(17535792);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bready.bind(*p_23_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[38871].first = 1;
        (*_glb_hdl_sc_channel_map)[38871].second.push_front(p_23_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_arid.bind(*p_23_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[38849].first = 3;
        (*_glb_hdl_sc_channel_map)[38849].second.push_front(p_23_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_araddr.bind(*p_23_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[38845].first = 3;
        (*_glb_hdl_sc_channel_map)[38845].second.push_front(p_23_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_arlen.bind(*p_23_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[38850].first = 3;
        (*_glb_hdl_sc_channel_map)[38850].second.push_front(p_23_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arsize.bind(*p_23_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[38855].first = 3;
        (*_glb_hdl_sc_channel_map)[38855].second.push_front(p_23_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_arburst.bind(*p_23_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[38846].first = 3;
        (*_glb_hdl_sc_channel_map)[38846].second.push_front(p_23_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arlock.bind(*p_23_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[38851].first = 1;
        (*_glb_hdl_sc_channel_map)[38851].second.push_front(p_23_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arcache.bind(*p_23_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[38847].first = 3;
        (*_glb_hdl_sc_channel_map)[38847].second.push_front(p_23_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arprot.bind(*p_23_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[38852].first = 3;
        (*_glb_hdl_sc_channel_map)[38852].second.push_front(p_23_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arregion.bind(*p_23_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[32787].first = 3;
        (*_glb_hdl_sc_channel_map)[32787].second.push_front(p_23_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arqos.bind(*p_23_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[38853].first = 3;
        (*_glb_hdl_sc_channel_map)[38853].second.push_front(p_23_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_aruser.bind(*p_23_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[38856].first = 3;
        (*_glb_hdl_sc_channel_map)[38856].second.push_front(p_23_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arvalid.bind(*p_23_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[38857].first = 1;
        (*_glb_hdl_sc_channel_map)[38857].second.push_front(p_23_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arready.bind(*p_23_c0_ddr_saxi_arready);
        p_23_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(17536576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_rid.bind(*p_23_c0_ddr_saxi_rid);
        p_23_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(17536632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_rdata.bind(*p_23_c0_ddr_saxi_rdata);
        p_23_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(17536688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_rresp.bind(*p_23_c0_ddr_saxi_rresp);
        p_23_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(17536744);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rlast.bind(*p_23_c0_ddr_saxi_rlast);
        p_23_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(17536800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_ruser.bind(*p_23_c0_ddr_saxi_ruser);
        p_23_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(17536856);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rvalid.bind(*p_23_c0_ddr_saxi_rvalid);
        p_23_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(17536912);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rready.bind(*p_23_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[38878].first = 1;
        (*_glb_hdl_sc_channel_map)[38878].second.push_front(p_23_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aclk.bind(*p_23_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[38844].first = 1;
        (*_glb_hdl_sc_channel_map)[38844].second.push_front(p_23_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aresetn.bind(*p_23_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[38848].first = 1;
        (*_glb_hdl_sc_channel_map)[38848].second.push_front(p_23_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_awid.bind(*p_23_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[32770].first = 3;
        (*_glb_hdl_sc_channel_map)[32770].second.push_front(p_23_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awaddr.bind(*p_23_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[32773].first = 3;
        (*_glb_hdl_sc_channel_map)[32773].second.push_front(p_23_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_awlen.bind(*p_23_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[32769].first = 3;
        (*_glb_hdl_sc_channel_map)[32769].second.push_front(p_23_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awsize.bind(*p_23_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[32764].first = 3;
        (*_glb_hdl_sc_channel_map)[32764].second.push_front(p_23_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_awburst.bind(*p_23_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[32772].first = 3;
        (*_glb_hdl_sc_channel_map)[32772].second.push_front(p_23_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awlock.bind(*p_23_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[32768].first = 1;
        (*_glb_hdl_sc_channel_map)[32768].second.push_front(p_23_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awcache.bind(*p_23_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[32771].first = 3;
        (*_glb_hdl_sc_channel_map)[32771].second.push_front(p_23_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awprot.bind(*p_23_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[32767].first = 3;
        (*_glb_hdl_sc_channel_map)[32767].second.push_front(p_23_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awregion.bind(*p_23_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32765].first = 3;
        (*_glb_hdl_sc_channel_map)[32765].second.push_front(p_23_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awqos.bind(*p_23_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32766].first = 3;
        (*_glb_hdl_sc_channel_map)[32766].second.push_front(p_23_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awuser.bind(*p_23_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[32763].first = 3;
        (*_glb_hdl_sc_channel_map)[32763].second.push_front(p_23_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awvalid.bind(*p_23_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[32762].first = 1;
        (*_glb_hdl_sc_channel_map)[32762].second.push_front(p_23_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awready.bind(*p_23_s_xdma_axi_awready);
        p_23_s_xdma_axi_awready->set_sv_netview_offsetfromdp(17537808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_wdata.bind(*p_23_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[32759].first = 3;
        (*_glb_hdl_sc_channel_map)[32759].second.push_front(p_23_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_wstrb.bind(*p_23_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[32757].first = 3;
        (*_glb_hdl_sc_channel_map)[32757].second.push_front(p_23_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wlast.bind(*p_23_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[32758].first = 1;
        (*_glb_hdl_sc_channel_map)[32758].second.push_front(p_23_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_wuser.bind(*p_23_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[32756].first = 3;
        (*_glb_hdl_sc_channel_map)[32756].second.push_front(p_23_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wvalid.bind(*p_23_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[32755].first = 1;
        (*_glb_hdl_sc_channel_map)[32755].second.push_front(p_23_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wready.bind(*p_23_s_xdma_axi_wready);
        p_23_s_xdma_axi_wready->set_sv_netview_offsetfromdp(17538144);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_bid.bind(*p_23_s_xdma_axi_bid);
        p_23_s_xdma_axi_bid->set_sv_netview_offsetfromdp(17538200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_bresp.bind(*p_23_s_xdma_axi_bresp);
        p_23_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(17538256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_buser.bind(*p_23_s_xdma_axi_buser);
        p_23_s_xdma_axi_buser->set_sv_netview_offsetfromdp(17538312);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bvalid.bind(*p_23_s_xdma_axi_bvalid);
        p_23_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(17538368);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bready.bind(*p_23_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[32761].first = 1;
        (*_glb_hdl_sc_channel_map)[32761].second.push_front(p_23_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_arid.bind(*p_23_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[32782].first = 3;
        (*_glb_hdl_sc_channel_map)[32782].second.push_front(p_23_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_araddr.bind(*p_23_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[32785].first = 3;
        (*_glb_hdl_sc_channel_map)[32785].second.push_front(p_23_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_arlen.bind(*p_23_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[32781].first = 3;
        (*_glb_hdl_sc_channel_map)[32781].second.push_front(p_23_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arsize.bind(*p_23_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[32776].first = 3;
        (*_glb_hdl_sc_channel_map)[32776].second.push_front(p_23_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_arburst.bind(*p_23_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[32784].first = 3;
        (*_glb_hdl_sc_channel_map)[32784].second.push_front(p_23_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arlock.bind(*p_23_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[32780].first = 1;
        (*_glb_hdl_sc_channel_map)[32780].second.push_front(p_23_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arcache.bind(*p_23_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[32783].first = 3;
        (*_glb_hdl_sc_channel_map)[32783].second.push_front(p_23_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arprot.bind(*p_23_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[32779].first = 3;
        (*_glb_hdl_sc_channel_map)[32779].second.push_front(p_23_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arregion.bind(*p_23_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[32777].first = 3;
        (*_glb_hdl_sc_channel_map)[32777].second.push_front(p_23_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arqos.bind(*p_23_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[32778].first = 3;
        (*_glb_hdl_sc_channel_map)[32778].second.push_front(p_23_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_aruser.bind(*p_23_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[32775].first = 3;
        (*_glb_hdl_sc_channel_map)[32775].second.push_front(p_23_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arvalid.bind(*p_23_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[32774].first = 1;
        (*_glb_hdl_sc_channel_map)[32774].second.push_front(p_23_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arready.bind(*p_23_s_xdma_axi_arready);
        p_23_s_xdma_axi_arready->set_sv_netview_offsetfromdp(17539152);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_rid.bind(*p_23_s_xdma_axi_rid);
        p_23_s_xdma_axi_rid->set_sv_netview_offsetfromdp(17539208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_rdata.bind(*p_23_s_xdma_axi_rdata);
        p_23_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(17539264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_rresp.bind(*p_23_s_xdma_axi_rresp);
        p_23_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(17539320);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rlast.bind(*p_23_s_xdma_axi_rlast);
        p_23_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(17539376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_ruser.bind(*p_23_s_xdma_axi_ruser);
        p_23_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(17539432);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rvalid.bind(*p_23_s_xdma_axi_rvalid);
        p_23_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(17539488);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rready.bind(*p_23_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[32760].first = 1;
        (*_glb_hdl_sc_channel_map)[32760].second.push_front(p_23_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aclk.bind(*p_23_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[38889].first = 1;
        (*_glb_hdl_sc_channel_map)[38889].second.push_front(p_23_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aresetn.bind(*p_23_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[38890].first = 1;
        (*_glb_hdl_sc_channel_map)[38890].second.push_front(p_23_s_xdma_axi_aresetn);
        sc_inst_24 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_24->xsim_set_dbg_index(290);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_awid.bind(*p_24_m_aximm_awid);
        p_24_m_aximm_awid->set_sv_netview_offsetfromdp(17539760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_awaddr.bind(*p_24_m_aximm_awaddr);
        p_24_m_aximm_awaddr->set_sv_netview_offsetfromdp(17539816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_awlen.bind(*p_24_m_aximm_awlen);
        p_24_m_aximm_awlen->set_sv_netview_offsetfromdp(17539872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awsize.bind(*p_24_m_aximm_awsize);
        p_24_m_aximm_awsize->set_sv_netview_offsetfromdp(17539928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_awburst.bind(*p_24_m_aximm_awburst);
        p_24_m_aximm_awburst->set_sv_netview_offsetfromdp(17539984);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awlock.bind(*p_24_m_aximm_awlock);
        p_24_m_aximm_awlock->set_sv_netview_offsetfromdp(17540040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awcache.bind(*p_24_m_aximm_awcache);
        p_24_m_aximm_awcache->set_sv_netview_offsetfromdp(17540096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awprot.bind(*p_24_m_aximm_awprot);
        p_24_m_aximm_awprot->set_sv_netview_offsetfromdp(17540152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awqos.bind(*p_24_m_aximm_awqos);
        p_24_m_aximm_awqos->set_sv_netview_offsetfromdp(17540208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_awuser.bind(*p_24_m_aximm_awuser);
        p_24_m_aximm_awuser->set_sv_netview_offsetfromdp(17540264);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awvalid.bind(*p_24_m_aximm_awvalid);
        p_24_m_aximm_awvalid->set_sv_netview_offsetfromdp(17540320);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awready.bind(*p_24_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[38946].first = 1;
        (*_glb_hdl_sc_channel_map)[38946].second.push_front(p_24_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_wdata.bind(*p_24_m_aximm_wdata);
        p_24_m_aximm_wdata->set_sv_netview_offsetfromdp(17540432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_wstrb.bind(*p_24_m_aximm_wstrb);
        p_24_m_aximm_wstrb->set_sv_netview_offsetfromdp(17540488);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wlast.bind(*p_24_m_aximm_wlast);
        p_24_m_aximm_wlast->set_sv_netview_offsetfromdp(17540544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_wuser.bind(*p_24_m_aximm_wuser);
        p_24_m_aximm_wuser->set_sv_netview_offsetfromdp(17540600);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wvalid.bind(*p_24_m_aximm_wvalid);
        p_24_m_aximm_wvalid->set_sv_netview_offsetfromdp(17540656);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wready.bind(*p_24_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[38961].first = 1;
        (*_glb_hdl_sc_channel_map)[38961].second.push_front(p_24_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_bid.bind(*p_24_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[38949].first = 3;
        (*_glb_hdl_sc_channel_map)[38949].second.push_front(p_24_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_bresp.bind(*p_24_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[38951].first = 3;
        (*_glb_hdl_sc_channel_map)[38951].second.push_front(p_24_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_buser.bind(*p_24_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[32754].first = 3;
        (*_glb_hdl_sc_channel_map)[32754].second.push_front(p_24_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bvalid.bind(*p_24_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[38952].first = 1;
        (*_glb_hdl_sc_channel_map)[38952].second.push_front(p_24_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bready.bind(*p_24_m_aximm_bready);
        p_24_m_aximm_bready->set_sv_netview_offsetfromdp(17540992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_arid.bind(*p_24_m_aximm_arid);
        p_24_m_aximm_arid->set_sv_netview_offsetfromdp(17541048);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_araddr.bind(*p_24_m_aximm_araddr);
        p_24_m_aximm_araddr->set_sv_netview_offsetfromdp(17541104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_arlen.bind(*p_24_m_aximm_arlen);
        p_24_m_aximm_arlen->set_sv_netview_offsetfromdp(17541160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arsize.bind(*p_24_m_aximm_arsize);
        p_24_m_aximm_arsize->set_sv_netview_offsetfromdp(17541216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_arburst.bind(*p_24_m_aximm_arburst);
        p_24_m_aximm_arburst->set_sv_netview_offsetfromdp(17541272);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arlock.bind(*p_24_m_aximm_arlock);
        p_24_m_aximm_arlock->set_sv_netview_offsetfromdp(17541328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arcache.bind(*p_24_m_aximm_arcache);
        p_24_m_aximm_arcache->set_sv_netview_offsetfromdp(17541384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arprot.bind(*p_24_m_aximm_arprot);
        p_24_m_aximm_arprot->set_sv_netview_offsetfromdp(17541440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arqos.bind(*p_24_m_aximm_arqos);
        p_24_m_aximm_arqos->set_sv_netview_offsetfromdp(17541496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_aruser.bind(*p_24_m_aximm_aruser);
        p_24_m_aximm_aruser->set_sv_netview_offsetfromdp(17541552);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arvalid.bind(*p_24_m_aximm_arvalid);
        p_24_m_aximm_arvalid->set_sv_netview_offsetfromdp(17541608);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arready.bind(*p_24_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[38935].first = 1;
        (*_glb_hdl_sc_channel_map)[38935].second.push_front(p_24_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_rid.bind(*p_24_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[38954].first = 3;
        (*_glb_hdl_sc_channel_map)[38954].second.push_front(p_24_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_rdata.bind(*p_24_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[38953].first = 3;
        (*_glb_hdl_sc_channel_map)[38953].second.push_front(p_24_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_rresp.bind(*p_24_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[38957].first = 3;
        (*_glb_hdl_sc_channel_map)[38957].second.push_front(p_24_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rlast.bind(*p_24_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[38955].first = 1;
        (*_glb_hdl_sc_channel_map)[38955].second.push_front(p_24_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_ruser.bind(*p_24_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[32753].first = 3;
        (*_glb_hdl_sc_channel_map)[32753].second.push_front(p_24_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rvalid.bind(*p_24_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[38958].first = 1;
        (*_glb_hdl_sc_channel_map)[38958].second.push_front(p_24_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rready.bind(*p_24_m_aximm_rready);
        p_24_m_aximm_rready->set_sv_netview_offsetfromdp(17542056);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aclk.bind(*p_24_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[38925].first = 1;
        (*_glb_hdl_sc_channel_map)[38925].second.push_front(p_24_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aresetn.bind(*p_24_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[38929].first = 1;
        (*_glb_hdl_sc_channel_map)[38929].second.push_front(p_24_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_awaddr.bind(*p_24_m_axictrl_awaddr);
        p_24_m_axictrl_awaddr->set_sv_netview_offsetfromdp(17542224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_awprot.bind(*p_24_m_axictrl_awprot);
        p_24_m_axictrl_awprot->set_sv_netview_offsetfromdp(17542280);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awvalid.bind(*p_24_m_axictrl_awvalid);
        p_24_m_axictrl_awvalid->set_sv_netview_offsetfromdp(17542336);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awready.bind(*p_24_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[38912].first = 1;
        (*_glb_hdl_sc_channel_map)[38912].second.push_front(p_24_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_wdata.bind(*p_24_m_axictrl_wdata);
        p_24_m_axictrl_wdata->set_sv_netview_offsetfromdp(17542448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axictrl_wstrb.bind(*p_24_m_axictrl_wstrb);
        p_24_m_axictrl_wstrb->set_sv_netview_offsetfromdp(17542504);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wvalid.bind(*p_24_m_axictrl_wvalid);
        p_24_m_axictrl_wvalid->set_sv_netview_offsetfromdp(17542560);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wready.bind(*p_24_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[38922].first = 1;
        (*_glb_hdl_sc_channel_map)[38922].second.push_front(p_24_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_bresp.bind(*p_24_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[38915].first = 3;
        (*_glb_hdl_sc_channel_map)[38915].second.push_front(p_24_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bvalid.bind(*p_24_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[38916].first = 1;
        (*_glb_hdl_sc_channel_map)[38916].second.push_front(p_24_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bready.bind(*p_24_m_axictrl_bready);
        p_24_m_axictrl_bready->set_sv_netview_offsetfromdp(17542784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_araddr.bind(*p_24_m_axictrl_araddr);
        p_24_m_axictrl_araddr->set_sv_netview_offsetfromdp(17542840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_arprot.bind(*p_24_m_axictrl_arprot);
        p_24_m_axictrl_arprot->set_sv_netview_offsetfromdp(17542896);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arvalid.bind(*p_24_m_axictrl_arvalid);
        p_24_m_axictrl_arvalid->set_sv_netview_offsetfromdp(17542952);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arready.bind(*p_24_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[38908].first = 1;
        (*_glb_hdl_sc_channel_map)[38908].second.push_front(p_24_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_rdata.bind(*p_24_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[38917].first = 3;
        (*_glb_hdl_sc_channel_map)[38917].second.push_front(p_24_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_rresp.bind(*p_24_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[38919].first = 3;
        (*_glb_hdl_sc_channel_map)[38919].second.push_front(p_24_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rvalid.bind(*p_24_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[38920].first = 1;
        (*_glb_hdl_sc_channel_map)[38920].second.push_front(p_24_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rready.bind(*p_24_m_axictrl_rready);
        p_24_m_axictrl_rready->set_sv_netview_offsetfromdp(17543232);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aclk.bind(*p_24_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[38904].first = 1;
        (*_glb_hdl_sc_channel_map)[38904].second.push_front(p_24_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aresetn.bind(*p_24_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[38906].first = 1;
        (*_glb_hdl_sc_channel_map)[38906].second.push_front(p_24_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
    }
